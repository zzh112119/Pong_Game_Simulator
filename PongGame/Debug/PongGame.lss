
PongGame.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000476  00800100  000020fa  0000218e  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         000020fa  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          0000000f  00800576  00800576  00002604  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  00002604  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00002660  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000148  00000000  00000000  000026a0  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   0000248c  00000000  00000000  000027e8  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000b68  00000000  00000000  00004c74  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000e48  00000000  00000000  000057dc  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000460  00000000  00000000  00006624  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000722  00000000  00000000  00006a84  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    000019e4  00000000  00000000  000071a6  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000148  00000000  00000000  00008b8a  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 33 03 	jmp	0x666	; 0x666 <__ctors_end>
       4:	0c 94 50 03 	jmp	0x6a0	; 0x6a0 <__bad_interrupt>
       8:	0c 94 50 03 	jmp	0x6a0	; 0x6a0 <__bad_interrupt>
       c:	0c 94 50 03 	jmp	0x6a0	; 0x6a0 <__bad_interrupt>
      10:	0c 94 50 03 	jmp	0x6a0	; 0x6a0 <__bad_interrupt>
      14:	0c 94 50 03 	jmp	0x6a0	; 0x6a0 <__bad_interrupt>
      18:	0c 94 50 03 	jmp	0x6a0	; 0x6a0 <__bad_interrupt>
      1c:	0c 94 50 03 	jmp	0x6a0	; 0x6a0 <__bad_interrupt>
      20:	0c 94 50 03 	jmp	0x6a0	; 0x6a0 <__bad_interrupt>
      24:	0c 94 50 03 	jmp	0x6a0	; 0x6a0 <__bad_interrupt>
      28:	0c 94 50 03 	jmp	0x6a0	; 0x6a0 <__bad_interrupt>
      2c:	0c 94 50 03 	jmp	0x6a0	; 0x6a0 <__bad_interrupt>
      30:	0c 94 50 03 	jmp	0x6a0	; 0x6a0 <__bad_interrupt>
      34:	0c 94 50 03 	jmp	0x6a0	; 0x6a0 <__bad_interrupt>
      38:	0c 94 50 03 	jmp	0x6a0	; 0x6a0 <__bad_interrupt>
      3c:	0c 94 50 03 	jmp	0x6a0	; 0x6a0 <__bad_interrupt>
      40:	0c 94 50 03 	jmp	0x6a0	; 0x6a0 <__bad_interrupt>
      44:	0c 94 50 03 	jmp	0x6a0	; 0x6a0 <__bad_interrupt>
      48:	0c 94 50 03 	jmp	0x6a0	; 0x6a0 <__bad_interrupt>
      4c:	0c 94 50 03 	jmp	0x6a0	; 0x6a0 <__bad_interrupt>
      50:	0c 94 50 03 	jmp	0x6a0	; 0x6a0 <__bad_interrupt>
      54:	0c 94 50 03 	jmp	0x6a0	; 0x6a0 <__bad_interrupt>
      58:	0c 94 50 03 	jmp	0x6a0	; 0x6a0 <__bad_interrupt>
      5c:	0c 94 50 03 	jmp	0x6a0	; 0x6a0 <__bad_interrupt>
      60:	0c 94 50 03 	jmp	0x6a0	; 0x6a0 <__bad_interrupt>
      64:	0c 94 50 03 	jmp	0x6a0	; 0x6a0 <__bad_interrupt>

00000068 <__trampolines_end>:
      68:	6e 61       	ori	r22, 0x1E	; 30
      6a:	6e 00       	.word	0x006e	; ????

0000006c <__c.2332>:
      6c:	69 6e 66 00 00 40 7a 10 f3 5a 00 a0 72 4e 18 09     inf..@z..Z..rN..
      7c:	00 10 a5 d4 e8 00 00 e8 76 48 17 00 00 e4 0b 54     ........vH.....T
      8c:	02 00 00 ca 9a 3b 00 00 00 e1 f5 05 00 00 80 96     .....;..........
      9c:	98 00 00 00 40 42 0f 00 00 00 a0 86 01 00 00 00     ....@B..........
      ac:	10 27 00 00 00 00 e8 03 00 00 00 00 64 00 00 00     .'..........d...
      bc:	00 00 0a 00 00 00 00 00 01 00 00 00 00 00 2c 76     ..............,v
      cc:	d8 88 dc 67 4f 08 23 df c1 df ae 59 e1 b1 b7 96     ...gO.#....Y....
      dc:	e5 e3 e4 53 c6 3a e6 51 99 76 96 e8 e6 c2 84 26     ...S.:.Q.v.....&
      ec:	eb 89 8c 9b 62 ed 40 7c 6f fc ef bc 9c 9f 40 f2     ....b.@|o.....@.
      fc:	ba a5 6f a5 f4 90 05 5a 2a f7 5c 93 6b 6c f9 67     ..o....Z*.\.kl.g
     10c:	6d c1 1b fc e0 e4 0d 47 fe f5 20 e6 b5 00 d0 ed     m......G.. .....
     11c:	90 2e 03 00 94 35 77 05 00 80 84 1e 08 00 00 20     .....5w........ 
     12c:	4e 0a 00 00 00 c8 0c 33 33 33 33 0f 98 6e 12 83     N......3333..n..
     13c:	11 41 ef 8d 21 14 89 3b e6 55 16 cf fe e6 db 18     .A..!..;.U......
     14c:	d1 84 4b 38 1b f7 7c 1d 90 1d a4 bb e4 24 20 32     ..K8..|......$ 2
     15c:	84 72 5e 22 81 00 c9 f1 24 ec a1 e5 3d 27           .r^"....$...='

0000016a <font>:
     16a:	00 00 00 00 00 7c da f2 da 7c 7c d6 f2 d6 7c 38     .....|...||...|8
     17a:	7c 3e 7c 38 18 3c 7e 3c 18 38 ea be ea 38 38 7a     |>|8.<~<.8...88z
     18a:	fe 7a 38 00 18 3c 18 00 ff e7 c3 e7 ff 00 18 24     .z8..<.........$
     19a:	18 00 ff e7 db e7 ff 0c 12 5c 60 70 64 94 9e 94     .........\`pd...
     1aa:	64 02 fe a0 a0 e0 02 fe a0 a4 fc 5a 3c e7 3c 5a     d..........Z<.<Z
     1ba:	fe 7c 38 38 10 10 38 38 7c fe 28 44 fe 44 28 fa     .|88..88|.(D.D(.
     1ca:	fa 00 fa fa 60 90 fe 80 fe 00 66 91 a9 56 06 06     ....`.....f..V..
     1da:	06 06 06 29 45 ff 45 29 10 20 7e 20 10 08 04 7e     ...)E.E). ~ ...~
     1ea:	04 08 10 10 54 38 10 10 38 54 10 10 78 08 08 08     ....T8..8T..x...
     1fa:	08 30 78 30 78 30 0c 1c 7c 1c 0c 60 70 7c 70 60     .0x0x0..|..`p|p`
     20a:	00 00 00 00 00 00 00 fa 00 00 00 e0 00 e0 00 28     ...............(
     21a:	fe 28 fe 28 24 54 fe 54 48 c4 c8 10 26 46 6c 92     .(.($T.TH...&Fl.
     22a:	6a 04 0a 00 10 e0 c0 00 00 38 44 82 00 00 82 44     j........8D....D
     23a:	38 00 54 38 fe 38 54 10 10 7c 10 10 00 01 0e 0c     8.T8.8T..|......
     24a:	00 10 10 10 10 10 00 00 06 06 00 04 08 10 20 40     .............. @
     25a:	7c 8a 92 a2 7c 00 42 fe 02 00 4e 92 92 92 62 84     |...|.B...N...b.
     26a:	82 92 b2 cc 18 28 48 fe 08 e4 a2 a2 a2 9c 3c 52     .....(H.......<R
     27a:	92 92 8c 82 84 88 90 e0 6c 92 92 92 6c 62 92 92     ........l...lb..
     28a:	94 78 00 00 28 00 00 00 02 2c 00 00 00 10 28 44     .x..(....,....(D
     29a:	82 28 28 28 28 28 00 82 44 28 10 40 80 9a 90 60     .(((((..D(.@...`
     2aa:	7c 82 ba 9a 72 3e 48 88 48 3e fe 92 92 92 6c 7c     |...r>H.H>....l|
     2ba:	82 82 82 44 fe 82 82 82 7c fe 92 92 92 82 fe 90     ...D....|.......
     2ca:	90 90 80 7c 82 82 8a ce fe 10 10 10 fe 00 82 fe     ...|............
     2da:	82 00 04 02 82 fc 80 fe 10 28 44 82 fe 02 02 02     .........(D.....
     2ea:	02 fe 40 38 40 fe fe 20 10 08 fe 7c 82 82 82 7c     ..@8@.. ...|...|
     2fa:	fe 90 90 90 60 7c 82 8a 84 7a fe 90 98 94 62 64     ....`|...z....bd
     30a:	92 92 92 4c c0 80 fe 80 c0 fc 02 02 02 fc f8 04     ...L............
     31a:	02 04 f8 fc 02 1c 02 fc c6 28 10 28 c6 c0 20 1e     .........(.(.. .
     32a:	20 c0 86 9a 92 b2 c2 00 fe 82 82 82 40 20 10 08      ...........@ ..
     33a:	04 00 82 82 82 fe 20 40 80 40 20 02 02 02 02 02     ...... @.@ .....
     34a:	00 c0 e0 10 00 04 2a 2a 1e 02 fe 14 22 22 1c 1c     ......**....""..
     35a:	22 22 22 14 1c 22 22 14 fe 1c 2a 2a 2a 18 00 10     """..""...***...
     36a:	7e 90 40 18 25 25 39 1e fe 10 20 20 1e 00 22 be     ~.@.%%9...  ..".
     37a:	02 00 04 02 02 bc 00 fe 08 14 22 00 00 82 fe 02     ..........".....
     38a:	00 3e 20 1e 20 1e 3e 10 20 20 1e 1c 22 22 22 1c     .> . .>.  ..""".
     39a:	3f 18 24 24 18 18 24 24 18 3f 3e 10 20 20 10 12     ?.$$..$$.?>.  ..
     3aa:	2a 2a 2a 24 20 20 fc 22 24 3c 02 02 04 3e 38 04     ***$  ."$<...>8.
     3ba:	02 04 38 3c 02 0c 02 3c 22 14 08 14 22 32 09 09     ..8<...<"..."2..
     3ca:	09 3e 22 26 2a 32 22 00 10 6c 82 00 00 00 ee 00     .>"&*2"..l......
     3da:	00 00 82 6c 10 00 40 80 40 20 40 3c 64 c4 64 3c     ...l..@.@ @<d.d<
     3ea:	78 85 85 86 48 5c 02 02 04 5e 1c 2a 2a aa 9a 84     x...H\...^.**...
     3fa:	aa aa 9e 82 84 2a 2a 1e 82 84 aa 2a 1e 02 04 2a     .....**....*...*
     40a:	aa 9e 02 30 78 4a 4e 48 9c aa aa aa 9a 9c 2a 2a     ...0xJNH......**
     41a:	2a 9a 9c aa 2a 2a 1a 00 00 a2 3e 82 00 40 a2 be     *...**....>..@..
     42a:	42 00 80 a2 3e 02 0f 94 24 94 0f 0f 14 a4 14 0f     B...>...$.......
     43a:	3e 2a aa a2 00 04 2a 2a 3e 2a 3e 50 90 fe 92 4c     >*....**>*>P...L
     44a:	92 92 92 4c 4c 12 12 12 4c 4c 52 12 12 0c 5c 82     ...LL...LLR...\.
     45a:	82 84 5e 5c 42 02 04 1e 00 b9 05 05 be 9c 22 22     ..^\B.........""
     46a:	22 9c bc 02 02 02 bc 3c 24 ff 24 24 12 7e 92 c2     "......<$.$$.~..
     47a:	66 d4 f4 3f f4 d4 ff 90 94 6f 04 03 11 7e 90 c0     f..?.....o...~..
     48a:	04 2a 2a 9e 82 00 00 22 be 82 0c 12 12 52 4c 1c     .**....".....RL.
     49a:	02 02 44 5e 00 5e 50 50 4e be b0 98 8c be 64 94     ..D^.^PPN.....d.
     4aa:	94 f4 14 64 94 94 94 64 0c 12 b2 02 04 1c 10 10     ...d...d........
     4ba:	10 10 10 10 10 10 1c f4 08 13 35 5d f4 08 14 2c     ..........5]...,
     4ca:	5f 00 00 de 00 00 10 28 54 28 44 44 28 54 28 10     _......(T(DD(T(.
     4da:	55 00 aa 00 55 55 aa 55 aa 55 aa 55 aa 55 aa 00     U...UU.U.U.U.U..
     4ea:	00 00 ff 00 08 08 08 ff 00 28 28 28 ff 00 08 08     .........(((....
     4fa:	ff 00 ff 08 08 0f 08 0f 28 28 28 3f 00 28 28 ef     ........(((?.((.
     50a:	00 ff 00 00 ff 00 ff 28 28 2f 20 3f 28 28 e8 08     .......((/ ?((..
     51a:	f8 08 08 f8 08 f8 28 28 28 f8 00 08 08 08 0f 00     ......(((.......
     52a:	00 00 00 f8 08 08 08 08 f8 08 08 08 08 0f 08 00     ................
     53a:	00 00 ff 08 08 08 08 08 08 08 08 08 ff 08 00 00     ................
     54a:	00 ff 28 00 00 ff 00 ff 00 00 f8 08 e8 00 00 3f     ..(............?
     55a:	20 2f 28 28 e8 08 e8 28 28 2f 20 2f 00 00 ff 00      /((...((/ /....
     56a:	ef 28 28 28 28 28 28 28 ef 00 ef 28 28 28 e8 28     .(((((((...(((.(
     57a:	08 08 f8 08 f8 28 28 28 2f 28 08 08 0f 08 0f 00     .....(((/(......
     58a:	00 f8 08 f8 00 00 00 f8 28 00 00 00 3f 28 00 00     ........(...?(..
     59a:	0f 08 0f 08 08 ff 08 ff 28 28 28 ff 28 08 08 08     ........(((.(...
     5aa:	f8 00 00 00 00 0f 08 ff ff ff ff ff 0f 0f 0f 0f     ................
     5ba:	0f ff ff ff 00 00 00 00 00 ff ff f0 f0 f0 f0 f0     ................
     5ca:	1c 22 22 1c 22 3e 54 54 7c 28 7e 40 40 60 60 40     ."".">TT|(~@@``@
     5da:	7e 40 7e 40 c6 aa 92 82 c6 1c 22 22 3c 20 02 7e     ~@~@......""< .~
     5ea:	04 78 04 60 40 7e 40 40 99 a5 e7 a5 99 38 54 92     .x.`@~@@.....8T.
     5fa:	54 38 32 4e 80 4e 32 0c 52 b2 b2 0c 0c 12 1e 12     T82N.N2.R.......
     60a:	0c 3d 46 5a 62 bc 7c 92 92 92 00 7e 80 80 80 7e     .=FZb.|....~...~
     61a:	54 54 54 54 54 22 22 fa 22 22 02 8a 52 22 02 02     TTTTT"".""..R"..
     62a:	22 52 8a 02 00 00 ff 80 c0 07 01 ff 00 00 10 10     "R..............
     63a:	d6 d6 10 6c 48 6c 24 6c 60 f0 90 f0 60 00 00 18     ...lHl$l`...`...
     64a:	18 00 00 00 08 08 00 0c 02 ff 80 80 00 f8 80 80     ................
     65a:	78 00 98 b8 e8 48 00 3c 3c 3c 3c 00                 x....H.<<<<.

00000666 <__ctors_end>:
     666:	11 24       	eor	r1, r1
     668:	1f be       	out	0x3f, r1	; 63
     66a:	cf ef       	ldi	r28, 0xFF	; 255
     66c:	d8 e0       	ldi	r29, 0x08	; 8
     66e:	de bf       	out	0x3e, r29	; 62
     670:	cd bf       	out	0x3d, r28	; 61

00000672 <__do_copy_data>:
     672:	15 e0       	ldi	r17, 0x05	; 5
     674:	a0 e0       	ldi	r26, 0x00	; 0
     676:	b1 e0       	ldi	r27, 0x01	; 1
     678:	ea ef       	ldi	r30, 0xFA	; 250
     67a:	f0 e2       	ldi	r31, 0x20	; 32
     67c:	02 c0       	rjmp	.+4      	; 0x682 <__do_copy_data+0x10>
     67e:	05 90       	lpm	r0, Z+
     680:	0d 92       	st	X+, r0
     682:	a6 37       	cpi	r26, 0x76	; 118
     684:	b1 07       	cpc	r27, r17
     686:	d9 f7       	brne	.-10     	; 0x67e <__do_copy_data+0xc>

00000688 <__do_clear_bss>:
     688:	25 e0       	ldi	r18, 0x05	; 5
     68a:	a6 e7       	ldi	r26, 0x76	; 118
     68c:	b5 e0       	ldi	r27, 0x05	; 5
     68e:	01 c0       	rjmp	.+2      	; 0x692 <.do_clear_bss_start>

00000690 <.do_clear_bss_loop>:
     690:	1d 92       	st	X+, r1

00000692 <.do_clear_bss_start>:
     692:	a5 38       	cpi	r26, 0x85	; 133
     694:	b2 07       	cpc	r27, r18
     696:	e1 f7       	brne	.-8      	; 0x690 <.do_clear_bss_loop>
     698:	0e 94 23 08 	call	0x1046	; 0x1046 <main>
     69c:	0c 94 7b 10 	jmp	0x20f6	; 0x20f6 <_exit>

000006a0 <__bad_interrupt>:
     6a0:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000006a4 <lcd_command>:
	buff[x + y / 8 * 128] |= (0x80 >> (y % 8));
}

// function to clear a single pixel
void clearpixel(uint8_t *buff, uint8_t x, uint8_t y) {
	buff[x + y / 8 * 128] &= ~(0x80 >> (y % 8));
     6a4:	5c 98       	cbi	0x0b, 4	; 11
     6a6:	27 e0       	ldi	r18, 0x07	; 7
     6a8:	30 e0       	ldi	r19, 0x00	; 0
     6aa:	90 e0       	ldi	r25, 0x00	; 0
     6ac:	5d 98       	cbi	0x0b, 5	; 11
     6ae:	ac 01       	movw	r20, r24
     6b0:	02 2e       	mov	r0, r18
     6b2:	02 c0       	rjmp	.+4      	; 0x6b8 <lcd_command+0x14>
     6b4:	55 95       	asr	r21
     6b6:	47 95       	ror	r20
     6b8:	0a 94       	dec	r0
     6ba:	e2 f7       	brpl	.-8      	; 0x6b4 <lcd_command+0x10>
     6bc:	40 ff       	sbrs	r20, 0
     6be:	02 c0       	rjmp	.+4      	; 0x6c4 <lcd_command+0x20>
     6c0:	5e 9a       	sbi	0x0b, 6	; 11
     6c2:	01 c0       	rjmp	.+2      	; 0x6c6 <lcd_command+0x22>
     6c4:	5e 98       	cbi	0x0b, 6	; 11
     6c6:	5d 9a       	sbi	0x0b, 5	; 11
     6c8:	21 50       	subi	r18, 0x01	; 1
     6ca:	31 09       	sbc	r19, r1
     6cc:	78 f7       	brcc	.-34     	; 0x6ac <lcd_command+0x8>
     6ce:	08 95       	ret

000006d0 <lcd_init>:
     6d0:	56 9a       	sbi	0x0a, 6	; 10
     6d2:	55 9a       	sbi	0x0a, 5	; 10
     6d4:	54 9a       	sbi	0x0a, 4	; 10
     6d6:	53 9a       	sbi	0x0a, 3	; 10
     6d8:	52 9a       	sbi	0x0a, 2	; 10
     6da:	5a 98       	cbi	0x0b, 2	; 11
     6dc:	5b 98       	cbi	0x0b, 3	; 11
     6de:	2f e9       	ldi	r18, 0x9F	; 159
     6e0:	86 e8       	ldi	r24, 0x86	; 134
     6e2:	91 e0       	ldi	r25, 0x01	; 1
     6e4:	21 50       	subi	r18, 0x01	; 1
     6e6:	80 40       	sbci	r24, 0x00	; 0
     6e8:	90 40       	sbci	r25, 0x00	; 0
     6ea:	e1 f7       	brne	.-8      	; 0x6e4 <lcd_init+0x14>
     6ec:	00 c0       	rjmp	.+0      	; 0x6ee <lcd_init+0x1e>
     6ee:	00 00       	nop
     6f0:	5b 9a       	sbi	0x0b, 3	; 11
     6f2:	83 ea       	ldi	r24, 0xA3	; 163
     6f4:	0e 94 52 03 	call	0x6a4	; 0x6a4 <lcd_command>
     6f8:	80 ea       	ldi	r24, 0xA0	; 160
     6fa:	0e 94 52 03 	call	0x6a4	; 0x6a4 <lcd_command>
     6fe:	80 ec       	ldi	r24, 0xC0	; 192
     700:	0e 94 52 03 	call	0x6a4	; 0x6a4 <lcd_command>
     704:	80 e4       	ldi	r24, 0x40	; 64
     706:	0e 94 52 03 	call	0x6a4	; 0x6a4 <lcd_command>
     70a:	8c e2       	ldi	r24, 0x2C	; 44
     70c:	0e 94 52 03 	call	0x6a4	; 0x6a4 <lcd_command>
     710:	83 ed       	ldi	r24, 0xD3	; 211
     712:	90 e3       	ldi	r25, 0x30	; 48
     714:	01 97       	sbiw	r24, 0x01	; 1
     716:	f1 f7       	brne	.-4      	; 0x714 <lcd_init+0x44>
     718:	00 c0       	rjmp	.+0      	; 0x71a <lcd_init+0x4a>
     71a:	00 00       	nop
     71c:	8e e2       	ldi	r24, 0x2E	; 46
     71e:	0e 94 52 03 	call	0x6a4	; 0x6a4 <lcd_command>
     722:	83 ed       	ldi	r24, 0xD3	; 211
     724:	90 e3       	ldi	r25, 0x30	; 48
     726:	01 97       	sbiw	r24, 0x01	; 1
     728:	f1 f7       	brne	.-4      	; 0x726 <lcd_init+0x56>
     72a:	00 c0       	rjmp	.+0      	; 0x72c <lcd_init+0x5c>
     72c:	00 00       	nop
     72e:	8f e2       	ldi	r24, 0x2F	; 47
     730:	0e 94 52 03 	call	0x6a4	; 0x6a4 <lcd_command>
     734:	83 ec       	ldi	r24, 0xC3	; 195
     736:	99 e0       	ldi	r25, 0x09	; 9
     738:	01 97       	sbiw	r24, 0x01	; 1
     73a:	f1 f7       	brne	.-4      	; 0x738 <lcd_init+0x68>
     73c:	00 c0       	rjmp	.+0      	; 0x73e <lcd_init+0x6e>
     73e:	00 00       	nop
     740:	86 e2       	ldi	r24, 0x26	; 38
     742:	0e 94 52 03 	call	0x6a4	; 0x6a4 <lcd_command>
     746:	08 95       	ret

00000748 <lcd_data>:
     748:	5c 9a       	sbi	0x0b, 4	; 11
     74a:	27 e0       	ldi	r18, 0x07	; 7
     74c:	30 e0       	ldi	r19, 0x00	; 0
     74e:	90 e0       	ldi	r25, 0x00	; 0
     750:	5d 98       	cbi	0x0b, 5	; 11
     752:	ac 01       	movw	r20, r24
     754:	02 2e       	mov	r0, r18
     756:	02 c0       	rjmp	.+4      	; 0x75c <lcd_data+0x14>
     758:	55 95       	asr	r21
     75a:	47 95       	ror	r20
     75c:	0a 94       	dec	r0
     75e:	e2 f7       	brpl	.-8      	; 0x758 <lcd_data+0x10>
     760:	40 ff       	sbrs	r20, 0
     762:	02 c0       	rjmp	.+4      	; 0x768 <lcd_data+0x20>
     764:	5e 9a       	sbi	0x0b, 6	; 11
     766:	01 c0       	rjmp	.+2      	; 0x76a <lcd_data+0x22>
     768:	5e 98       	cbi	0x0b, 6	; 11
     76a:	5d 9a       	sbi	0x0b, 5	; 11
     76c:	21 50       	subi	r18, 0x01	; 1
     76e:	31 09       	sbc	r19, r1
     770:	78 f7       	brcc	.-34     	; 0x750 <lcd_data+0x8>
     772:	08 95       	ret

00000774 <lcd_set_brightness>:
     774:	cf 93       	push	r28
     776:	c8 2f       	mov	r28, r24
     778:	81 e8       	ldi	r24, 0x81	; 129
     77a:	0e 94 52 03 	call	0x6a4	; 0x6a4 <lcd_command>
     77e:	8c 2f       	mov	r24, r28
     780:	8f 73       	andi	r24, 0x3F	; 63
     782:	0e 94 52 03 	call	0x6a4	; 0x6a4 <lcd_command>
     786:	cf 91       	pop	r28
     788:	08 95       	ret

0000078a <write_buffer>:
     78a:	cf 92       	push	r12
     78c:	df 92       	push	r13
     78e:	ef 92       	push	r14
     790:	ff 92       	push	r15
     792:	0f 93       	push	r16
     794:	1f 93       	push	r17
     796:	cf 93       	push	r28
     798:	df 93       	push	r29
     79a:	0f 2e       	mov	r0, r31
     79c:	f4 e0       	ldi	r31, 0x04	; 4
     79e:	ef 2e       	mov	r14, r31
     7a0:	f5 e0       	ldi	r31, 0x05	; 5
     7a2:	ff 2e       	mov	r15, r31
     7a4:	f0 2d       	mov	r31, r0
     7a6:	ec 01       	movw	r28, r24
     7a8:	0f 2e       	mov	r0, r31
     7aa:	f4 e1       	ldi	r31, 0x14	; 20
     7ac:	cf 2e       	mov	r12, r31
     7ae:	f5 e0       	ldi	r31, 0x05	; 5
     7b0:	df 2e       	mov	r13, r31
     7b2:	f0 2d       	mov	r31, r0
     7b4:	f7 01       	movw	r30, r14
     7b6:	80 81       	ld	r24, Z
     7b8:	f2 e0       	ldi	r31, 0x02	; 2
     7ba:	ef 0e       	add	r14, r31
     7bc:	f1 1c       	adc	r15, r1
     7be:	80 6b       	ori	r24, 0xB0	; 176
     7c0:	0e 94 52 03 	call	0x6a4	; 0x6a4 <lcd_command>
     7c4:	80 e0       	ldi	r24, 0x00	; 0
     7c6:	0e 94 52 03 	call	0x6a4	; 0x6a4 <lcd_command>
     7ca:	80 e1       	ldi	r24, 0x10	; 16
     7cc:	0e 94 52 03 	call	0x6a4	; 0x6a4 <lcd_command>
     7d0:	80 ee       	ldi	r24, 0xE0	; 224
     7d2:	0e 94 52 03 	call	0x6a4	; 0x6a4 <lcd_command>
     7d6:	8f ef       	ldi	r24, 0xFF	; 255
     7d8:	0e 94 a4 03 	call	0x748	; 0x748 <lcd_data>
     7dc:	8e 01       	movw	r16, r28
     7de:	00 58       	subi	r16, 0x80	; 128
     7e0:	1f 4f       	sbci	r17, 0xFF	; 255
     7e2:	89 91       	ld	r24, Y+
     7e4:	0e 94 a4 03 	call	0x748	; 0x748 <lcd_data>
     7e8:	c0 17       	cp	r28, r16
     7ea:	d1 07       	cpc	r29, r17
     7ec:	d1 f7       	brne	.-12     	; 0x7e2 <write_buffer+0x58>
     7ee:	e8 01       	movw	r28, r16
     7f0:	ce 14       	cp	r12, r14
     7f2:	df 04       	cpc	r13, r15
     7f4:	f9 f6       	brne	.-66     	; 0x7b4 <write_buffer+0x2a>
     7f6:	df 91       	pop	r29
     7f8:	cf 91       	pop	r28
     7fa:	1f 91       	pop	r17
     7fc:	0f 91       	pop	r16
     7fe:	ff 90       	pop	r15
     800:	ef 90       	pop	r14
     802:	df 90       	pop	r13
     804:	cf 90       	pop	r12
     806:	08 95       	ret

00000808 <clear_buffer>:
     808:	20 e0       	ldi	r18, 0x00	; 0
     80a:	34 e0       	ldi	r19, 0x04	; 4
     80c:	fc 01       	movw	r30, r24
     80e:	a9 01       	movw	r20, r18
     810:	11 92       	st	Z+, r1
     812:	41 50       	subi	r20, 0x01	; 1
     814:	50 40       	sbci	r21, 0x00	; 0
     816:	e1 f7       	brne	.-8      	; 0x810 <clear_buffer+0x8>
     818:	08 95       	ret

0000081a <drawchar>:
     81a:	30 e0       	ldi	r19, 0x00	; 0
     81c:	f9 01       	movw	r30, r18
     81e:	ee 0f       	add	r30, r30
     820:	ff 1f       	adc	r31, r31
     822:	ee 0f       	add	r30, r30
     824:	ff 1f       	adc	r31, r31
     826:	e2 0f       	add	r30, r18
     828:	f3 1f       	adc	r31, r19
     82a:	e6 59       	subi	r30, 0x96	; 150
     82c:	fe 4f       	sbci	r31, 0xFE	; 254
     82e:	55 e0       	ldi	r21, 0x05	; 5
     830:	56 0f       	add	r21, r22
     832:	9c 01       	movw	r18, r24
     834:	70 e8       	ldi	r23, 0x80	; 128
     836:	47 9f       	mul	r20, r23
     838:	20 0d       	add	r18, r0
     83a:	31 1d       	adc	r19, r1
     83c:	11 24       	eor	r1, r1
     83e:	94 91       	lpm	r25, Z
     840:	d9 01       	movw	r26, r18
     842:	a6 0f       	add	r26, r22
     844:	b1 1d       	adc	r27, r1
     846:	9c 93       	st	X, r25
     848:	6f 5f       	subi	r22, 0xFF	; 255
     84a:	31 96       	adiw	r30, 0x01	; 1
     84c:	65 13       	cpse	r22, r21
     84e:	f7 cf       	rjmp	.-18     	; 0x83e <drawchar+0x24>
     850:	08 95       	ret

00000852 <setpixel>:
     852:	24 2f       	mov	r18, r20
     854:	26 95       	lsr	r18
     856:	26 95       	lsr	r18
     858:	26 95       	lsr	r18
     85a:	e6 2f       	mov	r30, r22
     85c:	f0 e0       	ldi	r31, 0x00	; 0
     85e:	30 e8       	ldi	r19, 0x80	; 128
     860:	23 9f       	mul	r18, r19
     862:	e0 0d       	add	r30, r0
     864:	f1 1d       	adc	r31, r1
     866:	11 24       	eor	r1, r1
     868:	e8 0f       	add	r30, r24
     86a:	f9 1f       	adc	r31, r25
     86c:	47 70       	andi	r20, 0x07	; 7
     86e:	80 e8       	ldi	r24, 0x80	; 128
     870:	90 e0       	ldi	r25, 0x00	; 0
     872:	02 c0       	rjmp	.+4      	; 0x878 <setpixel+0x26>
     874:	95 95       	asr	r25
     876:	87 95       	ror	r24
     878:	4a 95       	dec	r20
     87a:	e2 f7       	brpl	.-8      	; 0x874 <setpixel+0x22>
     87c:	90 81       	ld	r25, Z
     87e:	89 2b       	or	r24, r25
     880:	80 83       	st	Z, r24
     882:	08 95       	ret

00000884 <drawstring>:
}

// function to write a string on the lcd
void drawstring(uint8_t *buff, uint8_t x, uint8_t line, uint8_t *c) {
     884:	ef 92       	push	r14
     886:	ff 92       	push	r15
     888:	0f 93       	push	r16
     88a:	1f 93       	push	r17
     88c:	cf 93       	push	r28
     88e:	df 93       	push	r29
     890:	7c 01       	movw	r14, r24
     892:	c6 2f       	mov	r28, r22
     894:	d4 2f       	mov	r29, r20
     896:	f9 01       	movw	r30, r18
	while(*c){
     898:	20 81       	ld	r18, Z
     89a:	22 23       	and	r18, r18
     89c:	71 f0       	breq	.+28     	; 0x8ba <drawstring+0x36>
     89e:	8f 01       	movw	r16, r30
     8a0:	0f 5f       	subi	r16, 0xFF	; 255
     8a2:	1f 4f       	sbci	r17, 0xFF	; 255
		drawchar(buff, x, line, *c);
     8a4:	4d 2f       	mov	r20, r29
     8a6:	6c 2f       	mov	r22, r28
     8a8:	c7 01       	movw	r24, r14
     8aa:	0e 94 0d 04 	call	0x81a	; 0x81a <drawchar>
		x += 5;
     8ae:	cb 5f       	subi	r28, 0xFB	; 251
	buff[x + y / 8 * 128] &= ~(0x80 >> (y % 8));
}

// function to write a string on the lcd
void drawstring(uint8_t *buff, uint8_t x, uint8_t line, uint8_t *c) {
	while(*c){
     8b0:	f8 01       	movw	r30, r16
     8b2:	21 91       	ld	r18, Z+
     8b4:	8f 01       	movw	r16, r30
     8b6:	21 11       	cpse	r18, r1
     8b8:	f5 cf       	rjmp	.-22     	; 0x8a4 <drawstring+0x20>
		drawchar(buff, x, line, *c);
		x += 5;
		c++;
	}
}
     8ba:	df 91       	pop	r29
     8bc:	cf 91       	pop	r28
     8be:	1f 91       	pop	r17
     8c0:	0f 91       	pop	r16
     8c2:	ff 90       	pop	r15
     8c4:	ef 90       	pop	r14
     8c6:	08 95       	ret

000008c8 <drawline>:

// use bresenham's algorithm to write this function to draw a line
void drawline(uint8_t *buff,uint8_t x0, uint8_t y0, uint8_t x1, uint8_t y1,uint8_t color) {
     8c8:	4f 92       	push	r4
     8ca:	5f 92       	push	r5
     8cc:	6f 92       	push	r6
     8ce:	7f 92       	push	r7
     8d0:	8f 92       	push	r8
     8d2:	9f 92       	push	r9
     8d4:	af 92       	push	r10
     8d6:	bf 92       	push	r11
     8d8:	cf 92       	push	r12
     8da:	df 92       	push	r13
     8dc:	ef 92       	push	r14
     8de:	ff 92       	push	r15
     8e0:	0f 93       	push	r16
     8e2:	1f 93       	push	r17
     8e4:	cf 93       	push	r28
     8e6:	df 93       	push	r29
     8e8:	6c 01       	movw	r12, r24
     8ea:	c6 2f       	mov	r28, r22
     8ec:	12 2f       	mov	r17, r18

	uint8_t dx = abs(x1 - x0);
     8ee:	30 e0       	ldi	r19, 0x00	; 0
     8f0:	26 1b       	sub	r18, r22
     8f2:	31 09       	sbc	r19, r1
     8f4:	c9 01       	movw	r24, r18
     8f6:	99 23       	and	r25, r25
     8f8:	24 f4       	brge	.+8      	; 0x902 <__stack+0x3>
     8fa:	88 27       	eor	r24, r24
     8fc:	99 27       	eor	r25, r25
     8fe:	82 1b       	sub	r24, r18
     900:	93 0b       	sbc	r25, r19
     902:	5c 01       	movw	r10, r24
	uint8_t dy = abs(y1 - y0);
	float D = (float) dy/dx;
	float err = 0.0; // No error at start
	
	if (x0 > x1) {
     904:	1c 17       	cp	r17, r28
     906:	30 f4       	brcc	.+12     	; 0x914 <__stack+0x15>
		swap(x0, x1);
		swap(y0, y1);
     908:	f4 2e       	mov	r15, r20
     90a:	d0 2f       	mov	r29, r16
	uint8_t dx = abs(x1 - x0);
	uint8_t dy = abs(y1 - y0);
	float D = (float) dy/dx;
	float err = 0.0; // No error at start
	
	if (x0 > x1) {
     90c:	9c 2f       	mov	r25, r28
		swap(x0, x1);
     90e:	c1 2f       	mov	r28, r17
     910:	19 2f       	mov	r17, r25
     912:	02 c0       	rjmp	.+4      	; 0x918 <__stack+0x19>
     914:	f0 2e       	mov	r15, r16
     916:	d4 2f       	mov	r29, r20
	}
	
	uint8_t	y_min = y0;
	uint8_t	y_max = y1;
	
	if(dx == 0){
     918:	81 11       	cpse	r24, r1
     91a:	0f c0       	rjmp	.+30     	; 0x93a <__stack+0x3b>
		if(y0 > y1){
     91c:	fd 16       	cp	r15, r29
     91e:	18 f4       	brcc	.+6      	; 0x926 <__stack+0x27>
     920:	8d 2f       	mov	r24, r29
			y_max = y0;
			y_min = y1;
     922:	df 2d       	mov	r29, r15
	uint8_t	y_min = y0;
	uint8_t	y_max = y1;
	
	if(dx == 0){
		if(y0 > y1){
			y_max = y0;
     924:	f8 2e       	mov	r15, r24
			y_min = y1;
		}
		for (uint8_t y = y_min; y <= y_max ; y++){
			setpixel(buff, x0, y, color);
     926:	2e 2d       	mov	r18, r14
     928:	4d 2f       	mov	r20, r29
     92a:	6c 2f       	mov	r22, r28
     92c:	c6 01       	movw	r24, r12
     92e:	0e 94 29 04 	call	0x852	; 0x852 <setpixel>
	if(dx == 0){
		if(y0 > y1){
			y_max = y0;
			y_min = y1;
		}
		for (uint8_t y = y_min; y <= y_max ; y++){
     932:	df 5f       	subi	r29, 0xFF	; 255
     934:	fd 16       	cp	r15, r29
     936:	b8 f7       	brcc	.-18     	; 0x926 <__stack+0x27>
     938:	5f c0       	rjmp	.+190    	; 0x9f8 <__stack+0xf9>

// use bresenham's algorithm to write this function to draw a line
void drawline(uint8_t *buff,uint8_t x0, uint8_t y0, uint8_t x1, uint8_t y1,uint8_t color) {

	uint8_t dx = abs(x1 - x0);
	uint8_t dy = abs(y1 - y0);
     93a:	80 2f       	mov	r24, r16
     93c:	90 e0       	ldi	r25, 0x00	; 0
     93e:	84 1b       	sub	r24, r20
     940:	91 09       	sbc	r25, r1
     942:	bc 01       	movw	r22, r24
     944:	22 f4       	brpl	.+8      	; 0x94e <__stack+0x4f>
     946:	66 27       	eor	r22, r22
     948:	77 27       	eor	r23, r23
     94a:	68 1b       	sub	r22, r24
     94c:	79 0b       	sbc	r23, r25
		}
		for (uint8_t y = y_min; y <= y_max ; y++){
			setpixel(buff, x0, y, color);
		}
	}
	else if(dy == 0){
     94e:	66 23       	and	r22, r22
     950:	19 f0       	breq	.+6      	; 0x958 <__stack+0x59>
		for (uint8_t x = x0; x <= x1 ; x++){
			setpixel(buff, x, y0, color);
		}
	}
	else{
		for (uint8_t x = x0; x <= x1 ; x++){
     952:	1c 17       	cp	r17, r28
     954:	70 f4       	brcc	.+28     	; 0x972 <__stack+0x73>
     956:	50 c0       	rjmp	.+160    	; 0x9f8 <__stack+0xf9>
		for (uint8_t y = y_min; y <= y_max ; y++){
			setpixel(buff, x0, y, color);
		}
	}
	else if(dy == 0){
		for (uint8_t x = x0; x <= x1 ; x++){
     958:	1c 17       	cp	r17, r28
     95a:	08 f4       	brcc	.+2      	; 0x95e <__stack+0x5f>
     95c:	4d c0       	rjmp	.+154    	; 0x9f8 <__stack+0xf9>
			setpixel(buff, x, y0, color);
     95e:	2e 2d       	mov	r18, r14
     960:	4d 2f       	mov	r20, r29
     962:	6c 2f       	mov	r22, r28
     964:	c6 01       	movw	r24, r12
     966:	0e 94 29 04 	call	0x852	; 0x852 <setpixel>
		for (uint8_t y = y_min; y <= y_max ; y++){
			setpixel(buff, x0, y, color);
		}
	}
	else if(dy == 0){
		for (uint8_t x = x0; x <= x1 ; x++){
     96a:	cf 5f       	subi	r28, 0xFF	; 255
     96c:	1c 17       	cp	r17, r28
     96e:	b8 f7       	brcc	.-18     	; 0x95e <__stack+0x5f>
     970:	43 c0       	rjmp	.+134    	; 0x9f8 <__stack+0xf9>
// use bresenham's algorithm to write this function to draw a line
void drawline(uint8_t *buff,uint8_t x0, uint8_t y0, uint8_t x1, uint8_t y1,uint8_t color) {

	uint8_t dx = abs(x1 - x0);
	uint8_t dy = abs(y1 - y0);
	float D = (float) dy/dx;
     972:	70 e0       	ldi	r23, 0x00	; 0
     974:	80 e0       	ldi	r24, 0x00	; 0
     976:	90 e0       	ldi	r25, 0x00	; 0
     978:	0e 94 b3 09 	call	0x1366	; 0x1366 <__floatunsisf>
     97c:	2b 01       	movw	r4, r22
     97e:	3c 01       	movw	r6, r24
     980:	b5 01       	movw	r22, r10
     982:	77 27       	eor	r23, r23
     984:	07 2e       	mov	r0, r23
     986:	00 0c       	add	r0, r0
     988:	88 0b       	sbc	r24, r24
     98a:	99 0b       	sbc	r25, r25
     98c:	0e 94 b5 09 	call	0x136a	; 0x136a <__floatsisf>
     990:	9b 01       	movw	r18, r22
     992:	ac 01       	movw	r20, r24
     994:	c3 01       	movw	r24, r6
     996:	b2 01       	movw	r22, r4
     998:	0e 94 41 09 	call	0x1282	; 0x1282 <__divsf3>
     99c:	2b 01       	movw	r4, r22
     99e:	3c 01       	movw	r6, r24
     9a0:	0d 2f       	mov	r16, r29
     9a2:	81 2c       	mov	r8, r1
     9a4:	91 2c       	mov	r9, r1
     9a6:	54 01       	movw	r10, r8
			setpixel(buff, x, y0, color);
		}
	}
	else{
		for (uint8_t x = x0; x <= x1 ; x++){
			err = err + D;
     9a8:	a3 01       	movw	r20, r6
     9aa:	92 01       	movw	r18, r4
     9ac:	c5 01       	movw	r24, r10
     9ae:	b4 01       	movw	r22, r8
     9b0:	0e 94 d5 08 	call	0x11aa	; 0x11aa <__addsf3>
     9b4:	4b 01       	movw	r8, r22
     9b6:	5c 01       	movw	r10, r24
			if (err >= 0.5){
     9b8:	20 e0       	ldi	r18, 0x00	; 0
     9ba:	30 e0       	ldi	r19, 0x00	; 0
     9bc:	40 e0       	ldi	r20, 0x00	; 0
     9be:	5f e3       	ldi	r21, 0x3F	; 63
     9c0:	0e 94 41 0a 	call	0x1482	; 0x1482 <__gesf2>
     9c4:	88 23       	and	r24, r24
     9c6:	7c f0       	brlt	.+30     	; 0x9e6 <__stack+0xe7>
				if(y0 > y1){
     9c8:	fd 16       	cp	r15, r29
     9ca:	10 f4       	brcc	.+4      	; 0x9d0 <__stack+0xd1>
					y_min -= 1;
     9cc:	01 50       	subi	r16, 0x01	; 1
     9ce:	01 c0       	rjmp	.+2      	; 0x9d2 <__stack+0xd3>
				}
				else{
					y_min += 1;
     9d0:	0f 5f       	subi	r16, 0xFF	; 255
				}
				err -= 1.0;
     9d2:	20 e0       	ldi	r18, 0x00	; 0
     9d4:	30 e0       	ldi	r19, 0x00	; 0
     9d6:	40 e8       	ldi	r20, 0x80	; 128
     9d8:	5f e3       	ldi	r21, 0x3F	; 63
     9da:	c5 01       	movw	r24, r10
     9dc:	b4 01       	movw	r22, r8
     9de:	0e 94 d4 08 	call	0x11a8	; 0x11a8 <__subsf3>
     9e2:	4b 01       	movw	r8, r22
     9e4:	5c 01       	movw	r10, r24
			}
			setpixel(buff, x, y_min, color);
     9e6:	2e 2d       	mov	r18, r14
     9e8:	40 2f       	mov	r20, r16
     9ea:	6c 2f       	mov	r22, r28
     9ec:	c6 01       	movw	r24, r12
     9ee:	0e 94 29 04 	call	0x852	; 0x852 <setpixel>
		for (uint8_t x = x0; x <= x1 ; x++){
			setpixel(buff, x, y0, color);
		}
	}
	else{
		for (uint8_t x = x0; x <= x1 ; x++){
     9f2:	cf 5f       	subi	r28, 0xFF	; 255
     9f4:	1c 17       	cp	r17, r28
     9f6:	c0 f6       	brcc	.-80     	; 0x9a8 <__stack+0xa9>
			}
			setpixel(buff, x, y_min, color);
		}
	}

}
     9f8:	df 91       	pop	r29
     9fa:	cf 91       	pop	r28
     9fc:	1f 91       	pop	r17
     9fe:	0f 91       	pop	r16
     a00:	ff 90       	pop	r15
     a02:	ef 90       	pop	r14
     a04:	df 90       	pop	r13
     a06:	cf 90       	pop	r12
     a08:	bf 90       	pop	r11
     a0a:	af 90       	pop	r10
     a0c:	9f 90       	pop	r9
     a0e:	8f 90       	pop	r8
     a10:	7f 90       	pop	r7
     a12:	6f 90       	pop	r6
     a14:	5f 90       	pop	r5
     a16:	4f 90       	pop	r4
     a18:	08 95       	ret

00000a1a <fillrect>:

// function to draw a filled rectangle
void fillrect(uint8_t *buff,uint8_t x, uint8_t y, uint8_t w, uint8_t h,uint8_t color) {
     a1a:	8f 92       	push	r8
     a1c:	9f 92       	push	r9
     a1e:	af 92       	push	r10
     a20:	bf 92       	push	r11
     a22:	cf 92       	push	r12
     a24:	df 92       	push	r13
     a26:	ef 92       	push	r14
     a28:	ff 92       	push	r15
     a2a:	0f 93       	push	r16
     a2c:	1f 93       	push	r17
     a2e:	cf 93       	push	r28
     a30:	df 93       	push	r29
     a32:	6c 01       	movw	r12, r24
     a34:	d6 2f       	mov	r29, r22
     a36:	f4 2e       	mov	r15, r20
	for(uint8_t x_dot = x; x_dot < (x + w); x_dot++){
     a38:	86 2f       	mov	r24, r22
     a3a:	90 e0       	ldi	r25, 0x00	; 0
     a3c:	4c 01       	movw	r8, r24
     a3e:	82 0e       	add	r8, r18
     a40:	91 1c       	adc	r9, r1
     a42:	88 15       	cp	r24, r8
     a44:	99 05       	cpc	r25, r9
     a46:	ac f0       	brlt	.+42     	; 0xa72 <fillrect+0x58>
     a48:	1e c0       	rjmp	.+60     	; 0xa86 <fillrect+0x6c>
		for(uint8_t y_dot = y; y_dot < (y + h); y_dot++){
     a4a:	cf 2d       	mov	r28, r15
			setpixel(buff, x_dot, y_dot, color);
     a4c:	2e 2d       	mov	r18, r14
     a4e:	4c 2f       	mov	r20, r28
     a50:	6d 2f       	mov	r22, r29
     a52:	c6 01       	movw	r24, r12
     a54:	0e 94 29 04 	call	0x852	; 0x852 <setpixel>
}

// function to draw a filled rectangle
void fillrect(uint8_t *buff,uint8_t x, uint8_t y, uint8_t w, uint8_t h,uint8_t color) {
	for(uint8_t x_dot = x; x_dot < (x + w); x_dot++){
		for(uint8_t y_dot = y; y_dot < (y + h); y_dot++){
     a58:	cf 5f       	subi	r28, 0xFF	; 255
     a5a:	8c 2f       	mov	r24, r28
     a5c:	90 e0       	ldi	r25, 0x00	; 0
     a5e:	80 17       	cp	r24, r16
     a60:	91 07       	cpc	r25, r17
     a62:	a4 f3       	brlt	.-24     	; 0xa4c <fillrect+0x32>

}

// function to draw a filled rectangle
void fillrect(uint8_t *buff,uint8_t x, uint8_t y, uint8_t w, uint8_t h,uint8_t color) {
	for(uint8_t x_dot = x; x_dot < (x + w); x_dot++){
     a64:	df 5f       	subi	r29, 0xFF	; 255
     a66:	8d 2f       	mov	r24, r29
     a68:	90 e0       	ldi	r25, 0x00	; 0
     a6a:	88 15       	cp	r24, r8
     a6c:	99 05       	cpc	r25, r9
     a6e:	3c f0       	brlt	.+14     	; 0xa7e <fillrect+0x64>
     a70:	0a c0       	rjmp	.+20     	; 0xa86 <fillrect+0x6c>
		for(uint8_t y_dot = y; y_dot < (y + h); y_dot++){
     a72:	a4 2e       	mov	r10, r20
     a74:	b1 2c       	mov	r11, r1
     a76:	c5 01       	movw	r24, r10
     a78:	80 0f       	add	r24, r16
     a7a:	91 1d       	adc	r25, r1
     a7c:	8c 01       	movw	r16, r24
     a7e:	a0 16       	cp	r10, r16
     a80:	b1 06       	cpc	r11, r17
     a82:	1c f3       	brlt	.-58     	; 0xa4a <fillrect+0x30>
     a84:	ef cf       	rjmp	.-34     	; 0xa64 <fillrect+0x4a>
			setpixel(buff, x_dot, y_dot, color);
		}
	}
}
     a86:	df 91       	pop	r29
     a88:	cf 91       	pop	r28
     a8a:	1f 91       	pop	r17
     a8c:	0f 91       	pop	r16
     a8e:	ff 90       	pop	r15
     a90:	ef 90       	pop	r14
     a92:	df 90       	pop	r13
     a94:	cf 90       	pop	r12
     a96:	bf 90       	pop	r11
     a98:	af 90       	pop	r10
     a9a:	9f 90       	pop	r9
     a9c:	8f 90       	pop	r8
     a9e:	08 95       	ret

00000aa0 <drawrect>:


// function to draw a rectangle
void drawrect(uint8_t *buff,uint8_t x, uint8_t y, uint8_t w, uint8_t h,uint8_t color) {
     aa0:	bf 92       	push	r11
     aa2:	cf 92       	push	r12
     aa4:	df 92       	push	r13
     aa6:	ef 92       	push	r14
     aa8:	ff 92       	push	r15
     aaa:	0f 93       	push	r16
     aac:	1f 93       	push	r17
     aae:	cf 93       	push	r28
     ab0:	df 93       	push	r29
     ab2:	6c 01       	movw	r12, r24
     ab4:	16 2f       	mov	r17, r22
     ab6:	f4 2e       	mov	r15, r20
     ab8:	d2 2f       	mov	r29, r18
	drawline(buff, x, y, x, (y + h), color);
     aba:	c4 2f       	mov	r28, r20
     abc:	c0 0f       	add	r28, r16
     abe:	0c 2f       	mov	r16, r28
     ac0:	26 2f       	mov	r18, r22
     ac2:	0e 94 64 04 	call	0x8c8	; 0x8c8 <drawline>
	drawline(buff, x, y, (x + w), y, color);
     ac6:	d1 0f       	add	r29, r17
     ac8:	0f 2d       	mov	r16, r15
     aca:	2d 2f       	mov	r18, r29
     acc:	4f 2d       	mov	r20, r15
     ace:	61 2f       	mov	r22, r17
     ad0:	c6 01       	movw	r24, r12
     ad2:	0e 94 64 04 	call	0x8c8	; 0x8c8 <drawline>
	drawline(buff, (x + w), y, (x + w), (y + h), color);
     ad6:	0c 2f       	mov	r16, r28
     ad8:	2d 2f       	mov	r18, r29
     ada:	4f 2d       	mov	r20, r15
     adc:	6d 2f       	mov	r22, r29
     ade:	c6 01       	movw	r24, r12
     ae0:	0e 94 64 04 	call	0x8c8	; 0x8c8 <drawline>
	drawline(buff, x, (y + h), (x + w), (y + h), color);
     ae4:	2d 2f       	mov	r18, r29
     ae6:	4c 2f       	mov	r20, r28
     ae8:	61 2f       	mov	r22, r17
     aea:	c6 01       	movw	r24, r12
     aec:	0e 94 64 04 	call	0x8c8	; 0x8c8 <drawline>
}
     af0:	df 91       	pop	r29
     af2:	cf 91       	pop	r28
     af4:	1f 91       	pop	r17
     af6:	0f 91       	pop	r16
     af8:	ff 90       	pop	r15
     afa:	ef 90       	pop	r14
     afc:	df 90       	pop	r13
     afe:	cf 90       	pop	r12
     b00:	bf 90       	pop	r11
     b02:	08 95       	ret

00000b04 <drawcircle>:


// function to draw a circle
void drawcircle(uint8_t *buff,uint8_t x0, uint8_t y0, uint8_t r,uint8_t color) {
     b04:	6f 92       	push	r6
     b06:	7f 92       	push	r7
     b08:	8f 92       	push	r8
     b0a:	9f 92       	push	r9
     b0c:	af 92       	push	r10
     b0e:	bf 92       	push	r11
     b10:	cf 92       	push	r12
     b12:	df 92       	push	r13
     b14:	ef 92       	push	r14
     b16:	ff 92       	push	r15
     b18:	0f 93       	push	r16
     b1a:	1f 93       	push	r17
     b1c:	cf 93       	push	r28
     b1e:	df 93       	push	r29
     b20:	ec 01       	movw	r28, r24
     b22:	96 2e       	mov	r9, r22
     b24:	84 2e       	mov	r8, r20
     b26:	a2 2e       	mov	r10, r18

	int8_t x = 0;
	int8_t y = r;
     b28:	f2 2e       	mov	r15, r18
	int8_t err = 3 - 2 * r;
     b2a:	82 2f       	mov	r24, r18
     b2c:	88 0f       	add	r24, r24
     b2e:	93 e0       	ldi	r25, 0x03	; 3
     b30:	e9 2e       	mov	r14, r25
     b32:	e8 1a       	sub	r14, r24
	setpixel(buff, x0 - x, y0 - y, color);
     b34:	14 2f       	mov	r17, r20
     b36:	12 1b       	sub	r17, r18
     b38:	20 2f       	mov	r18, r16
     b3a:	41 2f       	mov	r20, r17
     b3c:	ce 01       	movw	r24, r28
     b3e:	0e 94 29 04 	call	0x852	; 0x852 <setpixel>
	setpixel(buff, x0 + x, y0 - y, color);
     b42:	20 2f       	mov	r18, r16
     b44:	41 2f       	mov	r20, r17
     b46:	69 2d       	mov	r22, r9
     b48:	ce 01       	movw	r24, r28
     b4a:	0e 94 29 04 	call	0x852	; 0x852 <setpixel>
	setpixel(buff, x0 - x, y0 + y, color);
     b4e:	1a 2d       	mov	r17, r10
     b50:	18 0d       	add	r17, r8
     b52:	20 2f       	mov	r18, r16
     b54:	41 2f       	mov	r20, r17
     b56:	69 2d       	mov	r22, r9
     b58:	ce 01       	movw	r24, r28
     b5a:	0e 94 29 04 	call	0x852	; 0x852 <setpixel>
	setpixel(buff, x0 + x, y0 + y, color);
     b5e:	20 2f       	mov	r18, r16
     b60:	41 2f       	mov	r20, r17
     b62:	69 2d       	mov	r22, r9
     b64:	ce 01       	movw	r24, r28
     b66:	0e 94 29 04 	call	0x852	; 0x852 <setpixel>
	setpixel(buff, x0 - y, y0 - x, color);
     b6a:	d9 2c       	mov	r13, r9
     b6c:	da 18       	sub	r13, r10
     b6e:	20 2f       	mov	r18, r16
     b70:	48 2d       	mov	r20, r8
     b72:	6d 2d       	mov	r22, r13
     b74:	ce 01       	movw	r24, r28
     b76:	0e 94 29 04 	call	0x852	; 0x852 <setpixel>
	setpixel(buff, x0 + y, y0 - x, color);
     b7a:	1a 2d       	mov	r17, r10
     b7c:	19 0d       	add	r17, r9
     b7e:	20 2f       	mov	r18, r16
     b80:	48 2d       	mov	r20, r8
     b82:	61 2f       	mov	r22, r17
     b84:	ce 01       	movw	r24, r28
     b86:	0e 94 29 04 	call	0x852	; 0x852 <setpixel>
	setpixel(buff, x0 - y, y0 + x, color);
     b8a:	20 2f       	mov	r18, r16
     b8c:	48 2d       	mov	r20, r8
     b8e:	6d 2d       	mov	r22, r13
     b90:	ce 01       	movw	r24, r28
     b92:	0e 94 29 04 	call	0x852	; 0x852 <setpixel>
	setpixel(buff, x0 + y,y0 + x, color);
     b96:	20 2f       	mov	r18, r16
     b98:	48 2d       	mov	r20, r8
     b9a:	61 2f       	mov	r22, r17
     b9c:	ce 01       	movw	r24, r28
     b9e:	0e 94 29 04 	call	0x852	; 0x852 <setpixel>
	
	while(x < r){
     ba2:	b1 2c       	mov	r11, r1
     ba4:	1a 14       	cp	r1, r10
     ba6:	1b 04       	cpc	r1, r11
     ba8:	0c f0       	brlt	.+2      	; 0xbac <drawcircle+0xa8>
     baa:	62 c0       	rjmp	.+196    	; 0xc70 <drawcircle+0x16c>
     bac:	71 2c       	mov	r7, r1
     bae:	11 e0       	ldi	r17, 0x01	; 1
     bb0:	80 e0       	ldi	r24, 0x00	; 0
     bb2:	90 e0       	ldi	r25, 0x00	; 0

		if(err < 0){
     bb4:	ee 20       	and	r14, r14
     bb6:	44 f4       	brge	.+16     	; 0xbc8 <drawcircle+0xc4>
			err += 4 * x + 6;
     bb8:	8e 2d       	mov	r24, r14
     bba:	87 0d       	add	r24, r7
     bbc:	0f 2e       	mov	r0, r31
     bbe:	f6 e0       	ldi	r31, 0x06	; 6
     bc0:	ef 2e       	mov	r14, r31
     bc2:	f0 2d       	mov	r31, r0
     bc4:	e8 0e       	add	r14, r24
     bc6:	09 c0       	rjmp	.+18     	; 0xbda <drawcircle+0xd6>
		}
		else{

			err += 4 * (x - y) + 10;
     bc8:	8f 19       	sub	r24, r15
     bca:	9a e0       	ldi	r25, 0x0A	; 10
     bcc:	9e 0d       	add	r25, r14
     bce:	e9 2e       	mov	r14, r25
     bd0:	24 e0       	ldi	r18, 0x04	; 4
     bd2:	82 9f       	mul	r24, r18
     bd4:	e0 0c       	add	r14, r0
     bd6:	11 24       	eor	r1, r1
			y--;
     bd8:	fa 94       	dec	r15
     bda:	69 2c       	mov	r6, r9
     bdc:	61 1a       	sub	r6, r17
		}
		x++;
		setpixel(buff, x0 - x, y0 - y, color);
     bde:	20 2f       	mov	r18, r16
     be0:	d8 2c       	mov	r13, r8
     be2:	df 18       	sub	r13, r15
     be4:	4d 2d       	mov	r20, r13
     be6:	66 2d       	mov	r22, r6
     be8:	ce 01       	movw	r24, r28
     bea:	0e 94 29 04 	call	0x852	; 0x852 <setpixel>
     bee:	c9 2c       	mov	r12, r9
     bf0:	c1 0e       	add	r12, r17
		setpixel(buff, x0 + x, y0 - y, color);
     bf2:	20 2f       	mov	r18, r16
     bf4:	4d 2d       	mov	r20, r13
     bf6:	6c 2d       	mov	r22, r12
     bf8:	ce 01       	movw	r24, r28
     bfa:	0e 94 29 04 	call	0x852	; 0x852 <setpixel>
		setpixel(buff, x0 - x, y0 + y, color);
     bfe:	20 2f       	mov	r18, r16
     c00:	d8 2c       	mov	r13, r8
     c02:	df 0c       	add	r13, r15
     c04:	4d 2d       	mov	r20, r13
     c06:	66 2d       	mov	r22, r6
     c08:	ce 01       	movw	r24, r28
     c0a:	0e 94 29 04 	call	0x852	; 0x852 <setpixel>
		setpixel(buff, x0 + x, y0 + y, color);
     c0e:	20 2f       	mov	r18, r16
     c10:	4d 2d       	mov	r20, r13
     c12:	6c 2d       	mov	r22, r12
     c14:	ce 01       	movw	r24, r28
     c16:	0e 94 29 04 	call	0x852	; 0x852 <setpixel>
     c1a:	d8 2c       	mov	r13, r8
     c1c:	d1 1a       	sub	r13, r17
		setpixel(buff, x0 - y, y0 - x, color);
     c1e:	20 2f       	mov	r18, r16
     c20:	4d 2d       	mov	r20, r13
     c22:	c9 2c       	mov	r12, r9
     c24:	cf 18       	sub	r12, r15
     c26:	6c 2d       	mov	r22, r12
     c28:	ce 01       	movw	r24, r28
     c2a:	0e 94 29 04 	call	0x852	; 0x852 <setpixel>
		setpixel(buff, x0 + y, y0 - x, color);
     c2e:	20 2f       	mov	r18, r16
     c30:	4d 2d       	mov	r20, r13
     c32:	d9 2c       	mov	r13, r9
     c34:	df 0c       	add	r13, r15
     c36:	6d 2d       	mov	r22, r13
     c38:	ce 01       	movw	r24, r28
     c3a:	0e 94 29 04 	call	0x852	; 0x852 <setpixel>
     c3e:	68 2c       	mov	r6, r8
     c40:	61 0e       	add	r6, r17
		setpixel(buff, x0 - y, y0 + x, color);
     c42:	20 2f       	mov	r18, r16
     c44:	46 2d       	mov	r20, r6
     c46:	6c 2d       	mov	r22, r12
     c48:	ce 01       	movw	r24, r28
     c4a:	0e 94 29 04 	call	0x852	; 0x852 <setpixel>
		setpixel(buff, x0 + y,y0 + x, color);
     c4e:	20 2f       	mov	r18, r16
     c50:	46 2d       	mov	r20, r6
     c52:	6d 2d       	mov	r22, r13
     c54:	ce 01       	movw	r24, r28
     c56:	0e 94 29 04 	call	0x852	; 0x852 <setpixel>
	setpixel(buff, x0 - y, y0 - x, color);
	setpixel(buff, x0 + y, y0 - x, color);
	setpixel(buff, x0 - y, y0 + x, color);
	setpixel(buff, x0 + y,y0 + x, color);
	
	while(x < r){
     c5a:	81 2f       	mov	r24, r17
     c5c:	01 2e       	mov	r0, r17
     c5e:	00 0c       	add	r0, r0
     c60:	99 0b       	sbc	r25, r25
     c62:	1f 5f       	subi	r17, 0xFF	; 255
     c64:	24 e0       	ldi	r18, 0x04	; 4
     c66:	72 0e       	add	r7, r18
     c68:	8a 15       	cp	r24, r10
     c6a:	9b 05       	cpc	r25, r11
     c6c:	0c f4       	brge	.+2      	; 0xc70 <drawcircle+0x16c>
     c6e:	a2 cf       	rjmp	.-188    	; 0xbb4 <drawcircle+0xb0>
		setpixel(buff, x0 - y, y0 - x, color);
		setpixel(buff, x0 + y, y0 - x, color);
		setpixel(buff, x0 - y, y0 + x, color);
		setpixel(buff, x0 + y,y0 + x, color);
	}
}
     c70:	df 91       	pop	r29
     c72:	cf 91       	pop	r28
     c74:	1f 91       	pop	r17
     c76:	0f 91       	pop	r16
     c78:	ff 90       	pop	r15
     c7a:	ef 90       	pop	r14
     c7c:	df 90       	pop	r13
     c7e:	cf 90       	pop	r12
     c80:	bf 90       	pop	r11
     c82:	af 90       	pop	r10
     c84:	9f 90       	pop	r9
     c86:	8f 90       	pop	r8
     c88:	7f 90       	pop	r7
     c8a:	6f 90       	pop	r6
     c8c:	08 95       	ret

00000c8e <uart_putchar>:
	return c_ai;
}

int move_paddle_pl(int b_c, int p_c){
	return p_c;
}
     c8e:	cf 93       	push	r28
     c90:	c8 2f       	mov	r28, r24
     c92:	8a 30       	cpi	r24, 0x0A	; 10
     c94:	19 f4       	brne	.+6      	; 0xc9c <uart_putchar+0xe>
     c96:	8d e0       	ldi	r24, 0x0D	; 13
     c98:	0e 94 47 06 	call	0xc8e	; 0xc8e <uart_putchar>
     c9c:	e0 ec       	ldi	r30, 0xC0	; 192
     c9e:	f0 e0       	ldi	r31, 0x00	; 0
     ca0:	80 81       	ld	r24, Z
     ca2:	85 ff       	sbrs	r24, 5
     ca4:	fd cf       	rjmp	.-6      	; 0xca0 <uart_putchar+0x12>
     ca6:	c0 93 c6 00 	sts	0x00C6, r28	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7e00c6>
     caa:	80 e0       	ldi	r24, 0x00	; 0
     cac:	90 e0       	ldi	r25, 0x00	; 0
     cae:	cf 91       	pop	r28
     cb0:	08 95       	ret

00000cb2 <uart_getchar>:
     cb2:	e0 ec       	ldi	r30, 0xC0	; 192
     cb4:	f0 e0       	ldi	r31, 0x00	; 0
     cb6:	80 81       	ld	r24, Z
     cb8:	88 23       	and	r24, r24
     cba:	ec f7       	brge	.-6      	; 0xcb6 <uart_getchar+0x4>
     cbc:	80 91 c6 00 	lds	r24, 0x00C6	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7e00c6>
     cc0:	90 e0       	ldi	r25, 0x00	; 0
     cc2:	08 95       	ret

00000cc4 <uart_init>:
     cc4:	10 92 c5 00 	sts	0x00C5, r1	; 0x8000c5 <__TEXT_REGION_LENGTH__+0x7e00c5>
     cc8:	87 e6       	ldi	r24, 0x67	; 103
     cca:	80 93 c4 00 	sts	0x00C4, r24	; 0x8000c4 <__TEXT_REGION_LENGTH__+0x7e00c4>
     cce:	e0 ec       	ldi	r30, 0xC0	; 192
     cd0:	f0 e0       	ldi	r31, 0x00	; 0
     cd2:	80 81       	ld	r24, Z
     cd4:	8d 7f       	andi	r24, 0xFD	; 253
     cd6:	80 83       	st	Z, r24
     cd8:	86 e0       	ldi	r24, 0x06	; 6
     cda:	80 93 c2 00 	sts	0x00C2, r24	; 0x8000c2 <__TEXT_REGION_LENGTH__+0x7e00c2>
     cde:	88 e1       	ldi	r24, 0x18	; 24
     ce0:	80 93 c1 00 	sts	0x00C1, r24	; 0x8000c1 <__TEXT_REGION_LENGTH__+0x7e00c1>
     ce4:	ef e7       	ldi	r30, 0x7F	; 127
     ce6:	f5 e0       	ldi	r31, 0x05	; 5
     ce8:	83 e2       	ldi	r24, 0x23	; 35
     cea:	95 e0       	ldi	r25, 0x05	; 5
     cec:	93 83       	std	Z+3, r25	; 0x03
     cee:	82 83       	std	Z+2, r24	; 0x02
     cf0:	85 e1       	ldi	r24, 0x15	; 21
     cf2:	95 e0       	ldi	r25, 0x05	; 5
     cf4:	91 83       	std	Z+1, r25	; 0x01
     cf6:	80 83       	st	Z, r24
     cf8:	08 95       	ret

00000cfa <init>:
     cfa:	57 9a       	sbi	0x0a, 7	; 10
     cfc:	5f 98       	cbi	0x0b, 7	; 11
     cfe:	8b b1       	in	r24, 0x0b	; 11
     d00:	8b b9       	out	0x0b, r24	; 11
     d02:	84 b1       	in	r24, 0x04	; 4
     d04:	85 60       	ori	r24, 0x05	; 5
     d06:	84 b9       	out	0x04, r24	; 4
     d08:	85 b1       	in	r24, 0x05	; 5
     d0a:	8a 7f       	andi	r24, 0xFA	; 250
     d0c:	85 b9       	out	0x05, r24	; 5
     d0e:	85 b1       	in	r24, 0x05	; 5
     d10:	85 b9       	out	0x05, r24	; 5
     d12:	0e 94 68 03 	call	0x6d0	; 0x6d0 <lcd_init>
     d16:	8f ea       	ldi	r24, 0xAF	; 175
     d18:	0e 94 52 03 	call	0x6a4	; 0x6a4 <lcd_command>
     d1c:	80 e2       	ldi	r24, 0x20	; 32
     d1e:	0e 94 ba 03 	call	0x774	; 0x774 <lcd_set_brightness>
     d22:	84 e0       	ldi	r24, 0x04	; 4
     d24:	91 e0       	ldi	r25, 0x01	; 1
     d26:	0e 94 c5 03 	call	0x78a	; 0x78a <write_buffer>
     d2a:	2a ea       	ldi	r18, 0xAA	; 170
     d2c:	36 ee       	ldi	r19, 0xE6	; 230
     d2e:	86 e9       	ldi	r24, 0x96	; 150
     d30:	91 e0       	ldi	r25, 0x01	; 1
     d32:	21 50       	subi	r18, 0x01	; 1
     d34:	30 40       	sbci	r19, 0x00	; 0
     d36:	80 40       	sbci	r24, 0x00	; 0
     d38:	90 40       	sbci	r25, 0x00	; 0
     d3a:	d9 f7       	brne	.-10     	; 0xd32 <init+0x38>
     d3c:	00 00       	nop
     d3e:	84 e0       	ldi	r24, 0x04	; 4
     d40:	91 e0       	ldi	r25, 0x01	; 1
     d42:	0e 94 04 04 	call	0x808	; 0x808 <clear_buffer>
     d46:	2f ef       	ldi	r18, 0xFF	; 255
     d48:	33 e2       	ldi	r19, 0x23	; 35
     d4a:	84 ef       	ldi	r24, 0xF4	; 244
     d4c:	21 50       	subi	r18, 0x01	; 1
     d4e:	30 40       	sbci	r19, 0x00	; 0
     d50:	80 40       	sbci	r24, 0x00	; 0
     d52:	e1 f7       	brne	.-8      	; 0xd4c <init+0x52>
     d54:	00 c0       	rjmp	.+0      	; 0xd56 <init+0x5c>
     d56:	00 00       	nop
     d58:	80 91 77 05 	lds	r24, 0x0577	; 0x800577 <displayChar>
     d5c:	8f 5f       	subi	r24, 0xFF	; 255
     d5e:	80 93 77 05 	sts	0x0577, r24	; 0x800577 <displayChar>
     d62:	08 95       	ret

00000d64 <draw_background>:
     d64:	ef 92       	push	r14
     d66:	0f 93       	push	r16
     d68:	ee 24       	eor	r14, r14
     d6a:	e3 94       	inc	r14
     d6c:	00 e0       	ldi	r16, 0x00	; 0
     d6e:	2f e7       	ldi	r18, 0x7F	; 127
     d70:	40 e0       	ldi	r20, 0x00	; 0
     d72:	60 e0       	ldi	r22, 0x00	; 0
     d74:	84 e0       	ldi	r24, 0x04	; 4
     d76:	91 e0       	ldi	r25, 0x01	; 1
     d78:	0e 94 64 04 	call	0x8c8	; 0x8c8 <drawline>
     d7c:	0f e3       	ldi	r16, 0x3F	; 63
     d7e:	20 e0       	ldi	r18, 0x00	; 0
     d80:	40 e0       	ldi	r20, 0x00	; 0
     d82:	60 e0       	ldi	r22, 0x00	; 0
     d84:	84 e0       	ldi	r24, 0x04	; 4
     d86:	91 e0       	ldi	r25, 0x01	; 1
     d88:	0e 94 64 04 	call	0x8c8	; 0x8c8 <drawline>
     d8c:	2f e7       	ldi	r18, 0x7F	; 127
     d8e:	4f e3       	ldi	r20, 0x3F	; 63
     d90:	60 e0       	ldi	r22, 0x00	; 0
     d92:	84 e0       	ldi	r24, 0x04	; 4
     d94:	91 e0       	ldi	r25, 0x01	; 1
     d96:	0e 94 64 04 	call	0x8c8	; 0x8c8 <drawline>
     d9a:	2f e7       	ldi	r18, 0x7F	; 127
     d9c:	40 e0       	ldi	r20, 0x00	; 0
     d9e:	6f e7       	ldi	r22, 0x7F	; 127
     da0:	84 e0       	ldi	r24, 0x04	; 4
     da2:	91 e0       	ldi	r25, 0x01	; 1
     da4:	0e 94 64 04 	call	0x8c8	; 0x8c8 <drawline>
     da8:	04 e0       	ldi	r16, 0x04	; 4
     daa:	2f e3       	ldi	r18, 0x3F	; 63
     dac:	40 e0       	ldi	r20, 0x00	; 0
     dae:	6f e3       	ldi	r22, 0x3F	; 63
     db0:	84 e0       	ldi	r24, 0x04	; 4
     db2:	91 e0       	ldi	r25, 0x01	; 1
     db4:	0e 94 64 04 	call	0x8c8	; 0x8c8 <drawline>
     db8:	0c e0       	ldi	r16, 0x0C	; 12
     dba:	2f e3       	ldi	r18, 0x3F	; 63
     dbc:	48 e0       	ldi	r20, 0x08	; 8
     dbe:	6f e3       	ldi	r22, 0x3F	; 63
     dc0:	84 e0       	ldi	r24, 0x04	; 4
     dc2:	91 e0       	ldi	r25, 0x01	; 1
     dc4:	0e 94 64 04 	call	0x8c8	; 0x8c8 <drawline>
     dc8:	04 e1       	ldi	r16, 0x14	; 20
     dca:	2f e3       	ldi	r18, 0x3F	; 63
     dcc:	40 e1       	ldi	r20, 0x10	; 16
     dce:	6f e3       	ldi	r22, 0x3F	; 63
     dd0:	84 e0       	ldi	r24, 0x04	; 4
     dd2:	91 e0       	ldi	r25, 0x01	; 1
     dd4:	0e 94 64 04 	call	0x8c8	; 0x8c8 <drawline>
     dd8:	0c e1       	ldi	r16, 0x1C	; 28
     dda:	2f e3       	ldi	r18, 0x3F	; 63
     ddc:	48 e1       	ldi	r20, 0x18	; 24
     dde:	6f e3       	ldi	r22, 0x3F	; 63
     de0:	84 e0       	ldi	r24, 0x04	; 4
     de2:	91 e0       	ldi	r25, 0x01	; 1
     de4:	0e 94 64 04 	call	0x8c8	; 0x8c8 <drawline>
     de8:	0f e3       	ldi	r16, 0x3F	; 63
     dea:	2f e3       	ldi	r18, 0x3F	; 63
     dec:	4b e3       	ldi	r20, 0x3B	; 59
     dee:	6f e3       	ldi	r22, 0x3F	; 63
     df0:	84 e0       	ldi	r24, 0x04	; 4
     df2:	91 e0       	ldi	r25, 0x01	; 1
     df4:	0e 94 64 04 	call	0x8c8	; 0x8c8 <drawline>
     df8:	07 e3       	ldi	r16, 0x37	; 55
     dfa:	2f e3       	ldi	r18, 0x3F	; 63
     dfc:	43 e3       	ldi	r20, 0x33	; 51
     dfe:	6f e3       	ldi	r22, 0x3F	; 63
     e00:	84 e0       	ldi	r24, 0x04	; 4
     e02:	91 e0       	ldi	r25, 0x01	; 1
     e04:	0e 94 64 04 	call	0x8c8	; 0x8c8 <drawline>
     e08:	0f e2       	ldi	r16, 0x2F	; 47
     e0a:	2f e3       	ldi	r18, 0x3F	; 63
     e0c:	4b e2       	ldi	r20, 0x2B	; 43
     e0e:	6f e3       	ldi	r22, 0x3F	; 63
     e10:	84 e0       	ldi	r24, 0x04	; 4
     e12:	91 e0       	ldi	r25, 0x01	; 1
     e14:	0e 94 64 04 	call	0x8c8	; 0x8c8 <drawline>
     e18:	07 e2       	ldi	r16, 0x27	; 39
     e1a:	2f e3       	ldi	r18, 0x3F	; 63
     e1c:	43 e2       	ldi	r20, 0x23	; 35
     e1e:	6f e3       	ldi	r22, 0x3F	; 63
     e20:	84 e0       	ldi	r24, 0x04	; 4
     e22:	91 e0       	ldi	r25, 0x01	; 1
     e24:	0e 94 64 04 	call	0x8c8	; 0x8c8 <drawline>
     e28:	0f 91       	pop	r16
     e2a:	ef 90       	pop	r14
     e2c:	08 95       	ret

00000e2e <choose_mood>:
     e2e:	ef 92       	push	r14
     e30:	0f 93       	push	r16
     e32:	21 e3       	ldi	r18, 0x31	; 49
     e34:	35 e0       	ldi	r19, 0x05	; 5
     e36:	40 e0       	ldi	r20, 0x00	; 0
     e38:	65 e0       	ldi	r22, 0x05	; 5
     e3a:	84 e0       	ldi	r24, 0x04	; 4
     e3c:	91 e0       	ldi	r25, 0x01	; 1
     e3e:	0e 94 42 04 	call	0x884	; 0x884 <drawstring>
     e42:	ee 24       	eor	r14, r14
     e44:	e3 94       	inc	r14
     e46:	00 e1       	ldi	r16, 0x10	; 16
     e48:	21 e6       	ldi	r18, 0x61	; 97
     e4a:	4c e0       	ldi	r20, 0x0C	; 12
     e4c:	64 e1       	ldi	r22, 0x14	; 20
     e4e:	84 e0       	ldi	r24, 0x04	; 4
     e50:	91 e0       	ldi	r25, 0x01	; 1
     e52:	0e 94 50 05 	call	0xaa0	; 0xaa0 <drawrect>
     e56:	2d e3       	ldi	r18, 0x3D	; 61
     e58:	35 e0       	ldi	r19, 0x05	; 5
     e5a:	42 e0       	ldi	r20, 0x02	; 2
     e5c:	63 e2       	ldi	r22, 0x23	; 35
     e5e:	84 e0       	ldi	r24, 0x04	; 4
     e60:	91 e0       	ldi	r25, 0x01	; 1
     e62:	0e 94 42 04 	call	0x884	; 0x884 <drawstring>
     e66:	21 e6       	ldi	r18, 0x61	; 97
     e68:	4c e1       	ldi	r20, 0x1C	; 28
     e6a:	64 e1       	ldi	r22, 0x14	; 20
     e6c:	84 e0       	ldi	r24, 0x04	; 4
     e6e:	91 e0       	ldi	r25, 0x01	; 1
     e70:	0e 94 50 05 	call	0xaa0	; 0xaa0 <drawrect>
     e74:	23 e4       	ldi	r18, 0x43	; 67
     e76:	35 e0       	ldi	r19, 0x05	; 5
     e78:	44 e0       	ldi	r20, 0x04	; 4
     e7a:	63 e2       	ldi	r22, 0x23	; 35
     e7c:	84 e0       	ldi	r24, 0x04	; 4
     e7e:	91 e0       	ldi	r25, 0x01	; 1
     e80:	0e 94 42 04 	call	0x884	; 0x884 <drawstring>
     e84:	21 e6       	ldi	r18, 0x61	; 97
     e86:	4c e2       	ldi	r20, 0x2C	; 44
     e88:	64 e1       	ldi	r22, 0x14	; 20
     e8a:	84 e0       	ldi	r24, 0x04	; 4
     e8c:	91 e0       	ldi	r25, 0x01	; 1
     e8e:	0e 94 50 05 	call	0xaa0	; 0xaa0 <drawrect>
     e92:	21 e5       	ldi	r18, 0x51	; 81
     e94:	35 e0       	ldi	r19, 0x05	; 5
     e96:	46 e0       	ldi	r20, 0x06	; 6
     e98:	63 e2       	ldi	r22, 0x23	; 35
     e9a:	84 e0       	ldi	r24, 0x04	; 4
     e9c:	91 e0       	ldi	r25, 0x01	; 1
     e9e:	0e 94 42 04 	call	0x884	; 0x884 <drawstring>
     ea2:	0f 91       	pop	r16
     ea4:	ef 90       	pop	r14
     ea6:	08 95       	ret

00000ea8 <score>:
     ea8:	cf 93       	push	r28
     eaa:	df 93       	push	r29
     eac:	cd b7       	in	r28, 0x3d	; 61
     eae:	de b7       	in	r29, 0x3e	; 62
     eb0:	2e 97       	sbiw	r28, 0x0e	; 14
     eb2:	0f b6       	in	r0, 0x3f	; 63
     eb4:	f8 94       	cli
     eb6:	de bf       	out	0x3e, r29	; 62
     eb8:	0f be       	out	0x3f, r0	; 63
     eba:	cd bf       	out	0x3d, r28	; 61
     ebc:	87 e0       	ldi	r24, 0x07	; 7
     ebe:	eb e5       	ldi	r30, 0x5B	; 91
     ec0:	f5 e0       	ldi	r31, 0x05	; 5
     ec2:	de 01       	movw	r26, r28
     ec4:	11 96       	adiw	r26, 0x01	; 1
     ec6:	01 90       	ld	r0, Z+
     ec8:	0d 92       	st	X+, r0
     eca:	8a 95       	dec	r24
     ecc:	e1 f7       	brne	.-8      	; 0xec6 <score+0x1e>
     ece:	87 e0       	ldi	r24, 0x07	; 7
     ed0:	eb e5       	ldi	r30, 0x5B	; 91
     ed2:	f5 e0       	ldi	r31, 0x05	; 5
     ed4:	de 01       	movw	r26, r28
     ed6:	18 96       	adiw	r26, 0x08	; 8
     ed8:	01 90       	ld	r0, Z+
     eda:	0d 92       	st	X+, r0
     edc:	8a 95       	dec	r24
     ede:	e1 f7       	brne	.-8      	; 0xed8 <score+0x30>
     ee0:	9e 01       	movw	r18, r28
     ee2:	2f 5f       	subi	r18, 0xFF	; 255
     ee4:	3f 4f       	sbci	r19, 0xFF	; 255
     ee6:	40 e0       	ldi	r20, 0x00	; 0
     ee8:	6f e0       	ldi	r22, 0x0F	; 15
     eea:	84 e0       	ldi	r24, 0x04	; 4
     eec:	91 e0       	ldi	r25, 0x01	; 1
     eee:	0e 94 42 04 	call	0x884	; 0x884 <drawstring>
     ef2:	9e 01       	movw	r18, r28
     ef4:	28 5f       	subi	r18, 0xF8	; 248
     ef6:	3f 4f       	sbci	r19, 0xFF	; 255
     ef8:	40 e0       	ldi	r20, 0x00	; 0
     efa:	6c e4       	ldi	r22, 0x4C	; 76
     efc:	84 e0       	ldi	r24, 0x04	; 4
     efe:	91 e0       	ldi	r25, 0x01	; 1
     f00:	0e 94 42 04 	call	0x884	; 0x884 <drawstring>
     f04:	20 91 14 05 	lds	r18, 0x0514	; 0x800514 <play1_score>
     f08:	20 5d       	subi	r18, 0xD0	; 208
     f0a:	40 e0       	ldi	r20, 0x00	; 0
     f0c:	62 e3       	ldi	r22, 0x32	; 50
     f0e:	84 e0       	ldi	r24, 0x04	; 4
     f10:	91 e0       	ldi	r25, 0x01	; 1
     f12:	0e 94 0d 04 	call	0x81a	; 0x81a <drawchar>
     f16:	20 91 76 05 	lds	r18, 0x0576	; 0x800576 <__data_end>
     f1a:	20 5d       	subi	r18, 0xD0	; 208
     f1c:	40 e0       	ldi	r20, 0x00	; 0
     f1e:	6f e6       	ldi	r22, 0x6F	; 111
     f20:	84 e0       	ldi	r24, 0x04	; 4
     f22:	91 e0       	ldi	r25, 0x01	; 1
     f24:	0e 94 0d 04 	call	0x81a	; 0x81a <drawchar>
     f28:	2e 96       	adiw	r28, 0x0e	; 14
     f2a:	0f b6       	in	r0, 0x3f	; 63
     f2c:	f8 94       	cli
     f2e:	de bf       	out	0x3e, r29	; 62
     f30:	0f be       	out	0x3f, r0	; 63
     f32:	cd bf       	out	0x3d, r28	; 61
     f34:	df 91       	pop	r29
     f36:	cf 91       	pop	r28
     f38:	08 95       	ret

00000f3a <move_ball>:
     f3a:	e8 e7       	ldi	r30, 0x78	; 120
     f3c:	f5 e0       	ldi	r31, 0x05	; 5
     f3e:	20 81       	ld	r18, Z
     f40:	92 81       	ldd	r25, Z+2	; 0x02
     f42:	92 0f       	add	r25, r18
     f44:	90 83       	st	Z, r25
     f46:	43 81       	ldd	r20, Z+3	; 0x03
     f48:	21 81       	ldd	r18, Z+1	; 0x01
     f4a:	34 2f       	mov	r19, r20
     f4c:	32 0f       	add	r19, r18
     f4e:	31 83       	std	Z+1, r19	; 0x01
     f50:	24 81       	ldd	r18, Z+4	; 0x04
     f52:	59 2f       	mov	r21, r25
     f54:	52 0f       	add	r21, r18
     f56:	92 1b       	sub	r25, r18
     f58:	32 17       	cp	r19, r18
     f5a:	19 f0       	breq	.+6      	; 0xf62 <move_ball+0x28>
     f5c:	23 0f       	add	r18, r19
     f5e:	2f 33       	cpi	r18, 0x3F	; 63
     f60:	30 f0       	brcs	.+12     	; 0xf6e <move_ball+0x34>
     f62:	41 95       	neg	r20
     f64:	40 93 7b 05 	sts	0x057B, r20	; 0x80057b <ball+0x3>
     f68:	28 98       	cbi	0x05, 0	; 5
     f6a:	2a 98       	cbi	0x05, 2	; 5
     f6c:	5f 9a       	sbi	0x0b, 7	; 11
     f6e:	5a 37       	cpi	r21, 0x7A	; 122
     f70:	28 f1       	brcs	.+74     	; 0xfbc <move_ball+0x82>
     f72:	20 91 79 05 	lds	r18, 0x0579	; 0x800579 <ball+0x1>
     f76:	3b ef       	ldi	r19, 0xFB	; 251
     f78:	38 0f       	add	r19, r24
     f7a:	23 17       	cp	r18, r19
     f7c:	f8 f0       	brcs	.+62     	; 0xfbc <move_ball+0x82>
     f7e:	8b 5f       	subi	r24, 0xFB	; 251
     f80:	82 17       	cp	r24, r18
     f82:	c8 f4       	brcc	.+50     	; 0xfb6 <move_ball+0x7c>
     f84:	1b c0       	rjmp	.+54     	; 0xfbc <move_ball+0x82>
     f86:	91 e0       	ldi	r25, 0x01	; 1
     f88:	01 c0       	rjmp	.+2      	; 0xf8c <move_ball+0x52>
     f8a:	90 e0       	ldi	r25, 0x00	; 0
     f8c:	80 91 79 05 	lds	r24, 0x0579	; 0x800579 <ball+0x1>
     f90:	2b ef       	ldi	r18, 0xFB	; 251
     f92:	26 0f       	add	r18, r22
     f94:	82 17       	cp	r24, r18
     f96:	60 f0       	brcs	.+24     	; 0xfb0 <move_ball+0x76>
     f98:	6b 5f       	subi	r22, 0xFB	; 251
     f9a:	68 17       	cp	r22, r24
     f9c:	48 f0       	brcs	.+18     	; 0xfb0 <move_ball+0x76>
     f9e:	e8 e7       	ldi	r30, 0x78	; 120
     fa0:	f5 e0       	ldi	r31, 0x05	; 5
     fa2:	82 81       	ldd	r24, Z+2	; 0x02
     fa4:	81 95       	neg	r24
     fa6:	82 83       	std	Z+2, r24	; 0x02
     fa8:	28 98       	cbi	0x05, 0	; 5
     faa:	2a 9a       	sbi	0x05, 2	; 5
     fac:	5f 98       	cbi	0x0b, 7	; 11
     fae:	08 95       	ret
     fb0:	91 11       	cpse	r25, r1
     fb2:	f5 cf       	rjmp	.-22     	; 0xf9e <move_ball+0x64>
     fb4:	08 95       	ret
     fb6:	95 30       	cpi	r25, 0x05	; 5
     fb8:	90 f7       	brcc	.-28     	; 0xf9e <move_ball+0x64>
     fba:	e5 cf       	rjmp	.-54     	; 0xf86 <move_ball+0x4c>
     fbc:	95 30       	cpi	r25, 0x05	; 5
     fbe:	28 f3       	brcs	.-54     	; 0xf8a <move_ball+0x50>
     fc0:	08 95       	ret

00000fc2 <move_paddle_ai>:
     fc2:	18 16       	cp	r1, r24
     fc4:	19 06       	cpc	r1, r25
     fc6:	14 f0       	brlt	.+4      	; 0xfcc <move_paddle_ai+0xa>
     fc8:	01 96       	adiw	r24, 0x01	; 1
     fca:	08 95       	ret
     fcc:	9c 01       	movw	r18, r24
     fce:	26 5f       	subi	r18, 0xF6	; 246
     fd0:	3f 4f       	sbci	r19, 0xFF	; 255
     fd2:	2f 33       	cpi	r18, 0x3F	; 63
     fd4:	31 05       	cpc	r19, r1
     fd6:	14 f0       	brlt	.+4      	; 0xfdc <move_paddle_ai+0x1a>
     fd8:	01 97       	sbiw	r24, 0x01	; 1
     fda:	08 95       	ret
     fdc:	9c 01       	movw	r18, r24
     fde:	2b 5f       	subi	r18, 0xFB	; 251
     fe0:	3f 4f       	sbci	r19, 0xFF	; 255
     fe2:	26 17       	cp	r18, r22
     fe4:	37 07       	cpc	r19, r23
     fe6:	14 f4       	brge	.+4      	; 0xfec <move_paddle_ai+0x2a>
     fe8:	01 96       	adiw	r24, 0x01	; 1
     fea:	08 95       	ret
     fec:	62 17       	cp	r22, r18
     fee:	73 07       	cpc	r23, r19
     ff0:	0c f4       	brge	.+2      	; 0xff4 <move_paddle_ai+0x32>
     ff2:	01 97       	sbiw	r24, 0x01	; 1
     ff4:	08 95       	ret

00000ff6 <draw_now>:

void draw_now(int c_ai, int c_pl, int ball_x, int ball_y){
     ff6:	ef 92       	push	r14
     ff8:	0f 93       	push	r16
     ffa:	cf 93       	push	r28
     ffc:	df 93       	push	r29
     ffe:	d8 2f       	mov	r29, r24
    1000:	c6 2f       	mov	r28, r22
    1002:	64 2f       	mov	r22, r20
    1004:	42 2f       	mov	r20, r18
	
	drawcircle(buff, ball_x, ball_y, 3, BLACK);
    1006:	01 e0       	ldi	r16, 0x01	; 1
    1008:	23 e0       	ldi	r18, 0x03	; 3
    100a:	84 e0       	ldi	r24, 0x04	; 4
    100c:	91 e0       	ldi	r25, 0x01	; 1
    100e:	0e 94 82 05 	call	0xb04	; 0xb04 <drawcircle>
	
	fillrect(buff, 2, c_ai, 3, 11, BLACK);
    1012:	ee 24       	eor	r14, r14
    1014:	e3 94       	inc	r14
    1016:	0b e0       	ldi	r16, 0x0B	; 11
    1018:	23 e0       	ldi	r18, 0x03	; 3
    101a:	4d 2f       	mov	r20, r29
    101c:	62 e0       	ldi	r22, 0x02	; 2
    101e:	84 e0       	ldi	r24, 0x04	; 4
    1020:	91 e0       	ldi	r25, 0x01	; 1
    1022:	0e 94 0d 05 	call	0xa1a	; 0xa1a <fillrect>
	fillrect(buff, 122, c_pl, 3, 11, BLACK);
    1026:	23 e0       	ldi	r18, 0x03	; 3
    1028:	4c 2f       	mov	r20, r28
    102a:	6a e7       	ldi	r22, 0x7A	; 122
    102c:	84 e0       	ldi	r24, 0x04	; 4
    102e:	91 e0       	ldi	r25, 0x01	; 1
    1030:	0e 94 0d 05 	call	0xa1a	; 0xa1a <fillrect>
	
	write_buffer(buff);
    1034:	84 e0       	ldi	r24, 0x04	; 4
    1036:	91 e0       	ldi	r25, 0x01	; 1
    1038:	0e 94 c5 03 	call	0x78a	; 0x78a <write_buffer>
	return 0;
}
    103c:	df 91       	pop	r29
    103e:	cf 91       	pop	r28
    1040:	0f 91       	pop	r16
    1042:	ef 90       	pop	r14
    1044:	08 95       	ret

00001046 <main>:


int main(void)
{
	uart_init();
    1046:	0e 94 62 06 	call	0xcc4	; 0xcc4 <uart_init>

	init();
    104a:	0e 94 7d 06 	call	0xcfa	; 0xcfa <init>
	clear_buffer(buff);
    104e:	84 e0       	ldi	r24, 0x04	; 4
    1050:	91 e0       	ldi	r25, 0x01	; 1
    1052:	0e 94 04 04 	call	0x808	; 0x808 <clear_buffer>
	choose_mood();
    1056:	0e 94 17 07 	call	0xe2e	; 0xe2e <choose_mood>
	write_buffer(buff);
    105a:	84 e0       	ldi	r24, 0x04	; 4
    105c:	91 e0       	ldi	r25, 0x01	; 1
    105e:	0e 94 c5 03 	call	0x78a	; 0x78a <write_buffer>
	
	ball.x	= 63;
    1062:	e8 e7       	ldi	r30, 0x78	; 120
    1064:	f5 e0       	ldi	r31, 0x05	; 5
    1066:	8f e3       	ldi	r24, 0x3F	; 63
    1068:	80 83       	st	Z, r24
	ball.y	= 13;
    106a:	8d e0       	ldi	r24, 0x0D	; 13
    106c:	81 83       	std	Z+1, r24	; 0x01
	ball.dx = ((rand() % 2) & 1) ? 1 : -1;
    106e:	0e 94 6a 0e 	call	0x1cd4	; 0x1cd4 <rand>
    1072:	81 70       	andi	r24, 0x01	; 1
    1074:	90 78       	andi	r25, 0x80	; 128
    1076:	99 23       	and	r25, r25
    1078:	24 f4       	brge	.+8      	; 0x1082 <main+0x3c>
    107a:	01 97       	sbiw	r24, 0x01	; 1
    107c:	8e 6f       	ori	r24, 0xFE	; 254
    107e:	9f 6f       	ori	r25, 0xFF	; 255
    1080:	01 96       	adiw	r24, 0x01	; 1
    1082:	80 fd       	sbrc	r24, 0
    1084:	02 c0       	rjmp	.+4      	; 0x108a <main+0x44>
    1086:	8f ef       	ldi	r24, 0xFF	; 255
    1088:	01 c0       	rjmp	.+2      	; 0x108c <main+0x46>
    108a:	81 e0       	ldi	r24, 0x01	; 1
    108c:	80 93 7a 05 	sts	0x057A, r24	; 0x80057a <ball+0x2>
	ball.dy = ((rand() % 2) & 1) ? 1 : -1;
    1090:	0e 94 6a 0e 	call	0x1cd4	; 0x1cd4 <rand>
    1094:	81 70       	andi	r24, 0x01	; 1
    1096:	90 78       	andi	r25, 0x80	; 128
    1098:	99 23       	and	r25, r25
    109a:	24 f4       	brge	.+8      	; 0x10a4 <main+0x5e>
    109c:	01 97       	sbiw	r24, 0x01	; 1
    109e:	8e 6f       	ori	r24, 0xFE	; 254
    10a0:	9f 6f       	ori	r25, 0xFF	; 255
    10a2:	01 96       	adiw	r24, 0x01	; 1
    10a4:	80 fd       	sbrc	r24, 0
    10a6:	02 c0       	rjmp	.+4      	; 0x10ac <main+0x66>
    10a8:	8f ef       	ldi	r24, 0xFF	; 255
    10aa:	01 c0       	rjmp	.+2      	; 0x10ae <main+0x68>
    10ac:	81 e0       	ldi	r24, 0x01	; 1
    10ae:	e8 e7       	ldi	r30, 0x78	; 120
    10b0:	f5 e0       	ldi	r31, 0x05	; 5
    10b2:	83 83       	std	Z+3, r24	; 0x03
	ball.r	= 3;
    10b4:	83 e0       	ldi	r24, 0x03	; 3
    10b6:	84 83       	std	Z+4, r24	; 0x04
	
	int		paddle_ai	= 27;
    10b8:	cb e1       	ldi	r28, 0x1B	; 27
    10ba:	d0 e0       	ldi	r29, 0x00	; 0
		if (touch_detect()==1){
			printf("Touched");
		}
		else if (touch_detect()==0)
		{
			printf("not touched");
    10bc:	0f 2e       	mov	r0, r31
    10be:	fa e6       	ldi	r31, 0x6A	; 106
    10c0:	af 2e       	mov	r10, r31
    10c2:	f5 e0       	ldi	r31, 0x05	; 5
    10c4:	bf 2e       	mov	r11, r31
    10c6:	f0 2d       	mov	r31, r0
		//draw_background();
		//}
		score();
		draw_background();
		if (touch_detect()==1){
			printf("Touched");
    10c8:	0f 2e       	mov	r0, r31
    10ca:	f2 e6       	ldi	r31, 0x62	; 98
    10cc:	cf 2e       	mov	r12, r31
    10ce:	f5 e0       	ldi	r31, 0x05	; 5
    10d0:	df 2e       	mov	r13, r31
    10d2:	f0 2d       	mov	r31, r0
		//ball.y--;
		//paddle_pl--;
		//paddle_ai++;
		move_ball(paddle_ai, paddle_pl);
		//move_paddle_pl();
		paddle_ai = move_paddle_ai(paddle_ai,ball.y);
    10d4:	7f 01       	movw	r14, r30
	while (1)
	{
		//while(if_dead || if_touched){
		//draw_background();
		//}
		score();
    10d6:	0e 94 54 07 	call	0xea8	; 0xea8 <score>
		draw_background();
    10da:	0e 94 b2 06 	call	0xd64	; 0xd64 <draw_background>
		if (touch_detect()==1){
    10de:	0e 94 a5 08 	call	0x114a	; 0x114a <touch_detect>
    10e2:	01 97       	sbiw	r24, 0x01	; 1
    10e4:	39 f4       	brne	.+14     	; 0x10f4 <main+0xae>
			printf("Touched");
    10e6:	df 92       	push	r13
    10e8:	cf 92       	push	r12
    10ea:	0e 94 a4 0f 	call	0x1f48	; 0x1f48 <printf>
    10ee:	0f 90       	pop	r0
    10f0:	0f 90       	pop	r0
    10f2:	0a c0       	rjmp	.+20     	; 0x1108 <main+0xc2>
		}
		else if (touch_detect()==0)
    10f4:	0e 94 a5 08 	call	0x114a	; 0x114a <touch_detect>
    10f8:	89 2b       	or	r24, r25
    10fa:	31 f4       	brne	.+12     	; 0x1108 <main+0xc2>
		{
			printf("not touched");
    10fc:	bf 92       	push	r11
    10fe:	af 92       	push	r10
    1100:	0e 94 a4 0f 	call	0x1f48	; 0x1f48 <printf>
    1104:	0f 90       	pop	r0
    1106:	0f 90       	pop	r0
		}
		//ball.x--;
		//ball.y--;
		//paddle_pl--;
		//paddle_ai++;
		move_ball(paddle_ai, paddle_pl);
    1108:	be 01       	movw	r22, r28
    110a:	ce 01       	movw	r24, r28
    110c:	0e 94 9d 07 	call	0xf3a	; 0xf3a <move_ball>
		//move_paddle_pl();
		paddle_ai = move_paddle_ai(paddle_ai,ball.y);
    1110:	f7 01       	movw	r30, r14
    1112:	01 81       	ldd	r16, Z+1	; 0x01
    1114:	10 e0       	ldi	r17, 0x00	; 0
    1116:	b8 01       	movw	r22, r16
    1118:	ce 01       	movw	r24, r28
    111a:	0e 94 e1 07 	call	0xfc2	; 0xfc2 <move_paddle_ai>
    111e:	ec 01       	movw	r28, r24
		paddle_pl = move_paddle_ai(paddle_pl,ball.y);
		draw_now(paddle_ai,paddle_pl,ball.x,ball.y);
    1120:	f7 01       	movw	r30, r14
    1122:	40 81       	ld	r20, Z
    1124:	50 e0       	ldi	r21, 0x00	; 0
    1126:	98 01       	movw	r18, r16
    1128:	bc 01       	movw	r22, r24
    112a:	0e 94 fb 07 	call	0xff6	; 0xff6 <draw_now>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
    112e:	ff ef       	ldi	r31, 0xFF	; 255
    1130:	23 ef       	ldi	r18, 0xF3	; 243
    1132:	81 e0       	ldi	r24, 0x01	; 1
    1134:	f1 50       	subi	r31, 0x01	; 1
    1136:	20 40       	sbci	r18, 0x00	; 0
    1138:	80 40       	sbci	r24, 0x00	; 0
    113a:	e1 f7       	brne	.-8      	; 0x1134 <main+0xee>
    113c:	00 c0       	rjmp	.+0      	; 0x113e <main+0xf8>
    113e:	00 00       	nop
		_delay_ms(40);
		clear_buffer(buff);
    1140:	84 e0       	ldi	r24, 0x04	; 4
    1142:	91 e0       	ldi	r25, 0x01	; 1
    1144:	0e 94 04 04 	call	0x808	; 0x808 <clear_buffer>
	}
    1148:	c6 cf       	rjmp	.-116    	; 0x10d6 <main+0x90>

0000114a <touch_detect>:
	return 0;	
	
}

int touch_detect(void){
	DDRC = 0x00;	// init PORTC to be all inputs
    114a:	17 b8       	out	0x07, r1	; 7
	DDRC |= (1 << PORTC2) | (1 << PORTC3); //Port C2/C3 outputs
    114c:	87 b1       	in	r24, 0x07	; 7
    114e:	8c 60       	ori	r24, 0x0C	; 12
    1150:	87 b9       	out	0x07, r24	; 7
	
	PORTC |= (1 << PORTC1);
    1152:	41 9a       	sbi	0x08, 1	; 8
	PORTC &= ~((1 << PORTC0) | (1<< PORTC2)|(1<<PORTC3) ); // set PC0 active high
    1154:	88 b1       	in	r24, 0x08	; 8
    1156:	82 7f       	andi	r24, 0xF2	; 242
    1158:	88 b9       	out	0x08, r24	; 8
	
	ADMUX |= (1 << REFS0); //AVcc refer
    115a:	ec e7       	ldi	r30, 0x7C	; 124
    115c:	f0 e0       	ldi	r31, 0x00	; 0
    115e:	80 81       	ld	r24, Z
    1160:	80 64       	ori	r24, 0x40	; 64
    1162:	80 83       	st	Z, r24
	ADMUX |= 0x01;
    1164:	80 81       	ld	r24, Z
    1166:	81 60       	ori	r24, 0x01	; 1
    1168:	80 83       	st	Z, r24
	ADCSRA |= (1 << ADEN); //turn on ADC
    116a:	ea e7       	ldi	r30, 0x7A	; 122
    116c:	f0 e0       	ldi	r31, 0x00	; 0
    116e:	80 81       	ld	r24, Z
    1170:	80 68       	ori	r24, 0x80	; 128
    1172:	80 83       	st	Z, r24
	ADCSRA |= (1 << ADPS2) | (1 << ADPS1) | (1 << ADPS0); //division factor = 128, ADC works in
    1174:	80 81       	ld	r24, Z
    1176:	87 60       	ori	r24, 0x07	; 7
    1178:	80 83       	st	Z, r24
	ADCSRA |= (1 << ADATE); //Signal source, in this case is the free-running
    117a:	80 81       	ld	r24, Z
    117c:	80 62       	ori	r24, 0x20	; 32
    117e:	80 83       	st	Z, r24
	ADCSRA |= (1 << ADSC); //Start conversation
    1180:	80 81       	ld	r24, Z
    1182:	80 64       	ori	r24, 0x40	; 64
    1184:	80 83       	st	Z, r24
	ADCSRB &= ~((1 << ADTS2)|(1 << ADTS1)|(1 << ADTS0));//ADC in free-running mode
    1186:	eb e7       	ldi	r30, 0x7B	; 123
    1188:	f0 e0       	ldi	r31, 0x00	; 0
    118a:	80 81       	ld	r24, Z
    118c:	88 7f       	andi	r24, 0xF8	; 248
    118e:	80 83       	st	Z, r24
	
	if (ADC > 500){
    1190:	20 91 78 00 	lds	r18, 0x0078	; 0x800078 <__TEXT_REGION_LENGTH__+0x7e0078>
    1194:	30 91 79 00 	lds	r19, 0x0079	; 0x800079 <__TEXT_REGION_LENGTH__+0x7e0079>
    1198:	81 e0       	ldi	r24, 0x01	; 1
    119a:	90 e0       	ldi	r25, 0x00	; 0
    119c:	25 3f       	cpi	r18, 0xF5	; 245
    119e:	31 40       	sbci	r19, 0x01	; 1
    11a0:	10 f0       	brcs	.+4      	; 0x11a6 <touch_detect+0x5c>
    11a2:	80 e0       	ldi	r24, 0x00	; 0
    11a4:	90 e0       	ldi	r25, 0x00	; 0
		return 0; // not touched yet
	}
	else {
		return 1; // touched
	}
}
    11a6:	08 95       	ret

000011a8 <__subsf3>:
    11a8:	50 58       	subi	r21, 0x80	; 128

000011aa <__addsf3>:
    11aa:	bb 27       	eor	r27, r27
    11ac:	aa 27       	eor	r26, r26
    11ae:	0e 94 ec 08 	call	0x11d8	; 0x11d8 <__addsf3x>
    11b2:	0c 94 07 0a 	jmp	0x140e	; 0x140e <__fp_round>
    11b6:	0e 94 f9 09 	call	0x13f2	; 0x13f2 <__fp_pscA>
    11ba:	38 f0       	brcs	.+14     	; 0x11ca <__addsf3+0x20>
    11bc:	0e 94 00 0a 	call	0x1400	; 0x1400 <__fp_pscB>
    11c0:	20 f0       	brcs	.+8      	; 0x11ca <__addsf3+0x20>
    11c2:	39 f4       	brne	.+14     	; 0x11d2 <__addsf3+0x28>
    11c4:	9f 3f       	cpi	r25, 0xFF	; 255
    11c6:	19 f4       	brne	.+6      	; 0x11ce <__addsf3+0x24>
    11c8:	26 f4       	brtc	.+8      	; 0x11d2 <__addsf3+0x28>
    11ca:	0c 94 f6 09 	jmp	0x13ec	; 0x13ec <__fp_nan>
    11ce:	0e f4       	brtc	.+2      	; 0x11d2 <__addsf3+0x28>
    11d0:	e0 95       	com	r30
    11d2:	e7 fb       	bst	r30, 7
    11d4:	0c 94 f0 09 	jmp	0x13e0	; 0x13e0 <__fp_inf>

000011d8 <__addsf3x>:
    11d8:	e9 2f       	mov	r30, r25
    11da:	0e 94 18 0a 	call	0x1430	; 0x1430 <__fp_split3>
    11de:	58 f3       	brcs	.-42     	; 0x11b6 <__addsf3+0xc>
    11e0:	ba 17       	cp	r27, r26
    11e2:	62 07       	cpc	r22, r18
    11e4:	73 07       	cpc	r23, r19
    11e6:	84 07       	cpc	r24, r20
    11e8:	95 07       	cpc	r25, r21
    11ea:	20 f0       	brcs	.+8      	; 0x11f4 <__addsf3x+0x1c>
    11ec:	79 f4       	brne	.+30     	; 0x120c <__addsf3x+0x34>
    11ee:	a6 f5       	brtc	.+104    	; 0x1258 <__addsf3x+0x80>
    11f0:	0c 94 3a 0a 	jmp	0x1474	; 0x1474 <__fp_zero>
    11f4:	0e f4       	brtc	.+2      	; 0x11f8 <__addsf3x+0x20>
    11f6:	e0 95       	com	r30
    11f8:	0b 2e       	mov	r0, r27
    11fa:	ba 2f       	mov	r27, r26
    11fc:	a0 2d       	mov	r26, r0
    11fe:	0b 01       	movw	r0, r22
    1200:	b9 01       	movw	r22, r18
    1202:	90 01       	movw	r18, r0
    1204:	0c 01       	movw	r0, r24
    1206:	ca 01       	movw	r24, r20
    1208:	a0 01       	movw	r20, r0
    120a:	11 24       	eor	r1, r1
    120c:	ff 27       	eor	r31, r31
    120e:	59 1b       	sub	r21, r25
    1210:	99 f0       	breq	.+38     	; 0x1238 <__addsf3x+0x60>
    1212:	59 3f       	cpi	r21, 0xF9	; 249
    1214:	50 f4       	brcc	.+20     	; 0x122a <__addsf3x+0x52>
    1216:	50 3e       	cpi	r21, 0xE0	; 224
    1218:	68 f1       	brcs	.+90     	; 0x1274 <__addsf3x+0x9c>
    121a:	1a 16       	cp	r1, r26
    121c:	f0 40       	sbci	r31, 0x00	; 0
    121e:	a2 2f       	mov	r26, r18
    1220:	23 2f       	mov	r18, r19
    1222:	34 2f       	mov	r19, r20
    1224:	44 27       	eor	r20, r20
    1226:	58 5f       	subi	r21, 0xF8	; 248
    1228:	f3 cf       	rjmp	.-26     	; 0x1210 <__addsf3x+0x38>
    122a:	46 95       	lsr	r20
    122c:	37 95       	ror	r19
    122e:	27 95       	ror	r18
    1230:	a7 95       	ror	r26
    1232:	f0 40       	sbci	r31, 0x00	; 0
    1234:	53 95       	inc	r21
    1236:	c9 f7       	brne	.-14     	; 0x122a <__addsf3x+0x52>
    1238:	7e f4       	brtc	.+30     	; 0x1258 <__addsf3x+0x80>
    123a:	1f 16       	cp	r1, r31
    123c:	ba 0b       	sbc	r27, r26
    123e:	62 0b       	sbc	r22, r18
    1240:	73 0b       	sbc	r23, r19
    1242:	84 0b       	sbc	r24, r20
    1244:	ba f0       	brmi	.+46     	; 0x1274 <__addsf3x+0x9c>
    1246:	91 50       	subi	r25, 0x01	; 1
    1248:	a1 f0       	breq	.+40     	; 0x1272 <__addsf3x+0x9a>
    124a:	ff 0f       	add	r31, r31
    124c:	bb 1f       	adc	r27, r27
    124e:	66 1f       	adc	r22, r22
    1250:	77 1f       	adc	r23, r23
    1252:	88 1f       	adc	r24, r24
    1254:	c2 f7       	brpl	.-16     	; 0x1246 <__addsf3x+0x6e>
    1256:	0e c0       	rjmp	.+28     	; 0x1274 <__addsf3x+0x9c>
    1258:	ba 0f       	add	r27, r26
    125a:	62 1f       	adc	r22, r18
    125c:	73 1f       	adc	r23, r19
    125e:	84 1f       	adc	r24, r20
    1260:	48 f4       	brcc	.+18     	; 0x1274 <__addsf3x+0x9c>
    1262:	87 95       	ror	r24
    1264:	77 95       	ror	r23
    1266:	67 95       	ror	r22
    1268:	b7 95       	ror	r27
    126a:	f7 95       	ror	r31
    126c:	9e 3f       	cpi	r25, 0xFE	; 254
    126e:	08 f0       	brcs	.+2      	; 0x1272 <__addsf3x+0x9a>
    1270:	b0 cf       	rjmp	.-160    	; 0x11d2 <__addsf3+0x28>
    1272:	93 95       	inc	r25
    1274:	88 0f       	add	r24, r24
    1276:	08 f0       	brcs	.+2      	; 0x127a <__addsf3x+0xa2>
    1278:	99 27       	eor	r25, r25
    127a:	ee 0f       	add	r30, r30
    127c:	97 95       	ror	r25
    127e:	87 95       	ror	r24
    1280:	08 95       	ret

00001282 <__divsf3>:
    1282:	0e 94 55 09 	call	0x12aa	; 0x12aa <__divsf3x>
    1286:	0c 94 07 0a 	jmp	0x140e	; 0x140e <__fp_round>
    128a:	0e 94 00 0a 	call	0x1400	; 0x1400 <__fp_pscB>
    128e:	58 f0       	brcs	.+22     	; 0x12a6 <__divsf3+0x24>
    1290:	0e 94 f9 09 	call	0x13f2	; 0x13f2 <__fp_pscA>
    1294:	40 f0       	brcs	.+16     	; 0x12a6 <__divsf3+0x24>
    1296:	29 f4       	brne	.+10     	; 0x12a2 <__divsf3+0x20>
    1298:	5f 3f       	cpi	r21, 0xFF	; 255
    129a:	29 f0       	breq	.+10     	; 0x12a6 <__divsf3+0x24>
    129c:	0c 94 f0 09 	jmp	0x13e0	; 0x13e0 <__fp_inf>
    12a0:	51 11       	cpse	r21, r1
    12a2:	0c 94 3b 0a 	jmp	0x1476	; 0x1476 <__fp_szero>
    12a6:	0c 94 f6 09 	jmp	0x13ec	; 0x13ec <__fp_nan>

000012aa <__divsf3x>:
    12aa:	0e 94 18 0a 	call	0x1430	; 0x1430 <__fp_split3>
    12ae:	68 f3       	brcs	.-38     	; 0x128a <__divsf3+0x8>

000012b0 <__divsf3_pse>:
    12b0:	99 23       	and	r25, r25
    12b2:	b1 f3       	breq	.-20     	; 0x12a0 <__divsf3+0x1e>
    12b4:	55 23       	and	r21, r21
    12b6:	91 f3       	breq	.-28     	; 0x129c <__divsf3+0x1a>
    12b8:	95 1b       	sub	r25, r21
    12ba:	55 0b       	sbc	r21, r21
    12bc:	bb 27       	eor	r27, r27
    12be:	aa 27       	eor	r26, r26
    12c0:	62 17       	cp	r22, r18
    12c2:	73 07       	cpc	r23, r19
    12c4:	84 07       	cpc	r24, r20
    12c6:	38 f0       	brcs	.+14     	; 0x12d6 <__divsf3_pse+0x26>
    12c8:	9f 5f       	subi	r25, 0xFF	; 255
    12ca:	5f 4f       	sbci	r21, 0xFF	; 255
    12cc:	22 0f       	add	r18, r18
    12ce:	33 1f       	adc	r19, r19
    12d0:	44 1f       	adc	r20, r20
    12d2:	aa 1f       	adc	r26, r26
    12d4:	a9 f3       	breq	.-22     	; 0x12c0 <__divsf3_pse+0x10>
    12d6:	35 d0       	rcall	.+106    	; 0x1342 <__divsf3_pse+0x92>
    12d8:	0e 2e       	mov	r0, r30
    12da:	3a f0       	brmi	.+14     	; 0x12ea <__divsf3_pse+0x3a>
    12dc:	e0 e8       	ldi	r30, 0x80	; 128
    12de:	32 d0       	rcall	.+100    	; 0x1344 <__divsf3_pse+0x94>
    12e0:	91 50       	subi	r25, 0x01	; 1
    12e2:	50 40       	sbci	r21, 0x00	; 0
    12e4:	e6 95       	lsr	r30
    12e6:	00 1c       	adc	r0, r0
    12e8:	ca f7       	brpl	.-14     	; 0x12dc <__divsf3_pse+0x2c>
    12ea:	2b d0       	rcall	.+86     	; 0x1342 <__divsf3_pse+0x92>
    12ec:	fe 2f       	mov	r31, r30
    12ee:	29 d0       	rcall	.+82     	; 0x1342 <__divsf3_pse+0x92>
    12f0:	66 0f       	add	r22, r22
    12f2:	77 1f       	adc	r23, r23
    12f4:	88 1f       	adc	r24, r24
    12f6:	bb 1f       	adc	r27, r27
    12f8:	26 17       	cp	r18, r22
    12fa:	37 07       	cpc	r19, r23
    12fc:	48 07       	cpc	r20, r24
    12fe:	ab 07       	cpc	r26, r27
    1300:	b0 e8       	ldi	r27, 0x80	; 128
    1302:	09 f0       	breq	.+2      	; 0x1306 <__divsf3_pse+0x56>
    1304:	bb 0b       	sbc	r27, r27
    1306:	80 2d       	mov	r24, r0
    1308:	bf 01       	movw	r22, r30
    130a:	ff 27       	eor	r31, r31
    130c:	93 58       	subi	r25, 0x83	; 131
    130e:	5f 4f       	sbci	r21, 0xFF	; 255
    1310:	3a f0       	brmi	.+14     	; 0x1320 <__divsf3_pse+0x70>
    1312:	9e 3f       	cpi	r25, 0xFE	; 254
    1314:	51 05       	cpc	r21, r1
    1316:	78 f0       	brcs	.+30     	; 0x1336 <__divsf3_pse+0x86>
    1318:	0c 94 f0 09 	jmp	0x13e0	; 0x13e0 <__fp_inf>
    131c:	0c 94 3b 0a 	jmp	0x1476	; 0x1476 <__fp_szero>
    1320:	5f 3f       	cpi	r21, 0xFF	; 255
    1322:	e4 f3       	brlt	.-8      	; 0x131c <__divsf3_pse+0x6c>
    1324:	98 3e       	cpi	r25, 0xE8	; 232
    1326:	d4 f3       	brlt	.-12     	; 0x131c <__divsf3_pse+0x6c>
    1328:	86 95       	lsr	r24
    132a:	77 95       	ror	r23
    132c:	67 95       	ror	r22
    132e:	b7 95       	ror	r27
    1330:	f7 95       	ror	r31
    1332:	9f 5f       	subi	r25, 0xFF	; 255
    1334:	c9 f7       	brne	.-14     	; 0x1328 <__divsf3_pse+0x78>
    1336:	88 0f       	add	r24, r24
    1338:	91 1d       	adc	r25, r1
    133a:	96 95       	lsr	r25
    133c:	87 95       	ror	r24
    133e:	97 f9       	bld	r25, 7
    1340:	08 95       	ret
    1342:	e1 e0       	ldi	r30, 0x01	; 1
    1344:	66 0f       	add	r22, r22
    1346:	77 1f       	adc	r23, r23
    1348:	88 1f       	adc	r24, r24
    134a:	bb 1f       	adc	r27, r27
    134c:	62 17       	cp	r22, r18
    134e:	73 07       	cpc	r23, r19
    1350:	84 07       	cpc	r24, r20
    1352:	ba 07       	cpc	r27, r26
    1354:	20 f0       	brcs	.+8      	; 0x135e <__divsf3_pse+0xae>
    1356:	62 1b       	sub	r22, r18
    1358:	73 0b       	sbc	r23, r19
    135a:	84 0b       	sbc	r24, r20
    135c:	ba 0b       	sbc	r27, r26
    135e:	ee 1f       	adc	r30, r30
    1360:	88 f7       	brcc	.-30     	; 0x1344 <__divsf3_pse+0x94>
    1362:	e0 95       	com	r30
    1364:	08 95       	ret

00001366 <__floatunsisf>:
    1366:	e8 94       	clt
    1368:	09 c0       	rjmp	.+18     	; 0x137c <__floatsisf+0x12>

0000136a <__floatsisf>:
    136a:	97 fb       	bst	r25, 7
    136c:	3e f4       	brtc	.+14     	; 0x137c <__floatsisf+0x12>
    136e:	90 95       	com	r25
    1370:	80 95       	com	r24
    1372:	70 95       	com	r23
    1374:	61 95       	neg	r22
    1376:	7f 4f       	sbci	r23, 0xFF	; 255
    1378:	8f 4f       	sbci	r24, 0xFF	; 255
    137a:	9f 4f       	sbci	r25, 0xFF	; 255
    137c:	99 23       	and	r25, r25
    137e:	a9 f0       	breq	.+42     	; 0x13aa <__floatsisf+0x40>
    1380:	f9 2f       	mov	r31, r25
    1382:	96 e9       	ldi	r25, 0x96	; 150
    1384:	bb 27       	eor	r27, r27
    1386:	93 95       	inc	r25
    1388:	f6 95       	lsr	r31
    138a:	87 95       	ror	r24
    138c:	77 95       	ror	r23
    138e:	67 95       	ror	r22
    1390:	b7 95       	ror	r27
    1392:	f1 11       	cpse	r31, r1
    1394:	f8 cf       	rjmp	.-16     	; 0x1386 <__floatsisf+0x1c>
    1396:	fa f4       	brpl	.+62     	; 0x13d6 <__floatsisf+0x6c>
    1398:	bb 0f       	add	r27, r27
    139a:	11 f4       	brne	.+4      	; 0x13a0 <__floatsisf+0x36>
    139c:	60 ff       	sbrs	r22, 0
    139e:	1b c0       	rjmp	.+54     	; 0x13d6 <__floatsisf+0x6c>
    13a0:	6f 5f       	subi	r22, 0xFF	; 255
    13a2:	7f 4f       	sbci	r23, 0xFF	; 255
    13a4:	8f 4f       	sbci	r24, 0xFF	; 255
    13a6:	9f 4f       	sbci	r25, 0xFF	; 255
    13a8:	16 c0       	rjmp	.+44     	; 0x13d6 <__floatsisf+0x6c>
    13aa:	88 23       	and	r24, r24
    13ac:	11 f0       	breq	.+4      	; 0x13b2 <__floatsisf+0x48>
    13ae:	96 e9       	ldi	r25, 0x96	; 150
    13b0:	11 c0       	rjmp	.+34     	; 0x13d4 <__floatsisf+0x6a>
    13b2:	77 23       	and	r23, r23
    13b4:	21 f0       	breq	.+8      	; 0x13be <__floatsisf+0x54>
    13b6:	9e e8       	ldi	r25, 0x8E	; 142
    13b8:	87 2f       	mov	r24, r23
    13ba:	76 2f       	mov	r23, r22
    13bc:	05 c0       	rjmp	.+10     	; 0x13c8 <__floatsisf+0x5e>
    13be:	66 23       	and	r22, r22
    13c0:	71 f0       	breq	.+28     	; 0x13de <__floatsisf+0x74>
    13c2:	96 e8       	ldi	r25, 0x86	; 134
    13c4:	86 2f       	mov	r24, r22
    13c6:	70 e0       	ldi	r23, 0x00	; 0
    13c8:	60 e0       	ldi	r22, 0x00	; 0
    13ca:	2a f0       	brmi	.+10     	; 0x13d6 <__floatsisf+0x6c>
    13cc:	9a 95       	dec	r25
    13ce:	66 0f       	add	r22, r22
    13d0:	77 1f       	adc	r23, r23
    13d2:	88 1f       	adc	r24, r24
    13d4:	da f7       	brpl	.-10     	; 0x13cc <__floatsisf+0x62>
    13d6:	88 0f       	add	r24, r24
    13d8:	96 95       	lsr	r25
    13da:	87 95       	ror	r24
    13dc:	97 f9       	bld	r25, 7
    13de:	08 95       	ret

000013e0 <__fp_inf>:
    13e0:	97 f9       	bld	r25, 7
    13e2:	9f 67       	ori	r25, 0x7F	; 127
    13e4:	80 e8       	ldi	r24, 0x80	; 128
    13e6:	70 e0       	ldi	r23, 0x00	; 0
    13e8:	60 e0       	ldi	r22, 0x00	; 0
    13ea:	08 95       	ret

000013ec <__fp_nan>:
    13ec:	9f ef       	ldi	r25, 0xFF	; 255
    13ee:	80 ec       	ldi	r24, 0xC0	; 192
    13f0:	08 95       	ret

000013f2 <__fp_pscA>:
    13f2:	00 24       	eor	r0, r0
    13f4:	0a 94       	dec	r0
    13f6:	16 16       	cp	r1, r22
    13f8:	17 06       	cpc	r1, r23
    13fa:	18 06       	cpc	r1, r24
    13fc:	09 06       	cpc	r0, r25
    13fe:	08 95       	ret

00001400 <__fp_pscB>:
    1400:	00 24       	eor	r0, r0
    1402:	0a 94       	dec	r0
    1404:	12 16       	cp	r1, r18
    1406:	13 06       	cpc	r1, r19
    1408:	14 06       	cpc	r1, r20
    140a:	05 06       	cpc	r0, r21
    140c:	08 95       	ret

0000140e <__fp_round>:
    140e:	09 2e       	mov	r0, r25
    1410:	03 94       	inc	r0
    1412:	00 0c       	add	r0, r0
    1414:	11 f4       	brne	.+4      	; 0x141a <__fp_round+0xc>
    1416:	88 23       	and	r24, r24
    1418:	52 f0       	brmi	.+20     	; 0x142e <__fp_round+0x20>
    141a:	bb 0f       	add	r27, r27
    141c:	40 f4       	brcc	.+16     	; 0x142e <__fp_round+0x20>
    141e:	bf 2b       	or	r27, r31
    1420:	11 f4       	brne	.+4      	; 0x1426 <__fp_round+0x18>
    1422:	60 ff       	sbrs	r22, 0
    1424:	04 c0       	rjmp	.+8      	; 0x142e <__fp_round+0x20>
    1426:	6f 5f       	subi	r22, 0xFF	; 255
    1428:	7f 4f       	sbci	r23, 0xFF	; 255
    142a:	8f 4f       	sbci	r24, 0xFF	; 255
    142c:	9f 4f       	sbci	r25, 0xFF	; 255
    142e:	08 95       	ret

00001430 <__fp_split3>:
    1430:	57 fd       	sbrc	r21, 7
    1432:	90 58       	subi	r25, 0x80	; 128
    1434:	44 0f       	add	r20, r20
    1436:	55 1f       	adc	r21, r21
    1438:	59 f0       	breq	.+22     	; 0x1450 <__fp_splitA+0x10>
    143a:	5f 3f       	cpi	r21, 0xFF	; 255
    143c:	71 f0       	breq	.+28     	; 0x145a <__fp_splitA+0x1a>
    143e:	47 95       	ror	r20

00001440 <__fp_splitA>:
    1440:	88 0f       	add	r24, r24
    1442:	97 fb       	bst	r25, 7
    1444:	99 1f       	adc	r25, r25
    1446:	61 f0       	breq	.+24     	; 0x1460 <__fp_splitA+0x20>
    1448:	9f 3f       	cpi	r25, 0xFF	; 255
    144a:	79 f0       	breq	.+30     	; 0x146a <__fp_splitA+0x2a>
    144c:	87 95       	ror	r24
    144e:	08 95       	ret
    1450:	12 16       	cp	r1, r18
    1452:	13 06       	cpc	r1, r19
    1454:	14 06       	cpc	r1, r20
    1456:	55 1f       	adc	r21, r21
    1458:	f2 cf       	rjmp	.-28     	; 0x143e <__fp_split3+0xe>
    145a:	46 95       	lsr	r20
    145c:	f1 df       	rcall	.-30     	; 0x1440 <__fp_splitA>
    145e:	08 c0       	rjmp	.+16     	; 0x1470 <__fp_splitA+0x30>
    1460:	16 16       	cp	r1, r22
    1462:	17 06       	cpc	r1, r23
    1464:	18 06       	cpc	r1, r24
    1466:	99 1f       	adc	r25, r25
    1468:	f1 cf       	rjmp	.-30     	; 0x144c <__fp_splitA+0xc>
    146a:	86 95       	lsr	r24
    146c:	71 05       	cpc	r23, r1
    146e:	61 05       	cpc	r22, r1
    1470:	08 94       	sec
    1472:	08 95       	ret

00001474 <__fp_zero>:
    1474:	e8 94       	clt

00001476 <__fp_szero>:
    1476:	bb 27       	eor	r27, r27
    1478:	66 27       	eor	r22, r22
    147a:	77 27       	eor	r23, r23
    147c:	cb 01       	movw	r24, r22
    147e:	97 f9       	bld	r25, 7
    1480:	08 95       	ret

00001482 <__gesf2>:
    1482:	0e 94 46 0a 	call	0x148c	; 0x148c <__fp_cmp>
    1486:	08 f4       	brcc	.+2      	; 0x148a <__gesf2+0x8>
    1488:	8f ef       	ldi	r24, 0xFF	; 255
    148a:	08 95       	ret

0000148c <__fp_cmp>:
    148c:	99 0f       	add	r25, r25
    148e:	00 08       	sbc	r0, r0
    1490:	55 0f       	add	r21, r21
    1492:	aa 0b       	sbc	r26, r26
    1494:	e0 e8       	ldi	r30, 0x80	; 128
    1496:	fe ef       	ldi	r31, 0xFE	; 254
    1498:	16 16       	cp	r1, r22
    149a:	17 06       	cpc	r1, r23
    149c:	e8 07       	cpc	r30, r24
    149e:	f9 07       	cpc	r31, r25
    14a0:	c0 f0       	brcs	.+48     	; 0x14d2 <__fp_cmp+0x46>
    14a2:	12 16       	cp	r1, r18
    14a4:	13 06       	cpc	r1, r19
    14a6:	e4 07       	cpc	r30, r20
    14a8:	f5 07       	cpc	r31, r21
    14aa:	98 f0       	brcs	.+38     	; 0x14d2 <__fp_cmp+0x46>
    14ac:	62 1b       	sub	r22, r18
    14ae:	73 0b       	sbc	r23, r19
    14b0:	84 0b       	sbc	r24, r20
    14b2:	95 0b       	sbc	r25, r21
    14b4:	39 f4       	brne	.+14     	; 0x14c4 <__fp_cmp+0x38>
    14b6:	0a 26       	eor	r0, r26
    14b8:	61 f0       	breq	.+24     	; 0x14d2 <__fp_cmp+0x46>
    14ba:	23 2b       	or	r18, r19
    14bc:	24 2b       	or	r18, r20
    14be:	25 2b       	or	r18, r21
    14c0:	21 f4       	brne	.+8      	; 0x14ca <__fp_cmp+0x3e>
    14c2:	08 95       	ret
    14c4:	0a 26       	eor	r0, r26
    14c6:	09 f4       	brne	.+2      	; 0x14ca <__fp_cmp+0x3e>
    14c8:	a1 40       	sbci	r26, 0x01	; 1
    14ca:	a6 95       	lsr	r26
    14cc:	8f ef       	ldi	r24, 0xFF	; 255
    14ce:	81 1d       	adc	r24, r1
    14d0:	81 1d       	adc	r24, r1
    14d2:	08 95       	ret

000014d4 <vfprintf>:
    14d4:	a0 e1       	ldi	r26, 0x10	; 16
    14d6:	b0 e0       	ldi	r27, 0x00	; 0
    14d8:	e0 e7       	ldi	r30, 0x70	; 112
    14da:	fa e0       	ldi	r31, 0x0A	; 10
    14dc:	0c 94 e7 0d 	jmp	0x1bce	; 0x1bce <__prologue_saves__>
    14e0:	7c 01       	movw	r14, r24
    14e2:	1b 01       	movw	r2, r22
    14e4:	6a 01       	movw	r12, r20
    14e6:	fc 01       	movw	r30, r24
    14e8:	17 82       	std	Z+7, r1	; 0x07
    14ea:	16 82       	std	Z+6, r1	; 0x06
    14ec:	83 81       	ldd	r24, Z+3	; 0x03
    14ee:	81 ff       	sbrs	r24, 1
    14f0:	44 c3       	rjmp	.+1672   	; 0x1b7a <vfprintf+0x6a6>
    14f2:	9e 01       	movw	r18, r28
    14f4:	2f 5f       	subi	r18, 0xFF	; 255
    14f6:	3f 4f       	sbci	r19, 0xFF	; 255
    14f8:	39 01       	movw	r6, r18
    14fa:	f7 01       	movw	r30, r14
    14fc:	93 81       	ldd	r25, Z+3	; 0x03
    14fe:	f1 01       	movw	r30, r2
    1500:	93 fd       	sbrc	r25, 3
    1502:	85 91       	lpm	r24, Z+
    1504:	93 ff       	sbrs	r25, 3
    1506:	81 91       	ld	r24, Z+
    1508:	1f 01       	movw	r2, r30
    150a:	88 23       	and	r24, r24
    150c:	09 f4       	brne	.+2      	; 0x1510 <vfprintf+0x3c>
    150e:	31 c3       	rjmp	.+1634   	; 0x1b72 <vfprintf+0x69e>
    1510:	85 32       	cpi	r24, 0x25	; 37
    1512:	39 f4       	brne	.+14     	; 0x1522 <vfprintf+0x4e>
    1514:	93 fd       	sbrc	r25, 3
    1516:	85 91       	lpm	r24, Z+
    1518:	93 ff       	sbrs	r25, 3
    151a:	81 91       	ld	r24, Z+
    151c:	1f 01       	movw	r2, r30
    151e:	85 32       	cpi	r24, 0x25	; 37
    1520:	39 f4       	brne	.+14     	; 0x1530 <vfprintf+0x5c>
    1522:	b7 01       	movw	r22, r14
    1524:	90 e0       	ldi	r25, 0x00	; 0
    1526:	0e 94 68 0f 	call	0x1ed0	; 0x1ed0 <fputc>
    152a:	56 01       	movw	r10, r12
    152c:	65 01       	movw	r12, r10
    152e:	e5 cf       	rjmp	.-54     	; 0x14fa <vfprintf+0x26>
    1530:	10 e0       	ldi	r17, 0x00	; 0
    1532:	51 2c       	mov	r5, r1
    1534:	91 2c       	mov	r9, r1
    1536:	ff e1       	ldi	r31, 0x1F	; 31
    1538:	f9 15       	cp	r31, r9
    153a:	d8 f0       	brcs	.+54     	; 0x1572 <vfprintf+0x9e>
    153c:	8b 32       	cpi	r24, 0x2B	; 43
    153e:	79 f0       	breq	.+30     	; 0x155e <vfprintf+0x8a>
    1540:	38 f4       	brcc	.+14     	; 0x1550 <vfprintf+0x7c>
    1542:	80 32       	cpi	r24, 0x20	; 32
    1544:	79 f0       	breq	.+30     	; 0x1564 <vfprintf+0x90>
    1546:	83 32       	cpi	r24, 0x23	; 35
    1548:	a1 f4       	brne	.+40     	; 0x1572 <vfprintf+0x9e>
    154a:	f9 2d       	mov	r31, r9
    154c:	f0 61       	ori	r31, 0x10	; 16
    154e:	2e c0       	rjmp	.+92     	; 0x15ac <vfprintf+0xd8>
    1550:	8d 32       	cpi	r24, 0x2D	; 45
    1552:	61 f0       	breq	.+24     	; 0x156c <vfprintf+0x98>
    1554:	80 33       	cpi	r24, 0x30	; 48
    1556:	69 f4       	brne	.+26     	; 0x1572 <vfprintf+0x9e>
    1558:	29 2d       	mov	r18, r9
    155a:	21 60       	ori	r18, 0x01	; 1
    155c:	2d c0       	rjmp	.+90     	; 0x15b8 <vfprintf+0xe4>
    155e:	39 2d       	mov	r19, r9
    1560:	32 60       	ori	r19, 0x02	; 2
    1562:	93 2e       	mov	r9, r19
    1564:	89 2d       	mov	r24, r9
    1566:	84 60       	ori	r24, 0x04	; 4
    1568:	98 2e       	mov	r9, r24
    156a:	2a c0       	rjmp	.+84     	; 0x15c0 <vfprintf+0xec>
    156c:	e9 2d       	mov	r30, r9
    156e:	e8 60       	ori	r30, 0x08	; 8
    1570:	15 c0       	rjmp	.+42     	; 0x159c <vfprintf+0xc8>
    1572:	97 fc       	sbrc	r9, 7
    1574:	2d c0       	rjmp	.+90     	; 0x15d0 <vfprintf+0xfc>
    1576:	20 ed       	ldi	r18, 0xD0	; 208
    1578:	28 0f       	add	r18, r24
    157a:	2a 30       	cpi	r18, 0x0A	; 10
    157c:	88 f4       	brcc	.+34     	; 0x15a0 <vfprintf+0xcc>
    157e:	96 fe       	sbrs	r9, 6
    1580:	06 c0       	rjmp	.+12     	; 0x158e <vfprintf+0xba>
    1582:	3a e0       	ldi	r19, 0x0A	; 10
    1584:	13 9f       	mul	r17, r19
    1586:	20 0d       	add	r18, r0
    1588:	11 24       	eor	r1, r1
    158a:	12 2f       	mov	r17, r18
    158c:	19 c0       	rjmp	.+50     	; 0x15c0 <vfprintf+0xec>
    158e:	8a e0       	ldi	r24, 0x0A	; 10
    1590:	58 9e       	mul	r5, r24
    1592:	20 0d       	add	r18, r0
    1594:	11 24       	eor	r1, r1
    1596:	52 2e       	mov	r5, r18
    1598:	e9 2d       	mov	r30, r9
    159a:	e0 62       	ori	r30, 0x20	; 32
    159c:	9e 2e       	mov	r9, r30
    159e:	10 c0       	rjmp	.+32     	; 0x15c0 <vfprintf+0xec>
    15a0:	8e 32       	cpi	r24, 0x2E	; 46
    15a2:	31 f4       	brne	.+12     	; 0x15b0 <vfprintf+0xdc>
    15a4:	96 fc       	sbrc	r9, 6
    15a6:	e5 c2       	rjmp	.+1482   	; 0x1b72 <vfprintf+0x69e>
    15a8:	f9 2d       	mov	r31, r9
    15aa:	f0 64       	ori	r31, 0x40	; 64
    15ac:	9f 2e       	mov	r9, r31
    15ae:	08 c0       	rjmp	.+16     	; 0x15c0 <vfprintf+0xec>
    15b0:	8c 36       	cpi	r24, 0x6C	; 108
    15b2:	21 f4       	brne	.+8      	; 0x15bc <vfprintf+0xe8>
    15b4:	29 2d       	mov	r18, r9
    15b6:	20 68       	ori	r18, 0x80	; 128
    15b8:	92 2e       	mov	r9, r18
    15ba:	02 c0       	rjmp	.+4      	; 0x15c0 <vfprintf+0xec>
    15bc:	88 36       	cpi	r24, 0x68	; 104
    15be:	41 f4       	brne	.+16     	; 0x15d0 <vfprintf+0xfc>
    15c0:	f1 01       	movw	r30, r2
    15c2:	93 fd       	sbrc	r25, 3
    15c4:	85 91       	lpm	r24, Z+
    15c6:	93 ff       	sbrs	r25, 3
    15c8:	81 91       	ld	r24, Z+
    15ca:	1f 01       	movw	r2, r30
    15cc:	81 11       	cpse	r24, r1
    15ce:	b3 cf       	rjmp	.-154    	; 0x1536 <vfprintf+0x62>
    15d0:	9b eb       	ldi	r25, 0xBB	; 187
    15d2:	98 0f       	add	r25, r24
    15d4:	93 30       	cpi	r25, 0x03	; 3
    15d6:	20 f4       	brcc	.+8      	; 0x15e0 <vfprintf+0x10c>
    15d8:	99 2d       	mov	r25, r9
    15da:	90 61       	ori	r25, 0x10	; 16
    15dc:	80 5e       	subi	r24, 0xE0	; 224
    15de:	07 c0       	rjmp	.+14     	; 0x15ee <vfprintf+0x11a>
    15e0:	9b e9       	ldi	r25, 0x9B	; 155
    15e2:	98 0f       	add	r25, r24
    15e4:	93 30       	cpi	r25, 0x03	; 3
    15e6:	08 f0       	brcs	.+2      	; 0x15ea <vfprintf+0x116>
    15e8:	66 c1       	rjmp	.+716    	; 0x18b6 <vfprintf+0x3e2>
    15ea:	99 2d       	mov	r25, r9
    15ec:	9f 7e       	andi	r25, 0xEF	; 239
    15ee:	96 ff       	sbrs	r25, 6
    15f0:	16 e0       	ldi	r17, 0x06	; 6
    15f2:	9f 73       	andi	r25, 0x3F	; 63
    15f4:	99 2e       	mov	r9, r25
    15f6:	85 36       	cpi	r24, 0x65	; 101
    15f8:	19 f4       	brne	.+6      	; 0x1600 <vfprintf+0x12c>
    15fa:	90 64       	ori	r25, 0x40	; 64
    15fc:	99 2e       	mov	r9, r25
    15fe:	08 c0       	rjmp	.+16     	; 0x1610 <vfprintf+0x13c>
    1600:	86 36       	cpi	r24, 0x66	; 102
    1602:	21 f4       	brne	.+8      	; 0x160c <vfprintf+0x138>
    1604:	39 2f       	mov	r19, r25
    1606:	30 68       	ori	r19, 0x80	; 128
    1608:	93 2e       	mov	r9, r19
    160a:	02 c0       	rjmp	.+4      	; 0x1610 <vfprintf+0x13c>
    160c:	11 11       	cpse	r17, r1
    160e:	11 50       	subi	r17, 0x01	; 1
    1610:	97 fe       	sbrs	r9, 7
    1612:	07 c0       	rjmp	.+14     	; 0x1622 <vfprintf+0x14e>
    1614:	1c 33       	cpi	r17, 0x3C	; 60
    1616:	50 f4       	brcc	.+20     	; 0x162c <vfprintf+0x158>
    1618:	44 24       	eor	r4, r4
    161a:	43 94       	inc	r4
    161c:	41 0e       	add	r4, r17
    161e:	27 e0       	ldi	r18, 0x07	; 7
    1620:	0b c0       	rjmp	.+22     	; 0x1638 <vfprintf+0x164>
    1622:	18 30       	cpi	r17, 0x08	; 8
    1624:	38 f0       	brcs	.+14     	; 0x1634 <vfprintf+0x160>
    1626:	27 e0       	ldi	r18, 0x07	; 7
    1628:	17 e0       	ldi	r17, 0x07	; 7
    162a:	05 c0       	rjmp	.+10     	; 0x1636 <vfprintf+0x162>
    162c:	27 e0       	ldi	r18, 0x07	; 7
    162e:	9c e3       	ldi	r25, 0x3C	; 60
    1630:	49 2e       	mov	r4, r25
    1632:	02 c0       	rjmp	.+4      	; 0x1638 <vfprintf+0x164>
    1634:	21 2f       	mov	r18, r17
    1636:	41 2c       	mov	r4, r1
    1638:	56 01       	movw	r10, r12
    163a:	84 e0       	ldi	r24, 0x04	; 4
    163c:	a8 0e       	add	r10, r24
    163e:	b1 1c       	adc	r11, r1
    1640:	f6 01       	movw	r30, r12
    1642:	60 81       	ld	r22, Z
    1644:	71 81       	ldd	r23, Z+1	; 0x01
    1646:	82 81       	ldd	r24, Z+2	; 0x02
    1648:	93 81       	ldd	r25, Z+3	; 0x03
    164a:	04 2d       	mov	r16, r4
    164c:	a3 01       	movw	r20, r6
    164e:	0e 94 7a 0e 	call	0x1cf4	; 0x1cf4 <__ftoa_engine>
    1652:	6c 01       	movw	r12, r24
    1654:	f9 81       	ldd	r31, Y+1	; 0x01
    1656:	fc 87       	std	Y+12, r31	; 0x0c
    1658:	f0 ff       	sbrs	r31, 0
    165a:	02 c0       	rjmp	.+4      	; 0x1660 <vfprintf+0x18c>
    165c:	f3 ff       	sbrs	r31, 3
    165e:	06 c0       	rjmp	.+12     	; 0x166c <vfprintf+0x198>
    1660:	91 fc       	sbrc	r9, 1
    1662:	06 c0       	rjmp	.+12     	; 0x1670 <vfprintf+0x19c>
    1664:	92 fe       	sbrs	r9, 2
    1666:	06 c0       	rjmp	.+12     	; 0x1674 <vfprintf+0x1a0>
    1668:	00 e2       	ldi	r16, 0x20	; 32
    166a:	05 c0       	rjmp	.+10     	; 0x1676 <vfprintf+0x1a2>
    166c:	0d e2       	ldi	r16, 0x2D	; 45
    166e:	03 c0       	rjmp	.+6      	; 0x1676 <vfprintf+0x1a2>
    1670:	0b e2       	ldi	r16, 0x2B	; 43
    1672:	01 c0       	rjmp	.+2      	; 0x1676 <vfprintf+0x1a2>
    1674:	00 e0       	ldi	r16, 0x00	; 0
    1676:	8c 85       	ldd	r24, Y+12	; 0x0c
    1678:	8c 70       	andi	r24, 0x0C	; 12
    167a:	19 f0       	breq	.+6      	; 0x1682 <vfprintf+0x1ae>
    167c:	01 11       	cpse	r16, r1
    167e:	5a c2       	rjmp	.+1204   	; 0x1b34 <vfprintf+0x660>
    1680:	9b c2       	rjmp	.+1334   	; 0x1bb8 <vfprintf+0x6e4>
    1682:	97 fe       	sbrs	r9, 7
    1684:	10 c0       	rjmp	.+32     	; 0x16a6 <vfprintf+0x1d2>
    1686:	4c 0c       	add	r4, r12
    1688:	fc 85       	ldd	r31, Y+12	; 0x0c
    168a:	f4 ff       	sbrs	r31, 4
    168c:	04 c0       	rjmp	.+8      	; 0x1696 <vfprintf+0x1c2>
    168e:	8a 81       	ldd	r24, Y+2	; 0x02
    1690:	81 33       	cpi	r24, 0x31	; 49
    1692:	09 f4       	brne	.+2      	; 0x1696 <vfprintf+0x1c2>
    1694:	4a 94       	dec	r4
    1696:	14 14       	cp	r1, r4
    1698:	74 f5       	brge	.+92     	; 0x16f6 <vfprintf+0x222>
    169a:	28 e0       	ldi	r18, 0x08	; 8
    169c:	24 15       	cp	r18, r4
    169e:	78 f5       	brcc	.+94     	; 0x16fe <vfprintf+0x22a>
    16a0:	88 e0       	ldi	r24, 0x08	; 8
    16a2:	48 2e       	mov	r4, r24
    16a4:	2c c0       	rjmp	.+88     	; 0x16fe <vfprintf+0x22a>
    16a6:	96 fc       	sbrc	r9, 6
    16a8:	2a c0       	rjmp	.+84     	; 0x16fe <vfprintf+0x22a>
    16aa:	81 2f       	mov	r24, r17
    16ac:	90 e0       	ldi	r25, 0x00	; 0
    16ae:	8c 15       	cp	r24, r12
    16b0:	9d 05       	cpc	r25, r13
    16b2:	9c f0       	brlt	.+38     	; 0x16da <vfprintf+0x206>
    16b4:	3c ef       	ldi	r19, 0xFC	; 252
    16b6:	c3 16       	cp	r12, r19
    16b8:	3f ef       	ldi	r19, 0xFF	; 255
    16ba:	d3 06       	cpc	r13, r19
    16bc:	74 f0       	brlt	.+28     	; 0x16da <vfprintf+0x206>
    16be:	89 2d       	mov	r24, r9
    16c0:	80 68       	ori	r24, 0x80	; 128
    16c2:	98 2e       	mov	r9, r24
    16c4:	0a c0       	rjmp	.+20     	; 0x16da <vfprintf+0x206>
    16c6:	e2 e0       	ldi	r30, 0x02	; 2
    16c8:	f0 e0       	ldi	r31, 0x00	; 0
    16ca:	ec 0f       	add	r30, r28
    16cc:	fd 1f       	adc	r31, r29
    16ce:	e1 0f       	add	r30, r17
    16d0:	f1 1d       	adc	r31, r1
    16d2:	80 81       	ld	r24, Z
    16d4:	80 33       	cpi	r24, 0x30	; 48
    16d6:	19 f4       	brne	.+6      	; 0x16de <vfprintf+0x20a>
    16d8:	11 50       	subi	r17, 0x01	; 1
    16da:	11 11       	cpse	r17, r1
    16dc:	f4 cf       	rjmp	.-24     	; 0x16c6 <vfprintf+0x1f2>
    16de:	97 fe       	sbrs	r9, 7
    16e0:	0e c0       	rjmp	.+28     	; 0x16fe <vfprintf+0x22a>
    16e2:	44 24       	eor	r4, r4
    16e4:	43 94       	inc	r4
    16e6:	41 0e       	add	r4, r17
    16e8:	81 2f       	mov	r24, r17
    16ea:	90 e0       	ldi	r25, 0x00	; 0
    16ec:	c8 16       	cp	r12, r24
    16ee:	d9 06       	cpc	r13, r25
    16f0:	2c f4       	brge	.+10     	; 0x16fc <vfprintf+0x228>
    16f2:	1c 19       	sub	r17, r12
    16f4:	04 c0       	rjmp	.+8      	; 0x16fe <vfprintf+0x22a>
    16f6:	44 24       	eor	r4, r4
    16f8:	43 94       	inc	r4
    16fa:	01 c0       	rjmp	.+2      	; 0x16fe <vfprintf+0x22a>
    16fc:	10 e0       	ldi	r17, 0x00	; 0
    16fe:	97 fe       	sbrs	r9, 7
    1700:	06 c0       	rjmp	.+12     	; 0x170e <vfprintf+0x23a>
    1702:	1c 14       	cp	r1, r12
    1704:	1d 04       	cpc	r1, r13
    1706:	34 f4       	brge	.+12     	; 0x1714 <vfprintf+0x240>
    1708:	c6 01       	movw	r24, r12
    170a:	01 96       	adiw	r24, 0x01	; 1
    170c:	05 c0       	rjmp	.+10     	; 0x1718 <vfprintf+0x244>
    170e:	85 e0       	ldi	r24, 0x05	; 5
    1710:	90 e0       	ldi	r25, 0x00	; 0
    1712:	02 c0       	rjmp	.+4      	; 0x1718 <vfprintf+0x244>
    1714:	81 e0       	ldi	r24, 0x01	; 1
    1716:	90 e0       	ldi	r25, 0x00	; 0
    1718:	01 11       	cpse	r16, r1
    171a:	01 96       	adiw	r24, 0x01	; 1
    171c:	11 23       	and	r17, r17
    171e:	31 f0       	breq	.+12     	; 0x172c <vfprintf+0x258>
    1720:	21 2f       	mov	r18, r17
    1722:	30 e0       	ldi	r19, 0x00	; 0
    1724:	2f 5f       	subi	r18, 0xFF	; 255
    1726:	3f 4f       	sbci	r19, 0xFF	; 255
    1728:	82 0f       	add	r24, r18
    172a:	93 1f       	adc	r25, r19
    172c:	25 2d       	mov	r18, r5
    172e:	30 e0       	ldi	r19, 0x00	; 0
    1730:	82 17       	cp	r24, r18
    1732:	93 07       	cpc	r25, r19
    1734:	14 f4       	brge	.+4      	; 0x173a <vfprintf+0x266>
    1736:	58 1a       	sub	r5, r24
    1738:	01 c0       	rjmp	.+2      	; 0x173c <vfprintf+0x268>
    173a:	51 2c       	mov	r5, r1
    173c:	89 2d       	mov	r24, r9
    173e:	89 70       	andi	r24, 0x09	; 9
    1740:	49 f4       	brne	.+18     	; 0x1754 <vfprintf+0x280>
    1742:	55 20       	and	r5, r5
    1744:	39 f0       	breq	.+14     	; 0x1754 <vfprintf+0x280>
    1746:	b7 01       	movw	r22, r14
    1748:	80 e2       	ldi	r24, 0x20	; 32
    174a:	90 e0       	ldi	r25, 0x00	; 0
    174c:	0e 94 68 0f 	call	0x1ed0	; 0x1ed0 <fputc>
    1750:	5a 94       	dec	r5
    1752:	f7 cf       	rjmp	.-18     	; 0x1742 <vfprintf+0x26e>
    1754:	00 23       	and	r16, r16
    1756:	29 f0       	breq	.+10     	; 0x1762 <vfprintf+0x28e>
    1758:	b7 01       	movw	r22, r14
    175a:	80 2f       	mov	r24, r16
    175c:	90 e0       	ldi	r25, 0x00	; 0
    175e:	0e 94 68 0f 	call	0x1ed0	; 0x1ed0 <fputc>
    1762:	93 fc       	sbrc	r9, 3
    1764:	09 c0       	rjmp	.+18     	; 0x1778 <vfprintf+0x2a4>
    1766:	55 20       	and	r5, r5
    1768:	39 f0       	breq	.+14     	; 0x1778 <vfprintf+0x2a4>
    176a:	b7 01       	movw	r22, r14
    176c:	80 e3       	ldi	r24, 0x30	; 48
    176e:	90 e0       	ldi	r25, 0x00	; 0
    1770:	0e 94 68 0f 	call	0x1ed0	; 0x1ed0 <fputc>
    1774:	5a 94       	dec	r5
    1776:	f7 cf       	rjmp	.-18     	; 0x1766 <vfprintf+0x292>
    1778:	97 fe       	sbrs	r9, 7
    177a:	4c c0       	rjmp	.+152    	; 0x1814 <vfprintf+0x340>
    177c:	46 01       	movw	r8, r12
    177e:	d7 fe       	sbrs	r13, 7
    1780:	02 c0       	rjmp	.+4      	; 0x1786 <vfprintf+0x2b2>
    1782:	81 2c       	mov	r8, r1
    1784:	91 2c       	mov	r9, r1
    1786:	c6 01       	movw	r24, r12
    1788:	88 19       	sub	r24, r8
    178a:	99 09       	sbc	r25, r9
    178c:	f3 01       	movw	r30, r6
    178e:	e8 0f       	add	r30, r24
    1790:	f9 1f       	adc	r31, r25
    1792:	fe 87       	std	Y+14, r31	; 0x0e
    1794:	ed 87       	std	Y+13, r30	; 0x0d
    1796:	96 01       	movw	r18, r12
    1798:	24 19       	sub	r18, r4
    179a:	31 09       	sbc	r19, r1
    179c:	38 8b       	std	Y+16, r19	; 0x10
    179e:	2f 87       	std	Y+15, r18	; 0x0f
    17a0:	01 2f       	mov	r16, r17
    17a2:	10 e0       	ldi	r17, 0x00	; 0
    17a4:	11 95       	neg	r17
    17a6:	01 95       	neg	r16
    17a8:	11 09       	sbc	r17, r1
    17aa:	3f ef       	ldi	r19, 0xFF	; 255
    17ac:	83 16       	cp	r8, r19
    17ae:	93 06       	cpc	r9, r19
    17b0:	29 f4       	brne	.+10     	; 0x17bc <vfprintf+0x2e8>
    17b2:	b7 01       	movw	r22, r14
    17b4:	8e e2       	ldi	r24, 0x2E	; 46
    17b6:	90 e0       	ldi	r25, 0x00	; 0
    17b8:	0e 94 68 0f 	call	0x1ed0	; 0x1ed0 <fputc>
    17bc:	c8 14       	cp	r12, r8
    17be:	d9 04       	cpc	r13, r9
    17c0:	4c f0       	brlt	.+18     	; 0x17d4 <vfprintf+0x300>
    17c2:	8f 85       	ldd	r24, Y+15	; 0x0f
    17c4:	98 89       	ldd	r25, Y+16	; 0x10
    17c6:	88 15       	cp	r24, r8
    17c8:	99 05       	cpc	r25, r9
    17ca:	24 f4       	brge	.+8      	; 0x17d4 <vfprintf+0x300>
    17cc:	ed 85       	ldd	r30, Y+13	; 0x0d
    17ce:	fe 85       	ldd	r31, Y+14	; 0x0e
    17d0:	81 81       	ldd	r24, Z+1	; 0x01
    17d2:	01 c0       	rjmp	.+2      	; 0x17d6 <vfprintf+0x302>
    17d4:	80 e3       	ldi	r24, 0x30	; 48
    17d6:	f1 e0       	ldi	r31, 0x01	; 1
    17d8:	8f 1a       	sub	r8, r31
    17da:	91 08       	sbc	r9, r1
    17dc:	2d 85       	ldd	r18, Y+13	; 0x0d
    17de:	3e 85       	ldd	r19, Y+14	; 0x0e
    17e0:	2f 5f       	subi	r18, 0xFF	; 255
    17e2:	3f 4f       	sbci	r19, 0xFF	; 255
    17e4:	3e 87       	std	Y+14, r19	; 0x0e
    17e6:	2d 87       	std	Y+13, r18	; 0x0d
    17e8:	80 16       	cp	r8, r16
    17ea:	91 06       	cpc	r9, r17
    17ec:	2c f0       	brlt	.+10     	; 0x17f8 <vfprintf+0x324>
    17ee:	b7 01       	movw	r22, r14
    17f0:	90 e0       	ldi	r25, 0x00	; 0
    17f2:	0e 94 68 0f 	call	0x1ed0	; 0x1ed0 <fputc>
    17f6:	d9 cf       	rjmp	.-78     	; 0x17aa <vfprintf+0x2d6>
    17f8:	c8 14       	cp	r12, r8
    17fa:	d9 04       	cpc	r13, r9
    17fc:	41 f4       	brne	.+16     	; 0x180e <vfprintf+0x33a>
    17fe:	9a 81       	ldd	r25, Y+2	; 0x02
    1800:	96 33       	cpi	r25, 0x36	; 54
    1802:	20 f4       	brcc	.+8      	; 0x180c <vfprintf+0x338>
    1804:	95 33       	cpi	r25, 0x35	; 53
    1806:	19 f4       	brne	.+6      	; 0x180e <vfprintf+0x33a>
    1808:	3c 85       	ldd	r19, Y+12	; 0x0c
    180a:	34 ff       	sbrs	r19, 4
    180c:	81 e3       	ldi	r24, 0x31	; 49
    180e:	b7 01       	movw	r22, r14
    1810:	90 e0       	ldi	r25, 0x00	; 0
    1812:	4e c0       	rjmp	.+156    	; 0x18b0 <vfprintf+0x3dc>
    1814:	8a 81       	ldd	r24, Y+2	; 0x02
    1816:	81 33       	cpi	r24, 0x31	; 49
    1818:	19 f0       	breq	.+6      	; 0x1820 <vfprintf+0x34c>
    181a:	9c 85       	ldd	r25, Y+12	; 0x0c
    181c:	9f 7e       	andi	r25, 0xEF	; 239
    181e:	9c 87       	std	Y+12, r25	; 0x0c
    1820:	b7 01       	movw	r22, r14
    1822:	90 e0       	ldi	r25, 0x00	; 0
    1824:	0e 94 68 0f 	call	0x1ed0	; 0x1ed0 <fputc>
    1828:	11 11       	cpse	r17, r1
    182a:	05 c0       	rjmp	.+10     	; 0x1836 <vfprintf+0x362>
    182c:	94 fc       	sbrc	r9, 4
    182e:	18 c0       	rjmp	.+48     	; 0x1860 <vfprintf+0x38c>
    1830:	85 e6       	ldi	r24, 0x65	; 101
    1832:	90 e0       	ldi	r25, 0x00	; 0
    1834:	17 c0       	rjmp	.+46     	; 0x1864 <vfprintf+0x390>
    1836:	b7 01       	movw	r22, r14
    1838:	8e e2       	ldi	r24, 0x2E	; 46
    183a:	90 e0       	ldi	r25, 0x00	; 0
    183c:	0e 94 68 0f 	call	0x1ed0	; 0x1ed0 <fputc>
    1840:	1e 5f       	subi	r17, 0xFE	; 254
    1842:	82 e0       	ldi	r24, 0x02	; 2
    1844:	01 e0       	ldi	r16, 0x01	; 1
    1846:	08 0f       	add	r16, r24
    1848:	f3 01       	movw	r30, r6
    184a:	e8 0f       	add	r30, r24
    184c:	f1 1d       	adc	r31, r1
    184e:	80 81       	ld	r24, Z
    1850:	b7 01       	movw	r22, r14
    1852:	90 e0       	ldi	r25, 0x00	; 0
    1854:	0e 94 68 0f 	call	0x1ed0	; 0x1ed0 <fputc>
    1858:	80 2f       	mov	r24, r16
    185a:	01 13       	cpse	r16, r17
    185c:	f3 cf       	rjmp	.-26     	; 0x1844 <vfprintf+0x370>
    185e:	e6 cf       	rjmp	.-52     	; 0x182c <vfprintf+0x358>
    1860:	85 e4       	ldi	r24, 0x45	; 69
    1862:	90 e0       	ldi	r25, 0x00	; 0
    1864:	b7 01       	movw	r22, r14
    1866:	0e 94 68 0f 	call	0x1ed0	; 0x1ed0 <fputc>
    186a:	d7 fc       	sbrc	r13, 7
    186c:	06 c0       	rjmp	.+12     	; 0x187a <vfprintf+0x3a6>
    186e:	c1 14       	cp	r12, r1
    1870:	d1 04       	cpc	r13, r1
    1872:	41 f4       	brne	.+16     	; 0x1884 <vfprintf+0x3b0>
    1874:	ec 85       	ldd	r30, Y+12	; 0x0c
    1876:	e4 ff       	sbrs	r30, 4
    1878:	05 c0       	rjmp	.+10     	; 0x1884 <vfprintf+0x3b0>
    187a:	d1 94       	neg	r13
    187c:	c1 94       	neg	r12
    187e:	d1 08       	sbc	r13, r1
    1880:	8d e2       	ldi	r24, 0x2D	; 45
    1882:	01 c0       	rjmp	.+2      	; 0x1886 <vfprintf+0x3b2>
    1884:	8b e2       	ldi	r24, 0x2B	; 43
    1886:	b7 01       	movw	r22, r14
    1888:	90 e0       	ldi	r25, 0x00	; 0
    188a:	0e 94 68 0f 	call	0x1ed0	; 0x1ed0 <fputc>
    188e:	80 e3       	ldi	r24, 0x30	; 48
    1890:	2a e0       	ldi	r18, 0x0A	; 10
    1892:	c2 16       	cp	r12, r18
    1894:	d1 04       	cpc	r13, r1
    1896:	2c f0       	brlt	.+10     	; 0x18a2 <vfprintf+0x3ce>
    1898:	8f 5f       	subi	r24, 0xFF	; 255
    189a:	fa e0       	ldi	r31, 0x0A	; 10
    189c:	cf 1a       	sub	r12, r31
    189e:	d1 08       	sbc	r13, r1
    18a0:	f7 cf       	rjmp	.-18     	; 0x1890 <vfprintf+0x3bc>
    18a2:	b7 01       	movw	r22, r14
    18a4:	90 e0       	ldi	r25, 0x00	; 0
    18a6:	0e 94 68 0f 	call	0x1ed0	; 0x1ed0 <fputc>
    18aa:	b7 01       	movw	r22, r14
    18ac:	c6 01       	movw	r24, r12
    18ae:	c0 96       	adiw	r24, 0x30	; 48
    18b0:	0e 94 68 0f 	call	0x1ed0	; 0x1ed0 <fputc>
    18b4:	54 c1       	rjmp	.+680    	; 0x1b5e <vfprintf+0x68a>
    18b6:	83 36       	cpi	r24, 0x63	; 99
    18b8:	31 f0       	breq	.+12     	; 0x18c6 <vfprintf+0x3f2>
    18ba:	83 37       	cpi	r24, 0x73	; 115
    18bc:	79 f0       	breq	.+30     	; 0x18dc <vfprintf+0x408>
    18be:	83 35       	cpi	r24, 0x53	; 83
    18c0:	09 f0       	breq	.+2      	; 0x18c4 <vfprintf+0x3f0>
    18c2:	56 c0       	rjmp	.+172    	; 0x1970 <vfprintf+0x49c>
    18c4:	20 c0       	rjmp	.+64     	; 0x1906 <vfprintf+0x432>
    18c6:	56 01       	movw	r10, r12
    18c8:	32 e0       	ldi	r19, 0x02	; 2
    18ca:	a3 0e       	add	r10, r19
    18cc:	b1 1c       	adc	r11, r1
    18ce:	f6 01       	movw	r30, r12
    18d0:	80 81       	ld	r24, Z
    18d2:	89 83       	std	Y+1, r24	; 0x01
    18d4:	01 e0       	ldi	r16, 0x01	; 1
    18d6:	10 e0       	ldi	r17, 0x00	; 0
    18d8:	63 01       	movw	r12, r6
    18da:	12 c0       	rjmp	.+36     	; 0x1900 <vfprintf+0x42c>
    18dc:	56 01       	movw	r10, r12
    18de:	f2 e0       	ldi	r31, 0x02	; 2
    18e0:	af 0e       	add	r10, r31
    18e2:	b1 1c       	adc	r11, r1
    18e4:	f6 01       	movw	r30, r12
    18e6:	c0 80       	ld	r12, Z
    18e8:	d1 80       	ldd	r13, Z+1	; 0x01
    18ea:	96 fe       	sbrs	r9, 6
    18ec:	03 c0       	rjmp	.+6      	; 0x18f4 <vfprintf+0x420>
    18ee:	61 2f       	mov	r22, r17
    18f0:	70 e0       	ldi	r23, 0x00	; 0
    18f2:	02 c0       	rjmp	.+4      	; 0x18f8 <vfprintf+0x424>
    18f4:	6f ef       	ldi	r22, 0xFF	; 255
    18f6:	7f ef       	ldi	r23, 0xFF	; 255
    18f8:	c6 01       	movw	r24, r12
    18fa:	0e 94 5d 0f 	call	0x1eba	; 0x1eba <strnlen>
    18fe:	8c 01       	movw	r16, r24
    1900:	f9 2d       	mov	r31, r9
    1902:	ff 77       	andi	r31, 0x7F	; 127
    1904:	14 c0       	rjmp	.+40     	; 0x192e <vfprintf+0x45a>
    1906:	56 01       	movw	r10, r12
    1908:	22 e0       	ldi	r18, 0x02	; 2
    190a:	a2 0e       	add	r10, r18
    190c:	b1 1c       	adc	r11, r1
    190e:	f6 01       	movw	r30, r12
    1910:	c0 80       	ld	r12, Z
    1912:	d1 80       	ldd	r13, Z+1	; 0x01
    1914:	96 fe       	sbrs	r9, 6
    1916:	03 c0       	rjmp	.+6      	; 0x191e <vfprintf+0x44a>
    1918:	61 2f       	mov	r22, r17
    191a:	70 e0       	ldi	r23, 0x00	; 0
    191c:	02 c0       	rjmp	.+4      	; 0x1922 <vfprintf+0x44e>
    191e:	6f ef       	ldi	r22, 0xFF	; 255
    1920:	7f ef       	ldi	r23, 0xFF	; 255
    1922:	c6 01       	movw	r24, r12
    1924:	0e 94 52 0f 	call	0x1ea4	; 0x1ea4 <strnlen_P>
    1928:	8c 01       	movw	r16, r24
    192a:	f9 2d       	mov	r31, r9
    192c:	f0 68       	ori	r31, 0x80	; 128
    192e:	9f 2e       	mov	r9, r31
    1930:	f3 fd       	sbrc	r31, 3
    1932:	1a c0       	rjmp	.+52     	; 0x1968 <vfprintf+0x494>
    1934:	85 2d       	mov	r24, r5
    1936:	90 e0       	ldi	r25, 0x00	; 0
    1938:	08 17       	cp	r16, r24
    193a:	19 07       	cpc	r17, r25
    193c:	a8 f4       	brcc	.+42     	; 0x1968 <vfprintf+0x494>
    193e:	b7 01       	movw	r22, r14
    1940:	80 e2       	ldi	r24, 0x20	; 32
    1942:	90 e0       	ldi	r25, 0x00	; 0
    1944:	0e 94 68 0f 	call	0x1ed0	; 0x1ed0 <fputc>
    1948:	5a 94       	dec	r5
    194a:	f4 cf       	rjmp	.-24     	; 0x1934 <vfprintf+0x460>
    194c:	f6 01       	movw	r30, r12
    194e:	97 fc       	sbrc	r9, 7
    1950:	85 91       	lpm	r24, Z+
    1952:	97 fe       	sbrs	r9, 7
    1954:	81 91       	ld	r24, Z+
    1956:	6f 01       	movw	r12, r30
    1958:	b7 01       	movw	r22, r14
    195a:	90 e0       	ldi	r25, 0x00	; 0
    195c:	0e 94 68 0f 	call	0x1ed0	; 0x1ed0 <fputc>
    1960:	51 10       	cpse	r5, r1
    1962:	5a 94       	dec	r5
    1964:	01 50       	subi	r16, 0x01	; 1
    1966:	11 09       	sbc	r17, r1
    1968:	01 15       	cp	r16, r1
    196a:	11 05       	cpc	r17, r1
    196c:	79 f7       	brne	.-34     	; 0x194c <vfprintf+0x478>
    196e:	f7 c0       	rjmp	.+494    	; 0x1b5e <vfprintf+0x68a>
    1970:	84 36       	cpi	r24, 0x64	; 100
    1972:	11 f0       	breq	.+4      	; 0x1978 <vfprintf+0x4a4>
    1974:	89 36       	cpi	r24, 0x69	; 105
    1976:	61 f5       	brne	.+88     	; 0x19d0 <vfprintf+0x4fc>
    1978:	56 01       	movw	r10, r12
    197a:	97 fe       	sbrs	r9, 7
    197c:	09 c0       	rjmp	.+18     	; 0x1990 <vfprintf+0x4bc>
    197e:	24 e0       	ldi	r18, 0x04	; 4
    1980:	a2 0e       	add	r10, r18
    1982:	b1 1c       	adc	r11, r1
    1984:	f6 01       	movw	r30, r12
    1986:	60 81       	ld	r22, Z
    1988:	71 81       	ldd	r23, Z+1	; 0x01
    198a:	82 81       	ldd	r24, Z+2	; 0x02
    198c:	93 81       	ldd	r25, Z+3	; 0x03
    198e:	0a c0       	rjmp	.+20     	; 0x19a4 <vfprintf+0x4d0>
    1990:	f2 e0       	ldi	r31, 0x02	; 2
    1992:	af 0e       	add	r10, r31
    1994:	b1 1c       	adc	r11, r1
    1996:	f6 01       	movw	r30, r12
    1998:	60 81       	ld	r22, Z
    199a:	71 81       	ldd	r23, Z+1	; 0x01
    199c:	07 2e       	mov	r0, r23
    199e:	00 0c       	add	r0, r0
    19a0:	88 0b       	sbc	r24, r24
    19a2:	99 0b       	sbc	r25, r25
    19a4:	f9 2d       	mov	r31, r9
    19a6:	ff 76       	andi	r31, 0x6F	; 111
    19a8:	9f 2e       	mov	r9, r31
    19aa:	97 ff       	sbrs	r25, 7
    19ac:	09 c0       	rjmp	.+18     	; 0x19c0 <vfprintf+0x4ec>
    19ae:	90 95       	com	r25
    19b0:	80 95       	com	r24
    19b2:	70 95       	com	r23
    19b4:	61 95       	neg	r22
    19b6:	7f 4f       	sbci	r23, 0xFF	; 255
    19b8:	8f 4f       	sbci	r24, 0xFF	; 255
    19ba:	9f 4f       	sbci	r25, 0xFF	; 255
    19bc:	f0 68       	ori	r31, 0x80	; 128
    19be:	9f 2e       	mov	r9, r31
    19c0:	2a e0       	ldi	r18, 0x0A	; 10
    19c2:	30 e0       	ldi	r19, 0x00	; 0
    19c4:	a3 01       	movw	r20, r6
    19c6:	0e 94 ba 0f 	call	0x1f74	; 0x1f74 <__ultoa_invert>
    19ca:	c8 2e       	mov	r12, r24
    19cc:	c6 18       	sub	r12, r6
    19ce:	3f c0       	rjmp	.+126    	; 0x1a4e <vfprintf+0x57a>
    19d0:	09 2d       	mov	r16, r9
    19d2:	85 37       	cpi	r24, 0x75	; 117
    19d4:	21 f4       	brne	.+8      	; 0x19de <vfprintf+0x50a>
    19d6:	0f 7e       	andi	r16, 0xEF	; 239
    19d8:	2a e0       	ldi	r18, 0x0A	; 10
    19da:	30 e0       	ldi	r19, 0x00	; 0
    19dc:	1d c0       	rjmp	.+58     	; 0x1a18 <vfprintf+0x544>
    19de:	09 7f       	andi	r16, 0xF9	; 249
    19e0:	8f 36       	cpi	r24, 0x6F	; 111
    19e2:	91 f0       	breq	.+36     	; 0x1a08 <vfprintf+0x534>
    19e4:	18 f4       	brcc	.+6      	; 0x19ec <vfprintf+0x518>
    19e6:	88 35       	cpi	r24, 0x58	; 88
    19e8:	59 f0       	breq	.+22     	; 0x1a00 <vfprintf+0x52c>
    19ea:	c3 c0       	rjmp	.+390    	; 0x1b72 <vfprintf+0x69e>
    19ec:	80 37       	cpi	r24, 0x70	; 112
    19ee:	19 f0       	breq	.+6      	; 0x19f6 <vfprintf+0x522>
    19f0:	88 37       	cpi	r24, 0x78	; 120
    19f2:	11 f0       	breq	.+4      	; 0x19f8 <vfprintf+0x524>
    19f4:	be c0       	rjmp	.+380    	; 0x1b72 <vfprintf+0x69e>
    19f6:	00 61       	ori	r16, 0x10	; 16
    19f8:	04 ff       	sbrs	r16, 4
    19fa:	09 c0       	rjmp	.+18     	; 0x1a0e <vfprintf+0x53a>
    19fc:	04 60       	ori	r16, 0x04	; 4
    19fe:	07 c0       	rjmp	.+14     	; 0x1a0e <vfprintf+0x53a>
    1a00:	94 fe       	sbrs	r9, 4
    1a02:	08 c0       	rjmp	.+16     	; 0x1a14 <vfprintf+0x540>
    1a04:	06 60       	ori	r16, 0x06	; 6
    1a06:	06 c0       	rjmp	.+12     	; 0x1a14 <vfprintf+0x540>
    1a08:	28 e0       	ldi	r18, 0x08	; 8
    1a0a:	30 e0       	ldi	r19, 0x00	; 0
    1a0c:	05 c0       	rjmp	.+10     	; 0x1a18 <vfprintf+0x544>
    1a0e:	20 e1       	ldi	r18, 0x10	; 16
    1a10:	30 e0       	ldi	r19, 0x00	; 0
    1a12:	02 c0       	rjmp	.+4      	; 0x1a18 <vfprintf+0x544>
    1a14:	20 e1       	ldi	r18, 0x10	; 16
    1a16:	32 e0       	ldi	r19, 0x02	; 2
    1a18:	56 01       	movw	r10, r12
    1a1a:	07 ff       	sbrs	r16, 7
    1a1c:	09 c0       	rjmp	.+18     	; 0x1a30 <vfprintf+0x55c>
    1a1e:	84 e0       	ldi	r24, 0x04	; 4
    1a20:	a8 0e       	add	r10, r24
    1a22:	b1 1c       	adc	r11, r1
    1a24:	f6 01       	movw	r30, r12
    1a26:	60 81       	ld	r22, Z
    1a28:	71 81       	ldd	r23, Z+1	; 0x01
    1a2a:	82 81       	ldd	r24, Z+2	; 0x02
    1a2c:	93 81       	ldd	r25, Z+3	; 0x03
    1a2e:	08 c0       	rjmp	.+16     	; 0x1a40 <vfprintf+0x56c>
    1a30:	f2 e0       	ldi	r31, 0x02	; 2
    1a32:	af 0e       	add	r10, r31
    1a34:	b1 1c       	adc	r11, r1
    1a36:	f6 01       	movw	r30, r12
    1a38:	60 81       	ld	r22, Z
    1a3a:	71 81       	ldd	r23, Z+1	; 0x01
    1a3c:	80 e0       	ldi	r24, 0x00	; 0
    1a3e:	90 e0       	ldi	r25, 0x00	; 0
    1a40:	a3 01       	movw	r20, r6
    1a42:	0e 94 ba 0f 	call	0x1f74	; 0x1f74 <__ultoa_invert>
    1a46:	c8 2e       	mov	r12, r24
    1a48:	c6 18       	sub	r12, r6
    1a4a:	0f 77       	andi	r16, 0x7F	; 127
    1a4c:	90 2e       	mov	r9, r16
    1a4e:	96 fe       	sbrs	r9, 6
    1a50:	0b c0       	rjmp	.+22     	; 0x1a68 <vfprintf+0x594>
    1a52:	09 2d       	mov	r16, r9
    1a54:	0e 7f       	andi	r16, 0xFE	; 254
    1a56:	c1 16       	cp	r12, r17
    1a58:	50 f4       	brcc	.+20     	; 0x1a6e <vfprintf+0x59a>
    1a5a:	94 fe       	sbrs	r9, 4
    1a5c:	0a c0       	rjmp	.+20     	; 0x1a72 <vfprintf+0x59e>
    1a5e:	92 fc       	sbrc	r9, 2
    1a60:	08 c0       	rjmp	.+16     	; 0x1a72 <vfprintf+0x59e>
    1a62:	09 2d       	mov	r16, r9
    1a64:	0e 7e       	andi	r16, 0xEE	; 238
    1a66:	05 c0       	rjmp	.+10     	; 0x1a72 <vfprintf+0x59e>
    1a68:	dc 2c       	mov	r13, r12
    1a6a:	09 2d       	mov	r16, r9
    1a6c:	03 c0       	rjmp	.+6      	; 0x1a74 <vfprintf+0x5a0>
    1a6e:	dc 2c       	mov	r13, r12
    1a70:	01 c0       	rjmp	.+2      	; 0x1a74 <vfprintf+0x5a0>
    1a72:	d1 2e       	mov	r13, r17
    1a74:	04 ff       	sbrs	r16, 4
    1a76:	0d c0       	rjmp	.+26     	; 0x1a92 <vfprintf+0x5be>
    1a78:	fe 01       	movw	r30, r28
    1a7a:	ec 0d       	add	r30, r12
    1a7c:	f1 1d       	adc	r31, r1
    1a7e:	80 81       	ld	r24, Z
    1a80:	80 33       	cpi	r24, 0x30	; 48
    1a82:	11 f4       	brne	.+4      	; 0x1a88 <vfprintf+0x5b4>
    1a84:	09 7e       	andi	r16, 0xE9	; 233
    1a86:	09 c0       	rjmp	.+18     	; 0x1a9a <vfprintf+0x5c6>
    1a88:	02 ff       	sbrs	r16, 2
    1a8a:	06 c0       	rjmp	.+12     	; 0x1a98 <vfprintf+0x5c4>
    1a8c:	d3 94       	inc	r13
    1a8e:	d3 94       	inc	r13
    1a90:	04 c0       	rjmp	.+8      	; 0x1a9a <vfprintf+0x5c6>
    1a92:	80 2f       	mov	r24, r16
    1a94:	86 78       	andi	r24, 0x86	; 134
    1a96:	09 f0       	breq	.+2      	; 0x1a9a <vfprintf+0x5c6>
    1a98:	d3 94       	inc	r13
    1a9a:	03 fd       	sbrc	r16, 3
    1a9c:	11 c0       	rjmp	.+34     	; 0x1ac0 <vfprintf+0x5ec>
    1a9e:	00 ff       	sbrs	r16, 0
    1aa0:	06 c0       	rjmp	.+12     	; 0x1aae <vfprintf+0x5da>
    1aa2:	1c 2d       	mov	r17, r12
    1aa4:	d5 14       	cp	r13, r5
    1aa6:	80 f4       	brcc	.+32     	; 0x1ac8 <vfprintf+0x5f4>
    1aa8:	15 0d       	add	r17, r5
    1aaa:	1d 19       	sub	r17, r13
    1aac:	0d c0       	rjmp	.+26     	; 0x1ac8 <vfprintf+0x5f4>
    1aae:	d5 14       	cp	r13, r5
    1ab0:	58 f4       	brcc	.+22     	; 0x1ac8 <vfprintf+0x5f4>
    1ab2:	b7 01       	movw	r22, r14
    1ab4:	80 e2       	ldi	r24, 0x20	; 32
    1ab6:	90 e0       	ldi	r25, 0x00	; 0
    1ab8:	0e 94 68 0f 	call	0x1ed0	; 0x1ed0 <fputc>
    1abc:	d3 94       	inc	r13
    1abe:	f7 cf       	rjmp	.-18     	; 0x1aae <vfprintf+0x5da>
    1ac0:	d5 14       	cp	r13, r5
    1ac2:	10 f4       	brcc	.+4      	; 0x1ac8 <vfprintf+0x5f4>
    1ac4:	5d 18       	sub	r5, r13
    1ac6:	01 c0       	rjmp	.+2      	; 0x1aca <vfprintf+0x5f6>
    1ac8:	51 2c       	mov	r5, r1
    1aca:	04 ff       	sbrs	r16, 4
    1acc:	10 c0       	rjmp	.+32     	; 0x1aee <vfprintf+0x61a>
    1ace:	b7 01       	movw	r22, r14
    1ad0:	80 e3       	ldi	r24, 0x30	; 48
    1ad2:	90 e0       	ldi	r25, 0x00	; 0
    1ad4:	0e 94 68 0f 	call	0x1ed0	; 0x1ed0 <fputc>
    1ad8:	02 ff       	sbrs	r16, 2
    1ada:	17 c0       	rjmp	.+46     	; 0x1b0a <vfprintf+0x636>
    1adc:	01 fd       	sbrc	r16, 1
    1ade:	03 c0       	rjmp	.+6      	; 0x1ae6 <vfprintf+0x612>
    1ae0:	88 e7       	ldi	r24, 0x78	; 120
    1ae2:	90 e0       	ldi	r25, 0x00	; 0
    1ae4:	02 c0       	rjmp	.+4      	; 0x1aea <vfprintf+0x616>
    1ae6:	88 e5       	ldi	r24, 0x58	; 88
    1ae8:	90 e0       	ldi	r25, 0x00	; 0
    1aea:	b7 01       	movw	r22, r14
    1aec:	0c c0       	rjmp	.+24     	; 0x1b06 <vfprintf+0x632>
    1aee:	80 2f       	mov	r24, r16
    1af0:	86 78       	andi	r24, 0x86	; 134
    1af2:	59 f0       	breq	.+22     	; 0x1b0a <vfprintf+0x636>
    1af4:	01 ff       	sbrs	r16, 1
    1af6:	02 c0       	rjmp	.+4      	; 0x1afc <vfprintf+0x628>
    1af8:	8b e2       	ldi	r24, 0x2B	; 43
    1afa:	01 c0       	rjmp	.+2      	; 0x1afe <vfprintf+0x62a>
    1afc:	80 e2       	ldi	r24, 0x20	; 32
    1afe:	07 fd       	sbrc	r16, 7
    1b00:	8d e2       	ldi	r24, 0x2D	; 45
    1b02:	b7 01       	movw	r22, r14
    1b04:	90 e0       	ldi	r25, 0x00	; 0
    1b06:	0e 94 68 0f 	call	0x1ed0	; 0x1ed0 <fputc>
    1b0a:	c1 16       	cp	r12, r17
    1b0c:	38 f4       	brcc	.+14     	; 0x1b1c <vfprintf+0x648>
    1b0e:	b7 01       	movw	r22, r14
    1b10:	80 e3       	ldi	r24, 0x30	; 48
    1b12:	90 e0       	ldi	r25, 0x00	; 0
    1b14:	0e 94 68 0f 	call	0x1ed0	; 0x1ed0 <fputc>
    1b18:	11 50       	subi	r17, 0x01	; 1
    1b1a:	f7 cf       	rjmp	.-18     	; 0x1b0a <vfprintf+0x636>
    1b1c:	ca 94       	dec	r12
    1b1e:	f3 01       	movw	r30, r6
    1b20:	ec 0d       	add	r30, r12
    1b22:	f1 1d       	adc	r31, r1
    1b24:	80 81       	ld	r24, Z
    1b26:	b7 01       	movw	r22, r14
    1b28:	90 e0       	ldi	r25, 0x00	; 0
    1b2a:	0e 94 68 0f 	call	0x1ed0	; 0x1ed0 <fputc>
    1b2e:	c1 10       	cpse	r12, r1
    1b30:	f5 cf       	rjmp	.-22     	; 0x1b1c <vfprintf+0x648>
    1b32:	15 c0       	rjmp	.+42     	; 0x1b5e <vfprintf+0x68a>
    1b34:	f4 e0       	ldi	r31, 0x04	; 4
    1b36:	f5 15       	cp	r31, r5
    1b38:	60 f5       	brcc	.+88     	; 0x1b92 <vfprintf+0x6be>
    1b3a:	84 e0       	ldi	r24, 0x04	; 4
    1b3c:	58 1a       	sub	r5, r24
    1b3e:	93 fe       	sbrs	r9, 3
    1b40:	1f c0       	rjmp	.+62     	; 0x1b80 <vfprintf+0x6ac>
    1b42:	01 11       	cpse	r16, r1
    1b44:	27 c0       	rjmp	.+78     	; 0x1b94 <vfprintf+0x6c0>
    1b46:	2c 85       	ldd	r18, Y+12	; 0x0c
    1b48:	23 ff       	sbrs	r18, 3
    1b4a:	2a c0       	rjmp	.+84     	; 0x1ba0 <vfprintf+0x6cc>
    1b4c:	08 e6       	ldi	r16, 0x68	; 104
    1b4e:	10 e0       	ldi	r17, 0x00	; 0
    1b50:	39 2d       	mov	r19, r9
    1b52:	30 71       	andi	r19, 0x10	; 16
    1b54:	93 2e       	mov	r9, r19
    1b56:	f8 01       	movw	r30, r16
    1b58:	84 91       	lpm	r24, Z
    1b5a:	81 11       	cpse	r24, r1
    1b5c:	24 c0       	rjmp	.+72     	; 0x1ba6 <vfprintf+0x6d2>
    1b5e:	55 20       	and	r5, r5
    1b60:	09 f4       	brne	.+2      	; 0x1b64 <vfprintf+0x690>
    1b62:	e4 cc       	rjmp	.-1592   	; 0x152c <vfprintf+0x58>
    1b64:	b7 01       	movw	r22, r14
    1b66:	80 e2       	ldi	r24, 0x20	; 32
    1b68:	90 e0       	ldi	r25, 0x00	; 0
    1b6a:	0e 94 68 0f 	call	0x1ed0	; 0x1ed0 <fputc>
    1b6e:	5a 94       	dec	r5
    1b70:	f6 cf       	rjmp	.-20     	; 0x1b5e <vfprintf+0x68a>
    1b72:	f7 01       	movw	r30, r14
    1b74:	86 81       	ldd	r24, Z+6	; 0x06
    1b76:	97 81       	ldd	r25, Z+7	; 0x07
    1b78:	26 c0       	rjmp	.+76     	; 0x1bc6 <vfprintf+0x6f2>
    1b7a:	8f ef       	ldi	r24, 0xFF	; 255
    1b7c:	9f ef       	ldi	r25, 0xFF	; 255
    1b7e:	23 c0       	rjmp	.+70     	; 0x1bc6 <vfprintf+0x6f2>
    1b80:	b7 01       	movw	r22, r14
    1b82:	80 e2       	ldi	r24, 0x20	; 32
    1b84:	90 e0       	ldi	r25, 0x00	; 0
    1b86:	0e 94 68 0f 	call	0x1ed0	; 0x1ed0 <fputc>
    1b8a:	5a 94       	dec	r5
    1b8c:	51 10       	cpse	r5, r1
    1b8e:	f8 cf       	rjmp	.-16     	; 0x1b80 <vfprintf+0x6ac>
    1b90:	d8 cf       	rjmp	.-80     	; 0x1b42 <vfprintf+0x66e>
    1b92:	51 2c       	mov	r5, r1
    1b94:	b7 01       	movw	r22, r14
    1b96:	80 2f       	mov	r24, r16
    1b98:	90 e0       	ldi	r25, 0x00	; 0
    1b9a:	0e 94 68 0f 	call	0x1ed0	; 0x1ed0 <fputc>
    1b9e:	d3 cf       	rjmp	.-90     	; 0x1b46 <vfprintf+0x672>
    1ba0:	0c e6       	ldi	r16, 0x6C	; 108
    1ba2:	10 e0       	ldi	r17, 0x00	; 0
    1ba4:	d5 cf       	rjmp	.-86     	; 0x1b50 <vfprintf+0x67c>
    1ba6:	91 10       	cpse	r9, r1
    1ba8:	80 52       	subi	r24, 0x20	; 32
    1baa:	b7 01       	movw	r22, r14
    1bac:	90 e0       	ldi	r25, 0x00	; 0
    1bae:	0e 94 68 0f 	call	0x1ed0	; 0x1ed0 <fputc>
    1bb2:	0f 5f       	subi	r16, 0xFF	; 255
    1bb4:	1f 4f       	sbci	r17, 0xFF	; 255
    1bb6:	cf cf       	rjmp	.-98     	; 0x1b56 <vfprintf+0x682>
    1bb8:	23 e0       	ldi	r18, 0x03	; 3
    1bba:	25 15       	cp	r18, r5
    1bbc:	10 f4       	brcc	.+4      	; 0x1bc2 <vfprintf+0x6ee>
    1bbe:	83 e0       	ldi	r24, 0x03	; 3
    1bc0:	bd cf       	rjmp	.-134    	; 0x1b3c <vfprintf+0x668>
    1bc2:	51 2c       	mov	r5, r1
    1bc4:	c0 cf       	rjmp	.-128    	; 0x1b46 <vfprintf+0x672>
    1bc6:	60 96       	adiw	r28, 0x10	; 16
    1bc8:	e2 e1       	ldi	r30, 0x12	; 18
    1bca:	0c 94 03 0e 	jmp	0x1c06	; 0x1c06 <__epilogue_restores__>

00001bce <__prologue_saves__>:
    1bce:	2f 92       	push	r2
    1bd0:	3f 92       	push	r3
    1bd2:	4f 92       	push	r4
    1bd4:	5f 92       	push	r5
    1bd6:	6f 92       	push	r6
    1bd8:	7f 92       	push	r7
    1bda:	8f 92       	push	r8
    1bdc:	9f 92       	push	r9
    1bde:	af 92       	push	r10
    1be0:	bf 92       	push	r11
    1be2:	cf 92       	push	r12
    1be4:	df 92       	push	r13
    1be6:	ef 92       	push	r14
    1be8:	ff 92       	push	r15
    1bea:	0f 93       	push	r16
    1bec:	1f 93       	push	r17
    1bee:	cf 93       	push	r28
    1bf0:	df 93       	push	r29
    1bf2:	cd b7       	in	r28, 0x3d	; 61
    1bf4:	de b7       	in	r29, 0x3e	; 62
    1bf6:	ca 1b       	sub	r28, r26
    1bf8:	db 0b       	sbc	r29, r27
    1bfa:	0f b6       	in	r0, 0x3f	; 63
    1bfc:	f8 94       	cli
    1bfe:	de bf       	out	0x3e, r29	; 62
    1c00:	0f be       	out	0x3f, r0	; 63
    1c02:	cd bf       	out	0x3d, r28	; 61
    1c04:	09 94       	ijmp

00001c06 <__epilogue_restores__>:
    1c06:	2a 88       	ldd	r2, Y+18	; 0x12
    1c08:	39 88       	ldd	r3, Y+17	; 0x11
    1c0a:	48 88       	ldd	r4, Y+16	; 0x10
    1c0c:	5f 84       	ldd	r5, Y+15	; 0x0f
    1c0e:	6e 84       	ldd	r6, Y+14	; 0x0e
    1c10:	7d 84       	ldd	r7, Y+13	; 0x0d
    1c12:	8c 84       	ldd	r8, Y+12	; 0x0c
    1c14:	9b 84       	ldd	r9, Y+11	; 0x0b
    1c16:	aa 84       	ldd	r10, Y+10	; 0x0a
    1c18:	b9 84       	ldd	r11, Y+9	; 0x09
    1c1a:	c8 84       	ldd	r12, Y+8	; 0x08
    1c1c:	df 80       	ldd	r13, Y+7	; 0x07
    1c1e:	ee 80       	ldd	r14, Y+6	; 0x06
    1c20:	fd 80       	ldd	r15, Y+5	; 0x05
    1c22:	0c 81       	ldd	r16, Y+4	; 0x04
    1c24:	1b 81       	ldd	r17, Y+3	; 0x03
    1c26:	aa 81       	ldd	r26, Y+2	; 0x02
    1c28:	b9 81       	ldd	r27, Y+1	; 0x01
    1c2a:	ce 0f       	add	r28, r30
    1c2c:	d1 1d       	adc	r29, r1
    1c2e:	0f b6       	in	r0, 0x3f	; 63
    1c30:	f8 94       	cli
    1c32:	de bf       	out	0x3e, r29	; 62
    1c34:	0f be       	out	0x3f, r0	; 63
    1c36:	cd bf       	out	0x3d, r28	; 61
    1c38:	ed 01       	movw	r28, r26
    1c3a:	08 95       	ret

00001c3c <do_rand>:
    1c3c:	8f 92       	push	r8
    1c3e:	9f 92       	push	r9
    1c40:	af 92       	push	r10
    1c42:	bf 92       	push	r11
    1c44:	cf 92       	push	r12
    1c46:	df 92       	push	r13
    1c48:	ef 92       	push	r14
    1c4a:	ff 92       	push	r15
    1c4c:	cf 93       	push	r28
    1c4e:	df 93       	push	r29
    1c50:	ec 01       	movw	r28, r24
    1c52:	68 81       	ld	r22, Y
    1c54:	79 81       	ldd	r23, Y+1	; 0x01
    1c56:	8a 81       	ldd	r24, Y+2	; 0x02
    1c58:	9b 81       	ldd	r25, Y+3	; 0x03
    1c5a:	61 15       	cp	r22, r1
    1c5c:	71 05       	cpc	r23, r1
    1c5e:	81 05       	cpc	r24, r1
    1c60:	91 05       	cpc	r25, r1
    1c62:	21 f4       	brne	.+8      	; 0x1c6c <do_rand+0x30>
    1c64:	64 e2       	ldi	r22, 0x24	; 36
    1c66:	79 ed       	ldi	r23, 0xD9	; 217
    1c68:	8b e5       	ldi	r24, 0x5B	; 91
    1c6a:	97 e0       	ldi	r25, 0x07	; 7
    1c6c:	2d e1       	ldi	r18, 0x1D	; 29
    1c6e:	33 ef       	ldi	r19, 0xF3	; 243
    1c70:	41 e0       	ldi	r20, 0x01	; 1
    1c72:	50 e0       	ldi	r21, 0x00	; 0
    1c74:	0e 94 18 10 	call	0x2030	; 0x2030 <__divmodsi4>
    1c78:	49 01       	movw	r8, r18
    1c7a:	5a 01       	movw	r10, r20
    1c7c:	9b 01       	movw	r18, r22
    1c7e:	ac 01       	movw	r20, r24
    1c80:	a7 ea       	ldi	r26, 0xA7	; 167
    1c82:	b1 e4       	ldi	r27, 0x41	; 65
    1c84:	0e 94 37 10 	call	0x206e	; 0x206e <__muluhisi3>
    1c88:	6b 01       	movw	r12, r22
    1c8a:	7c 01       	movw	r14, r24
    1c8c:	ac ee       	ldi	r26, 0xEC	; 236
    1c8e:	b4 ef       	ldi	r27, 0xF4	; 244
    1c90:	a5 01       	movw	r20, r10
    1c92:	94 01       	movw	r18, r8
    1c94:	0e 94 45 10 	call	0x208a	; 0x208a <__mulohisi3>
    1c98:	dc 01       	movw	r26, r24
    1c9a:	cb 01       	movw	r24, r22
    1c9c:	8c 0d       	add	r24, r12
    1c9e:	9d 1d       	adc	r25, r13
    1ca0:	ae 1d       	adc	r26, r14
    1ca2:	bf 1d       	adc	r27, r15
    1ca4:	b7 ff       	sbrs	r27, 7
    1ca6:	03 c0       	rjmp	.+6      	; 0x1cae <do_rand+0x72>
    1ca8:	01 97       	sbiw	r24, 0x01	; 1
    1caa:	a1 09       	sbc	r26, r1
    1cac:	b0 48       	sbci	r27, 0x80	; 128
    1cae:	88 83       	st	Y, r24
    1cb0:	99 83       	std	Y+1, r25	; 0x01
    1cb2:	aa 83       	std	Y+2, r26	; 0x02
    1cb4:	bb 83       	std	Y+3, r27	; 0x03
    1cb6:	9f 77       	andi	r25, 0x7F	; 127
    1cb8:	df 91       	pop	r29
    1cba:	cf 91       	pop	r28
    1cbc:	ff 90       	pop	r15
    1cbe:	ef 90       	pop	r14
    1cc0:	df 90       	pop	r13
    1cc2:	cf 90       	pop	r12
    1cc4:	bf 90       	pop	r11
    1cc6:	af 90       	pop	r10
    1cc8:	9f 90       	pop	r9
    1cca:	8f 90       	pop	r8
    1ccc:	08 95       	ret

00001cce <rand_r>:
    1cce:	0e 94 1e 0e 	call	0x1c3c	; 0x1c3c <do_rand>
    1cd2:	08 95       	ret

00001cd4 <rand>:
    1cd4:	80 e0       	ldi	r24, 0x00	; 0
    1cd6:	91 e0       	ldi	r25, 0x01	; 1
    1cd8:	0e 94 1e 0e 	call	0x1c3c	; 0x1c3c <do_rand>
    1cdc:	08 95       	ret

00001cde <srand>:
    1cde:	a0 e0       	ldi	r26, 0x00	; 0
    1ce0:	b0 e0       	ldi	r27, 0x00	; 0
    1ce2:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__data_start>
    1ce6:	90 93 01 01 	sts	0x0101, r25	; 0x800101 <__data_start+0x1>
    1cea:	a0 93 02 01 	sts	0x0102, r26	; 0x800102 <__data_start+0x2>
    1cee:	b0 93 03 01 	sts	0x0103, r27	; 0x800103 <__data_start+0x3>
    1cf2:	08 95       	ret

00001cf4 <__ftoa_engine>:
    1cf4:	28 30       	cpi	r18, 0x08	; 8
    1cf6:	08 f0       	brcs	.+2      	; 0x1cfa <__ftoa_engine+0x6>
    1cf8:	27 e0       	ldi	r18, 0x07	; 7
    1cfa:	33 27       	eor	r19, r19
    1cfc:	da 01       	movw	r26, r20
    1cfe:	99 0f       	add	r25, r25
    1d00:	31 1d       	adc	r19, r1
    1d02:	87 fd       	sbrc	r24, 7
    1d04:	91 60       	ori	r25, 0x01	; 1
    1d06:	00 96       	adiw	r24, 0x00	; 0
    1d08:	61 05       	cpc	r22, r1
    1d0a:	71 05       	cpc	r23, r1
    1d0c:	39 f4       	brne	.+14     	; 0x1d1c <__ftoa_engine+0x28>
    1d0e:	32 60       	ori	r19, 0x02	; 2
    1d10:	2e 5f       	subi	r18, 0xFE	; 254
    1d12:	3d 93       	st	X+, r19
    1d14:	30 e3       	ldi	r19, 0x30	; 48
    1d16:	2a 95       	dec	r18
    1d18:	e1 f7       	brne	.-8      	; 0x1d12 <__ftoa_engine+0x1e>
    1d1a:	08 95       	ret
    1d1c:	9f 3f       	cpi	r25, 0xFF	; 255
    1d1e:	30 f0       	brcs	.+12     	; 0x1d2c <__ftoa_engine+0x38>
    1d20:	80 38       	cpi	r24, 0x80	; 128
    1d22:	71 05       	cpc	r23, r1
    1d24:	61 05       	cpc	r22, r1
    1d26:	09 f0       	breq	.+2      	; 0x1d2a <__ftoa_engine+0x36>
    1d28:	3c 5f       	subi	r19, 0xFC	; 252
    1d2a:	3c 5f       	subi	r19, 0xFC	; 252
    1d2c:	3d 93       	st	X+, r19
    1d2e:	91 30       	cpi	r25, 0x01	; 1
    1d30:	08 f0       	brcs	.+2      	; 0x1d34 <__ftoa_engine+0x40>
    1d32:	80 68       	ori	r24, 0x80	; 128
    1d34:	91 1d       	adc	r25, r1
    1d36:	df 93       	push	r29
    1d38:	cf 93       	push	r28
    1d3a:	1f 93       	push	r17
    1d3c:	0f 93       	push	r16
    1d3e:	ff 92       	push	r15
    1d40:	ef 92       	push	r14
    1d42:	19 2f       	mov	r17, r25
    1d44:	98 7f       	andi	r25, 0xF8	; 248
    1d46:	96 95       	lsr	r25
    1d48:	e9 2f       	mov	r30, r25
    1d4a:	96 95       	lsr	r25
    1d4c:	96 95       	lsr	r25
    1d4e:	e9 0f       	add	r30, r25
    1d50:	ff 27       	eor	r31, r31
    1d52:	e6 53       	subi	r30, 0x36	; 54
    1d54:	ff 4f       	sbci	r31, 0xFF	; 255
    1d56:	99 27       	eor	r25, r25
    1d58:	33 27       	eor	r19, r19
    1d5a:	ee 24       	eor	r14, r14
    1d5c:	ff 24       	eor	r15, r15
    1d5e:	a7 01       	movw	r20, r14
    1d60:	e7 01       	movw	r28, r14
    1d62:	05 90       	lpm	r0, Z+
    1d64:	08 94       	sec
    1d66:	07 94       	ror	r0
    1d68:	28 f4       	brcc	.+10     	; 0x1d74 <__ftoa_engine+0x80>
    1d6a:	36 0f       	add	r19, r22
    1d6c:	e7 1e       	adc	r14, r23
    1d6e:	f8 1e       	adc	r15, r24
    1d70:	49 1f       	adc	r20, r25
    1d72:	51 1d       	adc	r21, r1
    1d74:	66 0f       	add	r22, r22
    1d76:	77 1f       	adc	r23, r23
    1d78:	88 1f       	adc	r24, r24
    1d7a:	99 1f       	adc	r25, r25
    1d7c:	06 94       	lsr	r0
    1d7e:	a1 f7       	brne	.-24     	; 0x1d68 <__ftoa_engine+0x74>
    1d80:	05 90       	lpm	r0, Z+
    1d82:	07 94       	ror	r0
    1d84:	28 f4       	brcc	.+10     	; 0x1d90 <__ftoa_engine+0x9c>
    1d86:	e7 0e       	add	r14, r23
    1d88:	f8 1e       	adc	r15, r24
    1d8a:	49 1f       	adc	r20, r25
    1d8c:	56 1f       	adc	r21, r22
    1d8e:	c1 1d       	adc	r28, r1
    1d90:	77 0f       	add	r23, r23
    1d92:	88 1f       	adc	r24, r24
    1d94:	99 1f       	adc	r25, r25
    1d96:	66 1f       	adc	r22, r22
    1d98:	06 94       	lsr	r0
    1d9a:	a1 f7       	brne	.-24     	; 0x1d84 <__ftoa_engine+0x90>
    1d9c:	05 90       	lpm	r0, Z+
    1d9e:	07 94       	ror	r0
    1da0:	28 f4       	brcc	.+10     	; 0x1dac <__ftoa_engine+0xb8>
    1da2:	f8 0e       	add	r15, r24
    1da4:	49 1f       	adc	r20, r25
    1da6:	56 1f       	adc	r21, r22
    1da8:	c7 1f       	adc	r28, r23
    1daa:	d1 1d       	adc	r29, r1
    1dac:	88 0f       	add	r24, r24
    1dae:	99 1f       	adc	r25, r25
    1db0:	66 1f       	adc	r22, r22
    1db2:	77 1f       	adc	r23, r23
    1db4:	06 94       	lsr	r0
    1db6:	a1 f7       	brne	.-24     	; 0x1da0 <__ftoa_engine+0xac>
    1db8:	05 90       	lpm	r0, Z+
    1dba:	07 94       	ror	r0
    1dbc:	20 f4       	brcc	.+8      	; 0x1dc6 <__ftoa_engine+0xd2>
    1dbe:	49 0f       	add	r20, r25
    1dc0:	56 1f       	adc	r21, r22
    1dc2:	c7 1f       	adc	r28, r23
    1dc4:	d8 1f       	adc	r29, r24
    1dc6:	99 0f       	add	r25, r25
    1dc8:	66 1f       	adc	r22, r22
    1dca:	77 1f       	adc	r23, r23
    1dcc:	88 1f       	adc	r24, r24
    1dce:	06 94       	lsr	r0
    1dd0:	a9 f7       	brne	.-22     	; 0x1dbc <__ftoa_engine+0xc8>
    1dd2:	84 91       	lpm	r24, Z
    1dd4:	10 95       	com	r17
    1dd6:	17 70       	andi	r17, 0x07	; 7
    1dd8:	41 f0       	breq	.+16     	; 0x1dea <__ftoa_engine+0xf6>
    1dda:	d6 95       	lsr	r29
    1ddc:	c7 95       	ror	r28
    1dde:	57 95       	ror	r21
    1de0:	47 95       	ror	r20
    1de2:	f7 94       	ror	r15
    1de4:	e7 94       	ror	r14
    1de6:	1a 95       	dec	r17
    1de8:	c1 f7       	brne	.-16     	; 0x1dda <__ftoa_engine+0xe6>
    1dea:	e0 e7       	ldi	r30, 0x70	; 112
    1dec:	f0 e0       	ldi	r31, 0x00	; 0
    1dee:	68 94       	set
    1df0:	15 90       	lpm	r1, Z+
    1df2:	15 91       	lpm	r17, Z+
    1df4:	35 91       	lpm	r19, Z+
    1df6:	65 91       	lpm	r22, Z+
    1df8:	95 91       	lpm	r25, Z+
    1dfa:	05 90       	lpm	r0, Z+
    1dfc:	7f e2       	ldi	r23, 0x2F	; 47
    1dfe:	73 95       	inc	r23
    1e00:	e1 18       	sub	r14, r1
    1e02:	f1 0a       	sbc	r15, r17
    1e04:	43 0b       	sbc	r20, r19
    1e06:	56 0b       	sbc	r21, r22
    1e08:	c9 0b       	sbc	r28, r25
    1e0a:	d0 09       	sbc	r29, r0
    1e0c:	c0 f7       	brcc	.-16     	; 0x1dfe <__ftoa_engine+0x10a>
    1e0e:	e1 0c       	add	r14, r1
    1e10:	f1 1e       	adc	r15, r17
    1e12:	43 1f       	adc	r20, r19
    1e14:	56 1f       	adc	r21, r22
    1e16:	c9 1f       	adc	r28, r25
    1e18:	d0 1d       	adc	r29, r0
    1e1a:	7e f4       	brtc	.+30     	; 0x1e3a <__ftoa_engine+0x146>
    1e1c:	70 33       	cpi	r23, 0x30	; 48
    1e1e:	11 f4       	brne	.+4      	; 0x1e24 <__ftoa_engine+0x130>
    1e20:	8a 95       	dec	r24
    1e22:	e6 cf       	rjmp	.-52     	; 0x1df0 <__ftoa_engine+0xfc>
    1e24:	e8 94       	clt
    1e26:	01 50       	subi	r16, 0x01	; 1
    1e28:	30 f0       	brcs	.+12     	; 0x1e36 <__ftoa_engine+0x142>
    1e2a:	08 0f       	add	r16, r24
    1e2c:	0a f4       	brpl	.+2      	; 0x1e30 <__ftoa_engine+0x13c>
    1e2e:	00 27       	eor	r16, r16
    1e30:	02 17       	cp	r16, r18
    1e32:	08 f4       	brcc	.+2      	; 0x1e36 <__ftoa_engine+0x142>
    1e34:	20 2f       	mov	r18, r16
    1e36:	23 95       	inc	r18
    1e38:	02 2f       	mov	r16, r18
    1e3a:	7a 33       	cpi	r23, 0x3A	; 58
    1e3c:	28 f0       	brcs	.+10     	; 0x1e48 <__ftoa_engine+0x154>
    1e3e:	79 e3       	ldi	r23, 0x39	; 57
    1e40:	7d 93       	st	X+, r23
    1e42:	2a 95       	dec	r18
    1e44:	e9 f7       	brne	.-6      	; 0x1e40 <__ftoa_engine+0x14c>
    1e46:	10 c0       	rjmp	.+32     	; 0x1e68 <__ftoa_engine+0x174>
    1e48:	7d 93       	st	X+, r23
    1e4a:	2a 95       	dec	r18
    1e4c:	89 f6       	brne	.-94     	; 0x1df0 <__ftoa_engine+0xfc>
    1e4e:	06 94       	lsr	r0
    1e50:	97 95       	ror	r25
    1e52:	67 95       	ror	r22
    1e54:	37 95       	ror	r19
    1e56:	17 95       	ror	r17
    1e58:	17 94       	ror	r1
    1e5a:	e1 18       	sub	r14, r1
    1e5c:	f1 0a       	sbc	r15, r17
    1e5e:	43 0b       	sbc	r20, r19
    1e60:	56 0b       	sbc	r21, r22
    1e62:	c9 0b       	sbc	r28, r25
    1e64:	d0 09       	sbc	r29, r0
    1e66:	98 f0       	brcs	.+38     	; 0x1e8e <__ftoa_engine+0x19a>
    1e68:	23 95       	inc	r18
    1e6a:	7e 91       	ld	r23, -X
    1e6c:	73 95       	inc	r23
    1e6e:	7a 33       	cpi	r23, 0x3A	; 58
    1e70:	08 f0       	brcs	.+2      	; 0x1e74 <__ftoa_engine+0x180>
    1e72:	70 e3       	ldi	r23, 0x30	; 48
    1e74:	7c 93       	st	X, r23
    1e76:	20 13       	cpse	r18, r16
    1e78:	b8 f7       	brcc	.-18     	; 0x1e68 <__ftoa_engine+0x174>
    1e7a:	7e 91       	ld	r23, -X
    1e7c:	70 61       	ori	r23, 0x10	; 16
    1e7e:	7d 93       	st	X+, r23
    1e80:	30 f0       	brcs	.+12     	; 0x1e8e <__ftoa_engine+0x19a>
    1e82:	83 95       	inc	r24
    1e84:	71 e3       	ldi	r23, 0x31	; 49
    1e86:	7d 93       	st	X+, r23
    1e88:	70 e3       	ldi	r23, 0x30	; 48
    1e8a:	2a 95       	dec	r18
    1e8c:	e1 f7       	brne	.-8      	; 0x1e86 <__ftoa_engine+0x192>
    1e8e:	11 24       	eor	r1, r1
    1e90:	ef 90       	pop	r14
    1e92:	ff 90       	pop	r15
    1e94:	0f 91       	pop	r16
    1e96:	1f 91       	pop	r17
    1e98:	cf 91       	pop	r28
    1e9a:	df 91       	pop	r29
    1e9c:	99 27       	eor	r25, r25
    1e9e:	87 fd       	sbrc	r24, 7
    1ea0:	90 95       	com	r25
    1ea2:	08 95       	ret

00001ea4 <strnlen_P>:
    1ea4:	fc 01       	movw	r30, r24
    1ea6:	05 90       	lpm	r0, Z+
    1ea8:	61 50       	subi	r22, 0x01	; 1
    1eaa:	70 40       	sbci	r23, 0x00	; 0
    1eac:	01 10       	cpse	r0, r1
    1eae:	d8 f7       	brcc	.-10     	; 0x1ea6 <strnlen_P+0x2>
    1eb0:	80 95       	com	r24
    1eb2:	90 95       	com	r25
    1eb4:	8e 0f       	add	r24, r30
    1eb6:	9f 1f       	adc	r25, r31
    1eb8:	08 95       	ret

00001eba <strnlen>:
    1eba:	fc 01       	movw	r30, r24
    1ebc:	61 50       	subi	r22, 0x01	; 1
    1ebe:	70 40       	sbci	r23, 0x00	; 0
    1ec0:	01 90       	ld	r0, Z+
    1ec2:	01 10       	cpse	r0, r1
    1ec4:	d8 f7       	brcc	.-10     	; 0x1ebc <strnlen+0x2>
    1ec6:	80 95       	com	r24
    1ec8:	90 95       	com	r25
    1eca:	8e 0f       	add	r24, r30
    1ecc:	9f 1f       	adc	r25, r31
    1ece:	08 95       	ret

00001ed0 <fputc>:
    1ed0:	0f 93       	push	r16
    1ed2:	1f 93       	push	r17
    1ed4:	cf 93       	push	r28
    1ed6:	df 93       	push	r29
    1ed8:	fb 01       	movw	r30, r22
    1eda:	23 81       	ldd	r18, Z+3	; 0x03
    1edc:	21 fd       	sbrc	r18, 1
    1ede:	03 c0       	rjmp	.+6      	; 0x1ee6 <fputc+0x16>
    1ee0:	8f ef       	ldi	r24, 0xFF	; 255
    1ee2:	9f ef       	ldi	r25, 0xFF	; 255
    1ee4:	2c c0       	rjmp	.+88     	; 0x1f3e <fputc+0x6e>
    1ee6:	22 ff       	sbrs	r18, 2
    1ee8:	16 c0       	rjmp	.+44     	; 0x1f16 <fputc+0x46>
    1eea:	46 81       	ldd	r20, Z+6	; 0x06
    1eec:	57 81       	ldd	r21, Z+7	; 0x07
    1eee:	24 81       	ldd	r18, Z+4	; 0x04
    1ef0:	35 81       	ldd	r19, Z+5	; 0x05
    1ef2:	42 17       	cp	r20, r18
    1ef4:	53 07       	cpc	r21, r19
    1ef6:	44 f4       	brge	.+16     	; 0x1f08 <fputc+0x38>
    1ef8:	a0 81       	ld	r26, Z
    1efa:	b1 81       	ldd	r27, Z+1	; 0x01
    1efc:	9d 01       	movw	r18, r26
    1efe:	2f 5f       	subi	r18, 0xFF	; 255
    1f00:	3f 4f       	sbci	r19, 0xFF	; 255
    1f02:	31 83       	std	Z+1, r19	; 0x01
    1f04:	20 83       	st	Z, r18
    1f06:	8c 93       	st	X, r24
    1f08:	26 81       	ldd	r18, Z+6	; 0x06
    1f0a:	37 81       	ldd	r19, Z+7	; 0x07
    1f0c:	2f 5f       	subi	r18, 0xFF	; 255
    1f0e:	3f 4f       	sbci	r19, 0xFF	; 255
    1f10:	37 83       	std	Z+7, r19	; 0x07
    1f12:	26 83       	std	Z+6, r18	; 0x06
    1f14:	14 c0       	rjmp	.+40     	; 0x1f3e <fputc+0x6e>
    1f16:	8b 01       	movw	r16, r22
    1f18:	ec 01       	movw	r28, r24
    1f1a:	fb 01       	movw	r30, r22
    1f1c:	00 84       	ldd	r0, Z+8	; 0x08
    1f1e:	f1 85       	ldd	r31, Z+9	; 0x09
    1f20:	e0 2d       	mov	r30, r0
    1f22:	09 95       	icall
    1f24:	89 2b       	or	r24, r25
    1f26:	e1 f6       	brne	.-72     	; 0x1ee0 <fputc+0x10>
    1f28:	d8 01       	movw	r26, r16
    1f2a:	16 96       	adiw	r26, 0x06	; 6
    1f2c:	8d 91       	ld	r24, X+
    1f2e:	9c 91       	ld	r25, X
    1f30:	17 97       	sbiw	r26, 0x07	; 7
    1f32:	01 96       	adiw	r24, 0x01	; 1
    1f34:	17 96       	adiw	r26, 0x07	; 7
    1f36:	9c 93       	st	X, r25
    1f38:	8e 93       	st	-X, r24
    1f3a:	16 97       	sbiw	r26, 0x06	; 6
    1f3c:	ce 01       	movw	r24, r28
    1f3e:	df 91       	pop	r29
    1f40:	cf 91       	pop	r28
    1f42:	1f 91       	pop	r17
    1f44:	0f 91       	pop	r16
    1f46:	08 95       	ret

00001f48 <printf>:
    1f48:	a0 e0       	ldi	r26, 0x00	; 0
    1f4a:	b0 e0       	ldi	r27, 0x00	; 0
    1f4c:	ea ea       	ldi	r30, 0xAA	; 170
    1f4e:	ff e0       	ldi	r31, 0x0F	; 15
    1f50:	0c 94 f7 0d 	jmp	0x1bee	; 0x1bee <__prologue_saves__+0x20>
    1f54:	ae 01       	movw	r20, r28
    1f56:	4b 5f       	subi	r20, 0xFB	; 251
    1f58:	5f 4f       	sbci	r21, 0xFF	; 255
    1f5a:	fa 01       	movw	r30, r20
    1f5c:	61 91       	ld	r22, Z+
    1f5e:	71 91       	ld	r23, Z+
    1f60:	af 01       	movw	r20, r30
    1f62:	80 91 81 05 	lds	r24, 0x0581	; 0x800581 <__iob+0x2>
    1f66:	90 91 82 05 	lds	r25, 0x0582	; 0x800582 <__iob+0x3>
    1f6a:	0e 94 6a 0a 	call	0x14d4	; 0x14d4 <vfprintf>
    1f6e:	e2 e0       	ldi	r30, 0x02	; 2
    1f70:	0c 94 13 0e 	jmp	0x1c26	; 0x1c26 <__epilogue_restores__+0x20>

00001f74 <__ultoa_invert>:
    1f74:	fa 01       	movw	r30, r20
    1f76:	aa 27       	eor	r26, r26
    1f78:	28 30       	cpi	r18, 0x08	; 8
    1f7a:	51 f1       	breq	.+84     	; 0x1fd0 <__ultoa_invert+0x5c>
    1f7c:	20 31       	cpi	r18, 0x10	; 16
    1f7e:	81 f1       	breq	.+96     	; 0x1fe0 <__ultoa_invert+0x6c>
    1f80:	e8 94       	clt
    1f82:	6f 93       	push	r22
    1f84:	6e 7f       	andi	r22, 0xFE	; 254
    1f86:	6e 5f       	subi	r22, 0xFE	; 254
    1f88:	7f 4f       	sbci	r23, 0xFF	; 255
    1f8a:	8f 4f       	sbci	r24, 0xFF	; 255
    1f8c:	9f 4f       	sbci	r25, 0xFF	; 255
    1f8e:	af 4f       	sbci	r26, 0xFF	; 255
    1f90:	b1 e0       	ldi	r27, 0x01	; 1
    1f92:	3e d0       	rcall	.+124    	; 0x2010 <__ultoa_invert+0x9c>
    1f94:	b4 e0       	ldi	r27, 0x04	; 4
    1f96:	3c d0       	rcall	.+120    	; 0x2010 <__ultoa_invert+0x9c>
    1f98:	67 0f       	add	r22, r23
    1f9a:	78 1f       	adc	r23, r24
    1f9c:	89 1f       	adc	r24, r25
    1f9e:	9a 1f       	adc	r25, r26
    1fa0:	a1 1d       	adc	r26, r1
    1fa2:	68 0f       	add	r22, r24
    1fa4:	79 1f       	adc	r23, r25
    1fa6:	8a 1f       	adc	r24, r26
    1fa8:	91 1d       	adc	r25, r1
    1faa:	a1 1d       	adc	r26, r1
    1fac:	6a 0f       	add	r22, r26
    1fae:	71 1d       	adc	r23, r1
    1fb0:	81 1d       	adc	r24, r1
    1fb2:	91 1d       	adc	r25, r1
    1fb4:	a1 1d       	adc	r26, r1
    1fb6:	20 d0       	rcall	.+64     	; 0x1ff8 <__ultoa_invert+0x84>
    1fb8:	09 f4       	brne	.+2      	; 0x1fbc <__ultoa_invert+0x48>
    1fba:	68 94       	set
    1fbc:	3f 91       	pop	r19
    1fbe:	2a e0       	ldi	r18, 0x0A	; 10
    1fc0:	26 9f       	mul	r18, r22
    1fc2:	11 24       	eor	r1, r1
    1fc4:	30 19       	sub	r19, r0
    1fc6:	30 5d       	subi	r19, 0xD0	; 208
    1fc8:	31 93       	st	Z+, r19
    1fca:	de f6       	brtc	.-74     	; 0x1f82 <__ultoa_invert+0xe>
    1fcc:	cf 01       	movw	r24, r30
    1fce:	08 95       	ret
    1fd0:	46 2f       	mov	r20, r22
    1fd2:	47 70       	andi	r20, 0x07	; 7
    1fd4:	40 5d       	subi	r20, 0xD0	; 208
    1fd6:	41 93       	st	Z+, r20
    1fd8:	b3 e0       	ldi	r27, 0x03	; 3
    1fda:	0f d0       	rcall	.+30     	; 0x1ffa <__ultoa_invert+0x86>
    1fdc:	c9 f7       	brne	.-14     	; 0x1fd0 <__ultoa_invert+0x5c>
    1fde:	f6 cf       	rjmp	.-20     	; 0x1fcc <__ultoa_invert+0x58>
    1fe0:	46 2f       	mov	r20, r22
    1fe2:	4f 70       	andi	r20, 0x0F	; 15
    1fe4:	40 5d       	subi	r20, 0xD0	; 208
    1fe6:	4a 33       	cpi	r20, 0x3A	; 58
    1fe8:	18 f0       	brcs	.+6      	; 0x1ff0 <__ultoa_invert+0x7c>
    1fea:	49 5d       	subi	r20, 0xD9	; 217
    1fec:	31 fd       	sbrc	r19, 1
    1fee:	40 52       	subi	r20, 0x20	; 32
    1ff0:	41 93       	st	Z+, r20
    1ff2:	02 d0       	rcall	.+4      	; 0x1ff8 <__ultoa_invert+0x84>
    1ff4:	a9 f7       	brne	.-22     	; 0x1fe0 <__ultoa_invert+0x6c>
    1ff6:	ea cf       	rjmp	.-44     	; 0x1fcc <__ultoa_invert+0x58>
    1ff8:	b4 e0       	ldi	r27, 0x04	; 4
    1ffa:	a6 95       	lsr	r26
    1ffc:	97 95       	ror	r25
    1ffe:	87 95       	ror	r24
    2000:	77 95       	ror	r23
    2002:	67 95       	ror	r22
    2004:	ba 95       	dec	r27
    2006:	c9 f7       	brne	.-14     	; 0x1ffa <__ultoa_invert+0x86>
    2008:	00 97       	sbiw	r24, 0x00	; 0
    200a:	61 05       	cpc	r22, r1
    200c:	71 05       	cpc	r23, r1
    200e:	08 95       	ret
    2010:	9b 01       	movw	r18, r22
    2012:	ac 01       	movw	r20, r24
    2014:	0a 2e       	mov	r0, r26
    2016:	06 94       	lsr	r0
    2018:	57 95       	ror	r21
    201a:	47 95       	ror	r20
    201c:	37 95       	ror	r19
    201e:	27 95       	ror	r18
    2020:	ba 95       	dec	r27
    2022:	c9 f7       	brne	.-14     	; 0x2016 <__ultoa_invert+0xa2>
    2024:	62 0f       	add	r22, r18
    2026:	73 1f       	adc	r23, r19
    2028:	84 1f       	adc	r24, r20
    202a:	95 1f       	adc	r25, r21
    202c:	a0 1d       	adc	r26, r0
    202e:	08 95       	ret

00002030 <__divmodsi4>:
    2030:	05 2e       	mov	r0, r21
    2032:	97 fb       	bst	r25, 7
    2034:	1e f4       	brtc	.+6      	; 0x203c <__divmodsi4+0xc>
    2036:	00 94       	com	r0
    2038:	0e 94 2f 10 	call	0x205e	; 0x205e <__negsi2>
    203c:	57 fd       	sbrc	r21, 7
    203e:	07 d0       	rcall	.+14     	; 0x204e <__divmodsi4_neg2>
    2040:	0e 94 4a 10 	call	0x2094	; 0x2094 <__udivmodsi4>
    2044:	07 fc       	sbrc	r0, 7
    2046:	03 d0       	rcall	.+6      	; 0x204e <__divmodsi4_neg2>
    2048:	4e f4       	brtc	.+18     	; 0x205c <__divmodsi4_exit>
    204a:	0c 94 2f 10 	jmp	0x205e	; 0x205e <__negsi2>

0000204e <__divmodsi4_neg2>:
    204e:	50 95       	com	r21
    2050:	40 95       	com	r20
    2052:	30 95       	com	r19
    2054:	21 95       	neg	r18
    2056:	3f 4f       	sbci	r19, 0xFF	; 255
    2058:	4f 4f       	sbci	r20, 0xFF	; 255
    205a:	5f 4f       	sbci	r21, 0xFF	; 255

0000205c <__divmodsi4_exit>:
    205c:	08 95       	ret

0000205e <__negsi2>:
    205e:	90 95       	com	r25
    2060:	80 95       	com	r24
    2062:	70 95       	com	r23
    2064:	61 95       	neg	r22
    2066:	7f 4f       	sbci	r23, 0xFF	; 255
    2068:	8f 4f       	sbci	r24, 0xFF	; 255
    206a:	9f 4f       	sbci	r25, 0xFF	; 255
    206c:	08 95       	ret

0000206e <__muluhisi3>:
    206e:	0e 94 6c 10 	call	0x20d8	; 0x20d8 <__umulhisi3>
    2072:	a5 9f       	mul	r26, r21
    2074:	90 0d       	add	r25, r0
    2076:	b4 9f       	mul	r27, r20
    2078:	90 0d       	add	r25, r0
    207a:	a4 9f       	mul	r26, r20
    207c:	80 0d       	add	r24, r0
    207e:	91 1d       	adc	r25, r1
    2080:	11 24       	eor	r1, r1
    2082:	08 95       	ret

00002084 <__mulshisi3>:
    2084:	b7 ff       	sbrs	r27, 7
    2086:	0c 94 37 10 	jmp	0x206e	; 0x206e <__muluhisi3>

0000208a <__mulohisi3>:
    208a:	0e 94 37 10 	call	0x206e	; 0x206e <__muluhisi3>
    208e:	82 1b       	sub	r24, r18
    2090:	93 0b       	sbc	r25, r19
    2092:	08 95       	ret

00002094 <__udivmodsi4>:
    2094:	a1 e2       	ldi	r26, 0x21	; 33
    2096:	1a 2e       	mov	r1, r26
    2098:	aa 1b       	sub	r26, r26
    209a:	bb 1b       	sub	r27, r27
    209c:	fd 01       	movw	r30, r26
    209e:	0d c0       	rjmp	.+26     	; 0x20ba <__udivmodsi4_ep>

000020a0 <__udivmodsi4_loop>:
    20a0:	aa 1f       	adc	r26, r26
    20a2:	bb 1f       	adc	r27, r27
    20a4:	ee 1f       	adc	r30, r30
    20a6:	ff 1f       	adc	r31, r31
    20a8:	a2 17       	cp	r26, r18
    20aa:	b3 07       	cpc	r27, r19
    20ac:	e4 07       	cpc	r30, r20
    20ae:	f5 07       	cpc	r31, r21
    20b0:	20 f0       	brcs	.+8      	; 0x20ba <__udivmodsi4_ep>
    20b2:	a2 1b       	sub	r26, r18
    20b4:	b3 0b       	sbc	r27, r19
    20b6:	e4 0b       	sbc	r30, r20
    20b8:	f5 0b       	sbc	r31, r21

000020ba <__udivmodsi4_ep>:
    20ba:	66 1f       	adc	r22, r22
    20bc:	77 1f       	adc	r23, r23
    20be:	88 1f       	adc	r24, r24
    20c0:	99 1f       	adc	r25, r25
    20c2:	1a 94       	dec	r1
    20c4:	69 f7       	brne	.-38     	; 0x20a0 <__udivmodsi4_loop>
    20c6:	60 95       	com	r22
    20c8:	70 95       	com	r23
    20ca:	80 95       	com	r24
    20cc:	90 95       	com	r25
    20ce:	9b 01       	movw	r18, r22
    20d0:	ac 01       	movw	r20, r24
    20d2:	bd 01       	movw	r22, r26
    20d4:	cf 01       	movw	r24, r30
    20d6:	08 95       	ret

000020d8 <__umulhisi3>:
    20d8:	a2 9f       	mul	r26, r18
    20da:	b0 01       	movw	r22, r0
    20dc:	b3 9f       	mul	r27, r19
    20de:	c0 01       	movw	r24, r0
    20e0:	a3 9f       	mul	r26, r19
    20e2:	70 0d       	add	r23, r0
    20e4:	81 1d       	adc	r24, r1
    20e6:	11 24       	eor	r1, r1
    20e8:	91 1d       	adc	r25, r1
    20ea:	b2 9f       	mul	r27, r18
    20ec:	70 0d       	add	r23, r0
    20ee:	81 1d       	adc	r24, r1
    20f0:	11 24       	eor	r1, r1
    20f2:	91 1d       	adc	r25, r1
    20f4:	08 95       	ret

000020f6 <_exit>:
    20f6:	f8 94       	cli

000020f8 <__stop_program>:
    20f8:	ff cf       	rjmp	.-2      	; 0x20f8 <__stop_program>
